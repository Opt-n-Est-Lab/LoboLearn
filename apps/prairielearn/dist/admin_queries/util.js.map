{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/admin_queries/util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEvC,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,UAAU,EAAE,MAAM,wBAAwB,CAAC;AAEpD,MAAM,CAAC,MAAM,8BAA8B,GAAG,CAAC,CAAC,MAAM,CAAC;IACrD,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE;IAC/B,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE;CAC5B,CAAC,CAAC;AAGH,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAC1C,OAAe,EACf,MAA8B;IAE9B,MAAM,GAAG,GAAG,MAAM,QAAQ,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,EAAE;QAChF,QAAQ,EAAE,MAAM;KACjB,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAC7C,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;AAClF,CAAC","sourcesContent":["import { readFile } from 'fs/promises';\n\nimport { z } from 'zod';\n\nimport { queryAsync } from '@prairielearn/postgres';\n\nexport const AdministratorQueryResultSchema = z.object({\n  rows: z.record(z.any()).array(),\n  columns: z.string().array(),\n});\nexport type AdministratorQueryResult = z.infer<typeof AdministratorQueryResultSchema>;\n\nexport async function runLegacySqlAdminQuery(\n  metaUrl: string,\n  params: Record<string, string>,\n): Promise<AdministratorQueryResult> {\n  const sql = await readFile(new URL(metaUrl.replace(/\\.[jt]s$/, '.sql')).pathname, {\n    encoding: 'utf8',\n  });\n  const result = await queryAsync(sql, params);\n  return { rows: result.rows, columns: result.fields.map((field) => field.name) };\n}\n"]}