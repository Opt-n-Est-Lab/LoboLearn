{"version":3,"file":"batchDeleteQuestions.js","sourceRoot":"","sources":["../../../../../src/api/trpc/routers/course-files/batchDeleteQuestions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEjE,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAC;AACvE,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAE,gBAAgB,EAAE,MAAM,8BAA8B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAE9D,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE1C,MAAM,CAAC,MAAM,oBAAoB,GAAG,gBAAgB;KACjD,KAAK,CACJ,CAAC,CAAC,MAAM,CAAC;IACP,WAAW;IACX,SAAS,EAAE,QAAQ;IACnB,OAAO,EAAE,QAAQ;IACjB,aAAa,EAAE,QAAQ;IACvB,0BAA0B,EAAE,CAAC,CAAC,OAAO,EAAE;IAEvC,iBAAiB;IACjB,YAAY,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;CAChC,CAAC,CACH;KACA,MAAM,CACL,CAAC,CAAC,KAAK,CAAC;IACN,CAAC,CAAC,MAAM,CAAC;QACP,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;QAC5B,eAAe,EAAE,CAAC,CAAC,MAAM,EAAE;KAC5B,CAAC;IACF,CAAC,CAAC,MAAM,CAAC;QACP,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC;QAC1B,eAAe,EAAE,CAAC,CAAC,MAAM,EAAE;KAC5B,CAAC;CACH,CAAC,CACH;KACA,QAAQ,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;IACvB,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAC5D,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,MAAM,WAAW,CAAC;QAC7C,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO;QAC3B,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa;KACxC,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,MAAM,SAAS,CAC/B,GAAG,CAAC,qCAAqC,EACzC;QACE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY;QACrC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS;KAChC,EACD,cAAc,CACf,CAAC;IAEF,MAAM,MAAM,GAAG,IAAI,oBAAoB,CAAC;QACtC,MAAM,EAAE;YACN,UAAU,EAAE;gBACV,0BAA0B,EAAE,IAAI,CAAC,KAAK,CAAC,0BAA0B;gBACjE,UAAU;aACX;YACD,MAAM;YACN,IAAI;SACL;QACD,SAAS;KACV,CAAC,CAAC;IAEH,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAElD,IAAI,CAAC;QACH,MAAM,MAAM,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IAAC,MAAM,CAAC;QACP,OAAO;YACL,MAAM,EAAE,OAAO;YACf,eAAe,EAAE,SAAS,CAAC,aAAa;SACzC,CAAC;IACJ,CAAC;IAED,OAAO;QACL,MAAM,EAAE,SAAS;QACjB,eAAe,EAAE,SAAS,CAAC,aAAa;KACzC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nimport { loadSqlEquiv, queryRows } from '@prairielearn/postgres';\n\nimport { IdSchema, QuestionSchema } from '../../../../lib/db-types.js';\nimport { QuestionDeleteEditor } from '../../../../lib/editors.js';\nimport { selectCourseById } from '../../../../models/course.js';\nimport { privateProcedure, selectUsers } from '../../trpc.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nexport const batchDeleteQuestions = privateProcedure\n  .input(\n    z.object({\n      // Context.\n      course_id: IdSchema,\n      user_id: IdSchema,\n      authn_user_id: IdSchema,\n      has_course_permission_edit: z.boolean(),\n\n      // Question data.\n      question_ids: z.array(IdSchema),\n    }),\n  )\n  .output(\n    z.union([\n      z.object({\n        status: z.literal('success'),\n        job_sequence_id: z.string(),\n      }),\n      z.object({\n        status: z.literal('error'),\n        job_sequence_id: z.string(),\n      }),\n    ]),\n  )\n  .mutation(async (opts) => {\n    const course = await selectCourseById(opts.input.course_id);\n    const { user, authn_user } = await selectUsers({\n      user_id: opts.input.user_id,\n      authn_user_id: opts.input.authn_user_id,\n    });\n\n    const questions = await queryRows(\n      sql.select_questions_by_ids_and_course_id,\n      {\n        question_ids: opts.input.question_ids,\n        course_id: opts.input.course_id,\n      },\n      QuestionSchema,\n    );\n\n    const editor = new QuestionDeleteEditor({\n      locals: {\n        authz_data: {\n          has_course_permission_edit: opts.input.has_course_permission_edit,\n          authn_user,\n        },\n        course,\n        user,\n      },\n      questions,\n    });\n\n    const serverJob = await editor.prepareServerJob();\n\n    try {\n      await editor.executeWithServerJob(serverJob);\n    } catch {\n      return {\n        status: 'error',\n        job_sequence_id: serverJob.jobSequenceId,\n      };\n    }\n\n    return {\n      status: 'success',\n      job_sequence_id: serverJob.jobSequenceId,\n    };\n  });\n"]}