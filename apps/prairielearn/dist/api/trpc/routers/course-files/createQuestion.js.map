{"version":3,"file":"createQuestion.js","sourceRoot":"","sources":["../../../../../src/api/trpc/routers/course-files/createQuestion.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { IdSchema } from '../../../../lib/db-types.js';\nimport { QuestionAddEditor } from '../../../../lib/editors.js';\nimport { selectCourseById } from '../../../../models/course.js';\nimport { selectQuestionByUuid } from '../../../../models/question.js';\nimport { privateProcedure, selectUsers } from '../../trpc.js';\n\nexport const createQuestion = privateProcedure\n  .input(\n    z.object({\n      // Context.\n      course_id: IdSchema,\n      user_id: IdSchema,\n      authn_user_id: IdSchema,\n      has_course_permission_edit: z.boolean(),\n\n      // Question data.\n      qid: z.string().optional(),\n      title: z.string().optional(),\n      template_qid: z.string().optional(),\n      files: z.record(z.string()).optional(),\n      is_draft: z.boolean().optional(),\n    }),\n  )\n  .output(\n    z.union([\n      z.object({\n        status: z.literal('success'),\n        job_sequence_id: z.string(),\n        question_id: z.string(),\n        question_qid: z.string(),\n      }),\n      z.object({\n        status: z.literal('error'),\n        job_sequence_id: z.string(),\n      }),\n    ]),\n  )\n  .mutation(async (opts) => {\n    const course = await selectCourseById(opts.input.course_id);\n    const { user, authn_user } = await selectUsers({\n      user_id: opts.input.user_id,\n      authn_user_id: opts.input.authn_user_id,\n    });\n\n    const editor = new QuestionAddEditor({\n      locals: {\n        authz_data: {\n          has_course_permission_edit: opts.input.has_course_permission_edit,\n          authn_user,\n        },\n        course,\n        user,\n      },\n      files: opts.input.files,\n      qid: opts.input.qid,\n      title: opts.input.title,\n      template_qid: opts.input.template_qid,\n      isDraft: opts.input.is_draft,\n    });\n\n    const serverJob = await editor.prepareServerJob();\n\n    try {\n      await editor.executeWithServerJob(serverJob);\n    } catch {\n      return {\n        status: 'error',\n        job_sequence_id: serverJob.jobSequenceId,\n      };\n    }\n\n    const question = await selectQuestionByUuid({\n      course_id: course.id,\n      uuid: editor.uuid,\n    });\n\n    if (question.qid) {\n      return {\n        status: 'success',\n        job_sequence_id: serverJob.jobSequenceId,\n        question_id: question.id,\n        question_qid: question.qid,\n      };\n    } else {\n      return {\n        status: 'error',\n        job_sequence_id: serverJob.jobSequenceId,\n      };\n    }\n  });\n"]}