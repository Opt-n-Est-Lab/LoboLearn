{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/api/v1/endpoints/courseInstanceAssessments/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'node:path';\n\nimport { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nconst sql = sqldb.loadSql(path.join(import.meta.dirname, '..', 'queries.sql'));\nconst router = Router({ mergeParams: true });\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const result = await sqldb.queryOneRowAsync(sql.select_assessments, {\n      course_instance_id: res.locals.course_instance.id,\n      unsafe_assessment_id: null,\n    });\n    res.status(200).send(result.rows[0].item);\n  }),\n);\n\nrouter.get(\n  '/:unsafe_assessment_id(\\\\d+)',\n  asyncHandler(async (req, res) => {\n    const result = await sqldb.queryOneRowAsync(sql.select_assessments, {\n      course_instance_id: res.locals.course_instance.id,\n      unsafe_assessment_id: req.params.unsafe_assessment_id,\n    });\n    const data = result.rows[0].item;\n    if (data.length === 0) {\n      res.status(404).send({\n        message: 'Not Found',\n      });\n    } else {\n      res.status(200).send(data[0]);\n    }\n  }),\n);\n\nrouter.get(\n  '/:unsafe_assessment_id(\\\\d+)/assessment_instances',\n  asyncHandler(async (req, res) => {\n    const result = await sqldb.queryOneRowAsync(sql.select_assessment_instances, {\n      course_instance_id: res.locals.course_instance.id,\n      unsafe_assessment_id: req.params.unsafe_assessment_id,\n      unsafe_assessment_instance_id: null,\n    });\n    res.status(200).send(result.rows[0].item);\n  }),\n);\n\nrouter.get(\n  '/:unsafe_assessment_id(\\\\d+)/assessment_access_rules',\n  asyncHandler(async (req, res) => {\n    const result = await sqldb.queryOneRowAsync(sql.select_assessment_access_rules, {\n      course_instance_id: res.locals.course_instance.id,\n      unsafe_assessment_id: req.params.unsafe_assessment_id,\n    });\n    res.status(200).send(result.rows[0].item);\n  }),\n);\n\nexport default router;\n"]}