{"version":3,"file":"20240320000007_workspaces__disk_usage_bytes__backfill.js","sourceRoot":"","sources":["../../src/batched-migrations/20240320000007_workspaces__disk_usage_bytes__backfill.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;AAChE,OAAO,EAAE,gBAAgB,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AACrE,OAAO,EAAE,wBAAwB,EAAE,MAAM,+BAA+B,CAAC;AAEzE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAErD,eAAe,oBAAoB,CAAC;IAClC,KAAK,CAAC,aAAa;QACjB,MAAM,MAAM,GAAG,MAAM,gBAAgB,CAAC,wCAAwC,EAAE,EAAE,CAAC,CAAC;QACpF,OAAO;YACL,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;YACvB,SAAS,EAAE,GAAG;SACf,CAAC;IACJ,CAAC;IACD,KAAK,CAAC,OAAO,CAAC,GAAW,EAAE,GAAW;QACpC,+DAA+D;QAC/D,MAAM,UAAU,GAAG,MAAM,SAAS,CAChC,uFAAuF,EACvF,EAAE,GAAG,EAAE,GAAG,EAAE,EACZ,eAAe,CAChB,CAAC;QAEF,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE,CAAC;YACnC,MAAM,wBAAwB,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,oBAAoB,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { makeBatchedMigration } from '@prairielearn/migrations';\nimport { queryOneRowAsync, queryRows } from '@prairielearn/postgres';\nimport { updateWorkspaceDiskUsage } from '@prairielearn/workspace-utils';\n\nimport { config } from '../lib/config.js';\nimport { WorkspaceSchema } from '../lib/db-types.js';\n\nexport default makeBatchedMigration({\n  async getParameters() {\n    const result = await queryOneRowAsync('SELECT MAX(id) as max from workspaces;', {});\n    return {\n      min: 1n,\n      max: result.rows[0].max,\n      batchSize: 100,\n    };\n  },\n  async execute(min: bigint, max: bigint): Promise<void> {\n    // We skip all workspaces that already have a disk usage value.\n    const workspaces = await queryRows(\n      'SELECT * FROM workspaces WHERE id >= $min AND id <= $max AND disk_usage_bytes IS NULL',\n      { min, max },\n      WorkspaceSchema,\n    );\n\n    for (const workspace of workspaces) {\n      await updateWorkspaceDiskUsage(workspace.id, config.workspaceHomeDirRoot);\n    }\n  },\n});\n"]}