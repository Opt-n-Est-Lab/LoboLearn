{"version":3,"file":"EditQuestionPointsScore.html.js","sourceRoot":"","sources":["../../src/components/EditQuestionPointsScore.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAEtD,OAAO,EAAkD,MAAM,oBAAoB,CAAC;AAIpF,SAAS,SAAS,CAAC,KAAoB;IACrC,OAAO;QACL,MAAM,EAAE,QAAQ;QAChB,WAAW,EAAE,aAAa;QAC1B,aAAa,EAAE,eAAe;QAC9B,UAAU,EAAE,kBAAkB;KAC/B,CAAC,KAAK,CAAC,CAAC;AACX,CAAC;AAED,MAAM,UAAU,6BAA6B,CAAC,EAC5C,KAAK,EACL,iBAAiB,EACjB,mBAAmB,EACnB,SAAS,EACT,SAAS,GAOV;IACC,MAAM,QAAQ,GAAG,2BAA2B,CAAC;QAC3C,KAAK;QACL,iBAAiB;QACjB,mBAAmB;QACnB,SAAS;QACT,SAAS;KACV,CAAC,CAAC;IAEH,OAAO,IAAI,CAAA;;;;;;;kCAOqB,SAAS,CAAC,KAAK,CAAC;uBAC3B,UAAU,CAAC,QAAQ,CAAC;qDACU,KAAK;;;YAG9C,CAAC;AACb,CAAC;AAED,SAAS,2BAA2B,CAAC,EACnC,KAAK,EACL,iBAAiB,EACjB,mBAAmB,EACnB,SAAS,EACT,SAAS,GAOV;IACC,MAAM,gBAAgB,GAAG,GAAG,SAAS,eAAe,mBAAmB,CAAC,aAAa,qCAAqC,iBAAiB,CAAC,EAAE,EAAE,CAAC;IACjJ,wEAAwE;IACxE,4EAA4E;IAC5E,uEAAuE;IACvE,IAAI,mBAAmB,CAAC,gBAAgB,IAAI,IAAI,IAAI,iBAAiB,CAAC,MAAM,KAAK,YAAY,EAAE,CAAC;QAC9F,OAAO,IAAI,CAAA;;;;qBAIM,gBAAgB;;;;;;KAMhC,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,aAAa,EAAE,SAAS,CAAC,GAAG;QACjC,MAAM,EAAE,CAAC,iBAAiB,CAAC,MAAM,EAAE,mBAAmB,CAAC,UAAU,CAAC;QAClE,aAAa,EAAE,CAAC,iBAAiB,CAAC,aAAa,EAAE,mBAAmB,CAAC,iBAAiB,CAAC;QACvF,WAAW,EAAE,CAAC,iBAAiB,CAAC,WAAW,EAAE,mBAAmB,CAAC,eAAe,CAAC;QACjF,UAAU,EAAE,CAAC,iBAAiB,CAAC,UAAU,EAAE,GAAG,CAAC;KAChD,CAAC,KAAK,CAAC,CAAC;IAET,OAAO,IAAI,CAAA;;;wDAG2C,SAAS;gEACD,iBAAiB,CAAC,EAAE;uDAC7B,iBAAiB,CAAC,WAAW,CAAC,QAAQ,EAAE;;;;;;;;oBAQ3E,KAAK;qBACJ,aAAa;0BACR,SAAS,CAAC,KAAK,CAAC;;;cAG5B,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC,EAAE;;;;;;;;YAQrD,iBAAiB,CAAC,MAAM,KAAK,YAAY;QACzC,CAAC,CAAC,IAAI,CAAA;2BACS,gBAAgB,oCAAoC;QACnE,CAAC,CAAC,EAAE;;;;;;;;GAQb,CAAC;AACJ,CAAC","sourcesContent":["import { escapeHtml, html } from '@prairielearn/html';\n\nimport { type AssessmentQuestion, type InstanceQuestion } from '../lib/db-types.js';\n\ntype EditableField = 'points' | 'auto_points' | 'manual_points' | 'score_perc';\n\nfunction findLabel(field: EditableField) {\n  return {\n    points: 'points',\n    auto_points: 'auto points',\n    manual_points: 'manual points',\n    score_perc: 'score percentage',\n  }[field];\n}\n\nexport function EditQuestionPointsScoreButton({\n  field,\n  instance_question,\n  assessment_question,\n  urlPrefix,\n  csrfToken,\n}: {\n  field: 'points' | 'auto_points' | 'manual_points' | 'score_perc';\n  instance_question: Omit<InstanceQuestion, 'modified_at'> & { modified_at: string };\n  assessment_question: AssessmentQuestion;\n  urlPrefix: string;\n  csrfToken: string;\n}) {\n  const editForm = EditQuestionPointsScoreForm({\n    field,\n    instance_question,\n    assessment_question,\n    urlPrefix,\n    csrfToken,\n  });\n\n  return html`<button\n    type=\"button\"\n    class=\"btn btn-xs btn-secondary\"\n    data-bs-toggle=\"popover\"\n    data-bs-container=\"body\"\n    data-bs-html=\"true\"\n    data-bs-placement=\"auto\"\n    aria-label=\"Change question ${findLabel(field)}\"\n    data-bs-content=\"${escapeHtml(editForm)}\"\n    data-testid=\"edit-question-points-score-button-${field}\"\n  >\n    <i class=\"fa fa-edit\" aria-hidden=\"true\"></i>\n  </button>`;\n}\n\nfunction EditQuestionPointsScoreForm({\n  field,\n  instance_question,\n  assessment_question,\n  urlPrefix,\n  csrfToken,\n}: {\n  field: 'points' | 'auto_points' | 'manual_points' | 'score_perc';\n  instance_question: Omit<InstanceQuestion, 'modified_at'> & { modified_at: string };\n  assessment_question: AssessmentQuestion;\n  urlPrefix: string;\n  csrfToken: string;\n}) {\n  const manualGradingUrl = `${urlPrefix}/assessment/${assessment_question.assessment_id}/manual_grading/instance_question/${instance_question.id}`;\n  // If the question is configured to use rubrics, don't allow editing the\n  // points, unless there is no submission, in which case we allow editing the\n  // points manually since the manual grading page will not be available.\n  if (assessment_question.manual_rubric_id != null && instance_question.status !== 'unanswered') {\n    return html`\n      <div>\n        <p>\n          This question is configured to use rubrics for grading. Changes must be performed in\n          <a href=\"${manualGradingUrl}\">the manual grading page</a>.\n        </p>\n        <div class=\"text-right\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"popover\">Cancel</button>\n        </div>\n      </div>\n    `;\n  }\n  const [pointsOrScore, maxPoints] = {\n    points: [instance_question.points, assessment_question.max_points],\n    manual_points: [instance_question.manual_points, assessment_question.max_manual_points],\n    auto_points: [instance_question.auto_points, assessment_question.max_auto_points],\n    score_perc: [instance_question.score_perc, 100],\n  }[field];\n\n  return html`\n    <form name=\"edit-points-form\" method=\"POST\">\n      <input type=\"hidden\" name=\"__action\" value=\"edit_question_points\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <input type=\"hidden\" name=\"instance_question_id\" value=\"${instance_question.id}\" />\n      <input type=\"hidden\" name=\"modified_at\" value=\"${instance_question.modified_at.toString()}\" />\n      <div class=\"mb-3\">\n        <div class=\"input-group\">\n          <input\n            type=\"number\"\n            required\n            step=\"any\"\n            class=\"form-control\"\n            name=\"${field}\"\n            value=\"${pointsOrScore}\"\n            aria-label=\"${findLabel(field)}\"\n          />\n          <span class=\"input-group-text\">\n            ${field === 'score_perc' ? '%' : `/${maxPoints ?? 0}`}\n          </span>\n        </div>\n      </div>\n      <p>\n        <small>\n          This will also recalculate the total points and total score at 100% credit. This change\n          will be overwritten if the question is answered again by the student.\n          ${instance_question.status !== 'unanswered'\n            ? html`You may also update the score\n                <a href=\"${manualGradingUrl}\">via the manual grading page</a>.`\n            : ''}\n        </small>\n      </p>\n      <div class=\"text-right\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"popover\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\">Change</button>\n      </div>\n    </form>\n  `;\n}\n"]}