{"version":3,"file":"GroupWorkInfoContainer.html.js","sourceRoot":"","sources":["../../src/components/GroupWorkInfoContainer.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport type { GroupConfig } from '../lib/db-types.js';\nimport type { GroupInfo } from '../lib/groups.js';\nimport { idsEqual } from '../lib/id.js';\n\nimport { Modal } from './Modal.html.js';\n\nexport function GroupWorkInfoContainer({\n  groupConfig,\n  groupInfo,\n  userCanAssignRoles,\n  csrfToken,\n}: {\n  groupConfig: GroupConfig;\n  groupInfo: GroupInfo;\n  userCanAssignRoles: boolean;\n  csrfToken: string;\n}) {\n  return html`\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-sm bg-light py-4 px-4 border\">\n          <div>\n            <strong>Group name:</strong> <span id=\"group-name\">${groupInfo.groupName}</span>\n          </div>\n          ${groupConfig.student_authz_join\n            ? html`\n                <div>\n                  <strong>Join code:</strong> <span id=\"join-code\">${groupInfo.joinCode}</span>\n                </div>\n                <div class=\"mt-3\">\n                  ${(groupConfig.minimum ?? 0) > 1\n                    ? html`\n                        This is a group assessment. Use your join code to invite others to join the\n                        group. A group must have\n                        ${groupConfig.minimum === groupConfig.maximum\n                          ? groupConfig.minimum\n                          : groupConfig.maximum\n                            ? `between ${groupConfig.minimum} and ${groupConfig.maximum}`\n                            : `at least ${groupConfig.minimum}`}\n                        students.\n                      `\n                    : html`\n                        This assessment can be done individually or in groups. Use your join code if\n                        you wish to invite others to join the group.\n                        ${groupConfig.maximum\n                          ? `A group must have no more than ${groupConfig.maximum} students.`\n                          : ''}\n                      `}\n                </div>\n              `\n            : ''}\n        </div>\n        <div class=\"col-sm bg-light py-4 px-4 border\">\n          ${groupConfig.student_authz_leave\n            ? html`\n                <div class=\"text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-danger\"\n                    data-bs-toggle=\"modal\"\n                    data-bs-target=\"#leaveGroupModal\"\n                  >\n                    Leave the Group\n                  </button>\n                </div>\n                ${LeaveGroupModal({ csrfToken })}\n              `\n            : ''}\n          <span id=\"group-member\"><b>Group members: </b></span>\n          ${groupInfo.groupMembers.map((user) =>\n            groupConfig.has_roles\n              ? html`\n                  <li>\n                    ${user.uid} -\n                    ${groupInfo.rolesInfo?.roleAssignments[user.uid]\n                      ?.map((a) => a.role_name)\n                      .join(', ') || 'No role assigned'}\n                  </li>\n                `\n              : html`<li>${user.uid}</li>`,\n          )}\n        </div>\n      </div>\n    </div>\n    ${groupConfig.has_roles ? GroupRoleTable({ groupInfo, userCanAssignRoles, csrfToken }) : ''}\n  `;\n}\n\nfunction LeaveGroupModal({ csrfToken }: { csrfToken: string }) {\n  return Modal({\n    id: 'leaveGroupModal',\n    title: 'Confirm leave group',\n    body: html`\n      <p>Are you sure you want to leave the group?</p>\n      <p>\n        You will lose access to any work done by the group and you might not be able to re-join\n        later.\n      </p>\n    `,\n    footer: html`\n      <input type=\"hidden\" name=\"__action\" value=\"leave_group\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n      <button id=\"leave-group\" type=\"submit\" class=\"btn btn-danger\">Leave group</button>\n    `,\n  });\n}\n\nfunction GroupRoleTable({\n  groupInfo,\n  userCanAssignRoles,\n  csrfToken,\n}: {\n  groupInfo: GroupInfo;\n  userCanAssignRoles: boolean;\n  csrfToken: string;\n}) {\n  const { rolesInfo, groupMembers, groupSize } = groupInfo;\n  if (!rolesInfo) return '';\n  const roleConfigProblems =\n    rolesInfo.validationErrors.length +\n    (rolesInfo.usersWithoutRoles.length > 0 ? 1 : 0) +\n    (rolesInfo.rolesAreBalanced ? 0 : 1);\n  return html`\n    ${roleConfigProblems > 0\n      ? html`\n          <div class=\"alert alert-danger mt-2\" role=\"alert\">\n            Your group's role configuration is currently invalid. Please review the role\n            requirements and\n            ${userCanAssignRoles\n              ? 'assign a valid role configuration'\n              : 'ask a user with an assigner role to update the role configuration'}.\n            Question submissions are disabled until the role configuration is valid.\n          </div>\n        `\n      : ''}\n    <details class=\"card mb-2\">\n      <summary class=\"card-header bg-secondary text-light\">\n        ${userCanAssignRoles ? 'Manage group roles' : 'View group roles'}\n        ${roleConfigProblems > 0\n          ? html`\n              <span\n                class=\"badge rounded-pill text-bg-danger\"\n                data-testid=\"group-role-config-problems\"\n              >\n                ${roleConfigProblems}\n              </span>\n            `\n          : ''}\n      </summary>\n      <div class=\"card-body\">\n        ${GroupRoleErrors({ rolesInfo, groupSize })}\n        <p>\n          This assessment contains group roles, which selectively allow students to view questions,\n          submit answers, and change group role assignments.\n        </p>\n\n        <form id=\"role-select-form\" name=\"role-select-form\" method=\"POST\">\n          <table\n            class=\"table table-bordered table-striped table-sm\"\n            aria-label=\"Group users and roles\"\n          >\n            <thead>\n              <tr>\n                <th scope=\"col\">User</th>\n                <th scope=\"col\">Roles</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${groupMembers.map(\n                (user) => html`\n                  <tr>\n                    <td>${user.uid}</td>\n                    <td>\n                      ${rolesInfo.groupRoles.map(\n                        (role) => html`\n                          <label\n                            class=\"ms-2 ${rolesInfo.disabledRoles.includes(role.role_name)\n                              ? 'text-muted'\n                              : ''}\"\n                          >\n                            <input\n                              type=\"checkbox\"\n                              id=\"user_role_${role.id}-${user.user_id}\"\n                              name=\"user_role_${role.id}-${user.user_id}\"\n                              ${rolesInfo.disabledRoles.includes(role.role_name) ||\n                              !userCanAssignRoles\n                                ? 'disabled'\n                                : ''}\n                              ${rolesInfo.roleAssignments[user.uid]?.some((a) =>\n                                idsEqual(a.group_role_id, role.id),\n                              )\n                                ? 'checked'\n                                : ''}\n                            />\n                            ${role.role_name}\n                          </label>\n                        `,\n                      )}\n                    </td>\n                  </tr>\n                `,\n              )}\n            </tbody>\n          </table>\n          ${userCanAssignRoles\n            ? html`\n                <div class=\"d-flex justify-content-center\">\n                  <input type=\"hidden\" name=\"__action\" value=\"update_group_roles\" />\n                  <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n                  <button type=\"submit\" class=\"btn btn-primary\">Update Roles</button>\n                </div>\n              `\n            : ''}\n        </form>\n      </div>\n      <div class=\"card-footer small\">\n        <table\n          class=\"table table-bordered table-striped table-sm w-auto\"\n          aria-label=\"Role requirements and restrictions\"\n        >\n          <thead>\n            <tr>\n              <th scope=\"col\">Role</th>\n              <th scope=\"col\">Minimum assignments</th>\n              <th scope=\"col\">Maximum assignments</th>\n              <th scope=\"col\">Can assign roles</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${rolesInfo.groupRoles.map(\n              (groupRole) => html`\n                <tr>\n                  <td>${groupRole.role_name}</td>\n                  <td>${groupRole.minimum ?? 0}</td>\n                  <td>${groupRole.maximum ?? 'Unlimited'}</td>\n                  <td>${groupRole.can_assign_roles ? 'Yes' : 'No'}</td>\n                </tr>\n              `,\n            )}\n          </tbody>\n        </table>\n      </div>\n    </details>\n  `;\n}\n\nfunction GroupRoleErrors({\n  rolesInfo,\n  groupSize,\n}: {\n  rolesInfo: NonNullable<GroupInfo['rolesInfo']>;\n  groupSize: number;\n}) {\n  return html`\n    ${!rolesInfo.rolesAreBalanced\n      ? html`\n          <div class=\"alert alert-danger\" role=\"alert\">\n            At least one student has too many roles. In a group with ${groupSize} students, every\n            student must be assigned to exactly <strong>one</strong> role.\n          </div>\n        `\n      : ''}\n    ${rolesInfo.validationErrors?.map(\n      ({ role_name, count, minimum, maximum }) => html`\n        <div class=\"alert alert-danger\" role=\"alert\">\n          ${minimum != null && count < minimum\n            ? html`\n                ${minimum - count} more ${minimum - count === 1 ? 'student needs' : 'students need'}\n                to be assigned to the role \"${role_name}\"\n              `\n            : maximum != null && count > maximum\n              ? html`\n                  ${count - maximum} less\n                  ${count - maximum === 1 ? 'student needs' : 'students need'} to be assigned to the\n                  role \"${role_name}\"\n                `\n              : ''}\n          ${maximum === minimum\n            ? html` (${count} assigned, ${minimum} expected). `\n            : maximum == null\n              ? html` (${count} assigned, at least ${minimum} expected). `\n              : html` (${count} assigned, between ${minimum ?? 0} and ${maximum} expected). `}\n        </div>\n      `,\n    )}\n    ${rolesInfo.usersWithoutRoles?.length > 0\n      ? html`\n          <div class=\"alert alert-danger\" role=\"alert\">\n            At least one user does not have a role. All users must have a role.\n          </div>\n        `\n      : ''}\n  `;\n}\n"]}