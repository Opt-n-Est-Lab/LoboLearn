{"version":3,"file":"InstructorInfoPanel.html.js","sourceRoot":"","sources":["../../src/components/InstructorInfoPanel.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAC;AACrE,OAAO,EAAkB,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1D,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAKL,iBAAiB,EAGjB,cAAc,GAIf,MAAM,oBAAoB,CAAC;AAI5B,MAAM,UAAU,mBAAmB,CAAC,EAClC,MAAM,EACN,eAAe,EACf,UAAU,EACV,mBAAmB,EACnB,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,QAAQ,EACR,OAAO,EACP,cAAc,EACd,uBAAuB,EACvB,aAAa,EACb,UAAU,EACV,kBAAkB,EAClB,eAAe,EACf,SAAS,GAkBV;IACC,4EAA4E;IAC5E,4EAA4E;IAC5E,2EAA2E;IAC3E,sEAAsE;IACtE,6EAA6E;IAC7E,6EAA6E;IAC7E,iCAAiC;IACjC,IACE,eAAe,KAAK,QAAQ;QAC5B,CAAC,UAAU,CAAC,6BAA6B;QACzC,CAAC,UAAU,CAAC,mCAAmC,EAC/C,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,QAAQ,GAAG,eAAe,EAAE,gBAAgB,IAAI,MAAM,CAAC,gBAAgB,CAAC;IAE9E,OAAO,IAAI,CAAA;;;;;QAKL,SAAS,CAAC;QACV,gBAAgB,CAAC,EAAE,aAAa,EAAE,cAAc,EAAE,uBAAuB,EAAE,CAAC;QAC5E,YAAY,CAAC;YACX,MAAM;YACN,eAAe;YACf,QAAQ;YACR,OAAO;YACP,kBAAkB;YAClB,eAAe;SAChB,CAAC;QACF,WAAW,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC;QACnD,iBAAiB,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;QAC1D,sBAAsB,CAAC,EAAE,UAAU,EAAE,mBAAmB,EAAE,QAAQ,EAAE,CAAC;QACrE,iBAAiB,CAAC;YAChB,iBAAiB;YACjB,cAAc;YACd,UAAU;YACV,UAAU;YACV,eAAe;SAChB,CAAC;KACH,CAAC;;;GAGL,CAAC;AACJ,CAAC;AAED,SAAS,SAAS,CAAC,QAAqB;IACtC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAE7D,OAAO,IAAI,CAAA;;QAEL,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA,qCAAqC,KAAK,QAAQ,CAAC;;GAE5F,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,EACxB,aAAa,EACb,cAAc,EACd,uBAAuB,GAKxB;IACC,IAAI,aAAa,IAAI,IAAI,IAAI,cAAc,IAAI,IAAI;QAAE,OAAO,EAAE,CAAC;IAC/D,OAAO,IAAI,CAAA;;;UAGH,cAAc,IAAI,IAAI;QACtB,CAAC,CAAC,IAAI,CAAA;;;oCAGoB,cAAc,CAAC,IAAI;qCAClB,uBAAuB,EAAE,IAAI,CAAC,IAAI,CAAC;;aAE3D;QACH,CAAC,CAAC,IAAI,CAAA;;;oCAGoB,aAAa,EAAE,IAAI;oCACnB,aAAa,EAAE,GAAG;;aAEzC;;;GAGV,CAAC;AACJ,CAAC;AAED,SAAS,YAAY,CAAC,EACpB,MAAM,EACN,eAAe,EACf,QAAQ,EACR,OAAO,EACP,kBAAkB,EAClB,eAAe,GAQhB;IACC,IAAI,QAAQ,IAAI,IAAI,IAAI,OAAO,IAAI,IAAI;QAAE,OAAO,EAAE,CAAC;IAEnD,MAAM,kBAAkB,GAAG,GAAG,MAAM,CAAC,SAAS,IAC5C,eAAe,IAAI,IAAI;QACrB,CAAC,CAAC,mBAAmB,eAAe,CAAC,EAAE,aAAa;QACpD,CAAC,CAAC,UAAU,MAAM,CAAC,EAAE,EACzB,aAAa,QAAQ,CAAC,EAAE,iBAAiB,OAAO,CAAC,YAAY,EAAE,CAAC;IAChE,MAAM,gBAAgB,GAAG,GAAG,MAAM,CAAC,SAAS,kBAAkB,QAAQ,CAAC,SAAS,aAAa,QAAQ,CAAC,EAAE,UAAU,CAAC;IAEnH,0EAA0E;IAC1E,0EAA0E;IAC1E,EAAE;IACF,2EAA2E;IAC3E,wEAAwE;IACxE,2EAA2E;IAC3E,MAAM,UAAU,GACd,MAAM,CAAC,cAAc,IAAI,CAAC,QAAQ,CAAC,cAAc;QAC/C,CAAC,CAAC,QAAQ,CAAC,GAAG;QACd,CAAC,CAAC,IAAI,MAAM,CAAC,YAAY,IAAI,QAAQ,CAAC,GAAG,EAAE,CAAC;IAEhD,OAAO,IAAI,CAAA;;;;;;UAMH,eAAe,KAAK,QAAQ;QAC5B,CAAC,CAAC,IAAI,CAAA,YAAY,gBAAgB,iBAAiB,OAAO,CAAC,YAAY;gBACjE,UAAU;iBACT;QACP,CAAC,CAAC,IAAI,CAAA,YAAY,kBAAkB,KAAK,QAAQ,CAAC,GAAG,MAAM;;;;MAI/D,kBAAkB,IAAI,MAAM,CAAC,YAAY,IAAI,eAAe,KAAK,QAAQ;QACzE,CAAC,CAAC,IAAI,CAAA;;;cAGE,QAAQ,CAAC,cAAc,IAAI,QAAQ,CAAC,qBAAqB;YACzD,CAAC,CAAC,IAAI,CAAA;;+BAEW,gBAAgB,KAAK,UAAU;;iBAE7C;YACH,CAAC,CAAC,IAAI,CAAA,QAAQ,UAAU,QAAQ;;SAErC;QACH,CAAC,CAAC,EAAE;;;aAGG,QAAQ,CAAC,KAAK;;GAExB,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,EACnB,OAAO,EACP,QAAQ,EACR,eAAe,GAKhB;IACC,IAAI,OAAO,IAAI,IAAI;QAAE,OAAO,EAAE,CAAC;IAE/B,sGAAsG;IACtG,MAAM,QAAQ,GACZ,OAAO,OAAO,CAAC,QAAQ,KAAK,QAAQ;QAClC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;QACxC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC9B,MAAM,IAAI,GACR,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;IAE1F,OAAO,IAAI,CAAA;;MAEP,eAAe,KAAK,QAAQ;QAC5B,CAAC,CAAC,IAAI,CAAA;;;mBAGO,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW;;;;mBAI/C,cAAc,CAAC,QAAQ,CAAC;;SAElC;QACH,CAAC,CAAC,EAAE;;;;uCAI6B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;;;GAGhF,CAAC;AACJ,CAAC;AAED,SAAS,sBAAsB,CAAC,EAC9B,UAAU,EACV,mBAAmB,EACnB,QAAQ,GAKT;IACC,IAAI,UAAU,IAAI,IAAI,IAAI,mBAAmB,IAAI,IAAI;QAAE,OAAO,EAAE,CAAC;IAEjE,MAAM,mBAAmB,GAAG,GAAG,MAAM,CAAC,SAAS,oBAAoB,UAAU,CAAC,kBAAkB,aAAa,CAAC;IAE9G,sGAAsG;IACtG,MAAM,QAAQ,GACZ,OAAO,mBAAmB,CAAC,QAAQ,KAAK,QAAQ;QAC9C,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,mBAAmB,CAAC,QAAQ,CAAC;QACpD,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,IAAI,CAAC,CAAC,CAAC;IAC1C,MAAM,IAAI,GACR,OAAO,mBAAmB,CAAC,IAAI,KAAK,QAAQ;QAC1C,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC,mBAAmB,CAAC,IAAI,CAAC;QACnD,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC;IAE/B,OAAO,IAAI,CAAA;;;;;mBAKM,mBAAmB,eAAe,UAAU,CAAC,EAAE,KAAK,UAAU,CAAC,GAAG;;;;;;aAMxE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW;;;;;aAK/C,cAAc,CAAC,QAAQ,CAAC;;;;iBAIpB,mBAAmB,wBAAwB,mBAAmB,CAAC,EAAE;;GAE/E,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,EACzB,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,UAAU,EACV,eAAe,GAOhB;IACC,IACE,iBAAiB,IAAI,IAAI;QACzB,UAAU,IAAI,IAAI;QAClB,iBAAiB,CAAC,MAAM,KAAK,YAAY,EACzC,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,gBAAgB,GAAG,GAAG,MAAM,CAAC,SAAS,oBAAoB,UAAU,CAAC,kBAAkB,0BAA0B,UAAU,CAAC,EAAE,qCAAqC,iBAAiB,CAAC,EAAE,EAAE,CAAC;IAEhM,OAAO,IAAI,CAAA;;;;;aAKA,iBAAiB,CAAC,uBAAuB,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,QAAQ;;;MAGhF,iBAAiB,CAAC,uBAAuB;QACzC,CAAC,CAAC,IAAI,CAAA;;;;gBAII,cAAc,EAAE,IAAI;YACpB,CAAC,CAAC,GAAG,cAAc,CAAC,IAAI,KAAK,cAAc,CAAC,GAAG,GAAG;YAClD,CAAC,CAAC,CAAC,cAAc,EAAE,GAAG,IAAI,YAAY,CAAC;;;SAG9C;QACH,CAAC,CAAC,EAAE;MACJ,UAAU;QACV,CAAC,CAAC,IAAI,CAAA;;;;gBAII,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,KAAK,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG;;;SAGlF;QACH,CAAC,CAAC,EAAE;MACJ,eAAe,KAAK,gBAAgB;QACpC,CAAC,CAAC,IAAI,CAAA;;uBAEW,gBAAgB;;SAE9B;QACH,CAAC,CAAC,EAAE;GACP,CAAC;AACJ,CAAC;AAED,SAAS,iBAAiB,CAAC,EACzB,OAAO,EACP,SAAS,EACT,eAAe,GAKhB;IACC,IACE,OAAO,IAAI,IAAI;QACf,eAAe,KAAK,cAAc;QAClC,eAAe,KAAK,kBAAkB;QACtC,eAAe,KAAK,QAAQ,EAC5B,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;0DAsB6C,OAAO,CAAC,EAAE;0DACV,SAAS;;;;;;GAMhE,CAAC;AACJ,CAAC","sourcesContent":["import { formatDate, formatInterval } from '@prairielearn/formatter';\nimport { type HtmlValue, html } from '@prairielearn/html';\n\nimport { config } from '../lib/config.js';\nimport {\n  type Assessment,\n  type AssessmentInstance,\n  type Course,\n  type CourseInstance,\n  DateFromISOString,\n  type Group,\n  type InstanceQuestion,\n  IntervalSchema,\n  type Question,\n  type User,\n  type Variant,\n} from '../lib/db-types.js';\n\nimport type { QuestionContext } from './QuestionContainer.types.js';\n\nexport function InstructorInfoPanel({\n  course,\n  course_instance,\n  assessment,\n  assessment_instance,\n  instance_question,\n  assignedGrader,\n  lastGrader,\n  question,\n  variant,\n  instance_group,\n  instance_group_uid_list,\n  instance_user,\n  authz_data,\n  question_is_shared,\n  questionContext,\n  csrfToken,\n}: {\n  course: Course;\n  course_instance?: CourseInstance;\n  assessment?: Assessment;\n  assessment_instance?: AssessmentInstance;\n  instance_question?: InstanceQuestion;\n  assignedGrader?: User | null;\n  lastGrader?: User | null;\n  question?: Question;\n  variant?: Variant;\n  instance_group?: Group | null;\n  instance_group_uid_list?: string[] | null;\n  instance_user?: User | null;\n  authz_data: Record<string, any>;\n  question_is_shared?: boolean;\n  questionContext: QuestionContext;\n  csrfToken: string;\n}) {\n  // Here, we are only checking if the effective user is an instructor. We are\n  // not attempting to check if this user has permission to view student data.\n  // That check would have already been made (when necessary) before granting\n  // access to the page on which this partial is included (an assessment\n  // instance or question instance). We don't need this check when the question\n  // is being previewed publicly because the public preview page already checks\n  // for the necessary permissions.\n  if (\n    questionContext !== 'public' &&\n    !authz_data.has_course_permission_preview &&\n    !authz_data.has_course_instance_permission_view\n  ) {\n    return '';\n  }\n\n  const timeZone = course_instance?.display_timezone ?? course.display_timezone;\n\n  return html`\n    <div class=\"card mb-3 border-warning\">\n      <div class=\"card-header bg-warning\">\n        <h2>Staff information</h2>\n      </div>\n      ${ListGroup([\n        InstanceUserInfo({ instance_user, instance_group, instance_group_uid_list }),\n        QuestionInfo({\n          course,\n          course_instance,\n          question,\n          variant,\n          question_is_shared,\n          questionContext,\n        }),\n        VariantInfo({ variant, timeZone, questionContext }),\n        IssueReportButton({ variant, csrfToken, questionContext }),\n        AssessmentInstanceInfo({ assessment, assessment_instance, timeZone }),\n        ManualGradingInfo({\n          instance_question,\n          assignedGrader,\n          lastGrader,\n          assessment,\n          questionContext,\n        }),\n      ])}\n      <div class=\"card-footer small\">This box is not visible to students.</div>\n    </div>\n  `;\n}\n\nfunction ListGroup(children: HtmlValue[]) {\n  const filteredChildren = children.filter((child) => !!child);\n\n  return html`\n    <div class=\"list-group list-group-flush\">\n      ${filteredChildren.map((child) => html`<div class=\"list-group-item py-3\">${child}</div>`)}\n    </div>\n  `;\n}\n\nfunction InstanceUserInfo({\n  instance_user,\n  instance_group,\n  instance_group_uid_list,\n}: {\n  instance_user?: User | null;\n  instance_group?: Group | null;\n  instance_group_uid_list?: string[] | null;\n}) {\n  if (instance_user == null && instance_group == null) return '';\n  return html`\n    <div>\n      <details>\n        ${instance_group != null\n          ? html`\n              <summary><h3 class=\"card-title h5\">Group details</h3></summary>\n              <div class=\"d-flex flex-wrap\">\n                <div class=\"pe-1\">${instance_group.name}</div>\n                <div class=\"pe-1\">(${instance_group_uid_list?.join(', ')})</div>\n              </div>\n            `\n          : html`\n              <summary><h3 class=\"card-title d-inline-block h5 mb-0\">Student details</h3></summary>\n              <div class=\"d-flex flex-wrap mt-2\">\n                <div class=\"pe-1\">${instance_user?.name}</div>\n                <div class=\"pe-1\">${instance_user?.uid}</div>\n              </div>\n            `}\n      </details>\n    </div>\n  `;\n}\n\nfunction QuestionInfo({\n  course,\n  course_instance,\n  question,\n  variant,\n  question_is_shared,\n  questionContext,\n}: {\n  course: Course;\n  course_instance?: CourseInstance;\n  question?: Question;\n  variant?: Variant;\n  question_is_shared?: boolean;\n  questionContext: QuestionContext;\n}) {\n  if (question == null || variant == null) return '';\n\n  const questionPreviewUrl = `${config.urlPrefix}/${\n    course_instance != null\n      ? `course_instance/${course_instance.id}/instructor`\n      : `course/${course.id}`\n  }/question/${question.id}?variant_seed=${variant.variant_seed}`;\n  const publicPreviewUrl = `${config.urlPrefix}/public/course/${question.course_id}/question/${question.id}/preview`;\n\n  // We don't show the sharing name in the QID if the question is not shared\n  // publicly for importing, such as if only `share_source_publicly` is set.\n  //\n  // TODO: Remove the special-casing of the example course once its questions\n  // have been updated to use `share_source_publicly`. This special-casing\n  // predates the ability to share questions only for copying, not importing.\n  const sharingQid =\n    course.example_course || !question.share_publicly\n      ? question.qid\n      : `@${course.sharing_name}/${question.qid}`;\n\n  return html`\n    <h3 class=\"card-title h5\">Question</h3>\n\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pe-1\">QID:</div>\n      <div>\n        ${questionContext === 'public'\n          ? html`<a href=\"${publicPreviewUrl}?variant_seed=${variant.variant_seed}\">\n              ${sharingQid}\n            </a>`\n          : html`<a href=\"${questionPreviewUrl}\">${question.qid}</a>`}\n      </div>\n    </div>\n\n    ${question_is_shared && course.sharing_name && questionContext !== 'public'\n      ? html`\n          <div class=\"d-flex flex-wrap\">\n            <div class=\"pe-1\">Shared As:</div>\n            ${question.share_publicly || question.share_source_publicly\n              ? html`\n                  <div>\n                    <a href=\"${publicPreviewUrl}\">${sharingQid}</a>\n                  </div>\n                `\n              : html`<div>${sharingQid}</div>`}\n          </div>\n        `\n      : ''}\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pe-1\">Title:</div>\n      <div>${question.title}</div>\n    </div>\n  `;\n}\n\nfunction VariantInfo({\n  variant,\n  timeZone,\n  questionContext,\n}: {\n  variant?: Variant;\n  timeZone: string;\n  questionContext: QuestionContext;\n}) {\n  if (variant == null) return '';\n\n  // Some legacy queries still return the duration and date as a string, so parse them before formatting\n  const duration =\n    typeof variant.duration === 'string'\n      ? IntervalSchema.parse(variant.duration)\n      : (variant.duration ?? 0);\n  const date =\n    typeof variant.date === 'string' ? DateFromISOString.parse(variant.date) : variant.date;\n\n  return html`\n    <h3 class=\"card-title h5\">Variant</h3>\n    ${questionContext !== 'public'\n      ? html`\n          <div class=\"d-flex flex-wrap\">\n            <div class=\"pe-1\">Started at:</div>\n            <div>${date ? formatDate(date, timeZone) : '(unknown)'}</div>\n          </div>\n          <div class=\"d-flex flex-wrap\">\n            <div class=\"pe-1\">Duration:</div>\n            <div>${formatInterval(duration)}</div>\n          </div>\n        `\n      : ''}\n    <div class=\"d-flex flex-wrap\">\n      <details class=\"pe-1\">\n        <summary>Show/Hide answer</summary>\n        <pre class=\"mt-2 mb-0\"><code>${JSON.stringify(variant.true_answer, null, 2)}</code></pre>\n      </details>\n    </div>\n  `;\n}\n\nfunction AssessmentInstanceInfo({\n  assessment,\n  assessment_instance,\n  timeZone,\n}: {\n  assessment?: Assessment;\n  assessment_instance?: AssessmentInstance;\n  timeZone: string;\n}) {\n  if (assessment == null || assessment_instance == null) return '';\n\n  const instructorUrlPrefix = `${config.urlPrefix}/course_instance/${assessment.course_instance_id}/instructor`;\n\n  // Some legacy queries still return the duration and date as a string, so parse them before formatting\n  const duration =\n    typeof assessment_instance.duration === 'string'\n      ? IntervalSchema.parse(assessment_instance.duration)\n      : (assessment_instance.duration ?? 0);\n  const date =\n    typeof assessment_instance.date === 'string'\n      ? DateFromISOString.parse(assessment_instance.date)\n      : assessment_instance.date;\n\n  return html`\n    <h3 class=\"card-title h5\">Assessment instance</h3>\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pe-1\">AID:</div>\n      <div>\n        <a href=\"${instructorUrlPrefix}/assessment/${assessment.id}\">${assessment.tid}</a>\n      </div>\n    </div>\n\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pe-1\">Started at:</div>\n      <div>${date ? formatDate(date, timeZone) : '(unknown)'}</div>\n    </div>\n\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pe-1\">Duration:</div>\n      <div>${formatInterval(duration)}</div>\n    </div>\n\n    <div class=\"pb-2\">\n      <a href=\"${instructorUrlPrefix}/assessment_instance/${assessment_instance.id}\">View log</a>\n    </div>\n  `;\n}\n\nfunction ManualGradingInfo({\n  instance_question,\n  assignedGrader,\n  lastGrader,\n  assessment,\n  questionContext,\n}: {\n  instance_question?: InstanceQuestion | null;\n  assignedGrader?: User | null;\n  lastGrader?: User | null;\n  assessment?: Assessment | null;\n  questionContext: QuestionContext;\n}) {\n  if (\n    instance_question == null ||\n    assessment == null ||\n    instance_question.status === 'unanswered'\n  ) {\n    return '';\n  }\n\n  const manualGradingUrl = `${config.urlPrefix}/course_instance/${assessment.course_instance_id}/instructor/assessment/${assessment.id}/manual_grading/instance_question/${instance_question.id}`;\n\n  return html`\n    <h3 class=\"card-title h5\">Manual grading</h3>\n\n    <div class=\"d-flex flex-wrap\">\n      <div class=\"pe-1\">Status:</div>\n      <div>${instance_question.requires_manual_grading ? 'Requires grading' : 'Graded'}</div>\n    </div>\n\n    ${instance_question.requires_manual_grading\n      ? html`\n          <div class=\"d-flex flex-wrap\">\n            <div class=\"pe-1\">Assigned to:</div>\n            <div>\n              ${assignedGrader?.name\n                ? `${assignedGrader.name} (${assignedGrader.uid})`\n                : (assignedGrader?.uid ?? 'Unassigned')}\n            </div>\n          </div>\n        `\n      : ''}\n    ${lastGrader\n      ? html`\n          <div class=\"d-flex flex-wrap\">\n            <div class=\"pe-1\">Graded by:</div>\n            <div>\n              ${lastGrader.name ? `${lastGrader.name} (${lastGrader.uid})` : lastGrader.uid}\n            </div>\n          </div>\n        `\n      : ''}\n    ${questionContext !== 'manual_grading'\n      ? html`\n          <div class=\"pb-2\">\n            <a href=\"${manualGradingUrl}\">Grade</a>\n          </div>\n        `\n      : ''}\n  `;\n}\n\nfunction IssueReportButton({\n  variant,\n  csrfToken,\n  questionContext,\n}: {\n  variant?: Variant | null;\n  csrfToken: string;\n  questionContext: QuestionContext;\n}) {\n  if (\n    variant == null ||\n    questionContext === 'student_exam' ||\n    questionContext === 'student_homework' ||\n    questionContext === 'public'\n  ) {\n    return '';\n  }\n\n  return html`\n    <button\n      class=\"btn btn-sm btn-primary\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#issueCollapse\"\n      aria-expanded=\"false\"\n      aria-controls=\"issueCollapse\"\n    >\n      Report an issue with this question\n    </button>\n    <div class=\"collapse\" id=\"issueCollapse\">\n      <form method=\"POST\" class=\"mt-3\">\n        <div class=\"mb-3\">\n          <textarea\n            class=\"form-control\"\n            rows=\"5\"\n            name=\"description\"\n            placeholder=\"Describe the issue\"\n            required\n          ></textarea>\n        </div>\n        <input type=\"hidden\" name=\"__variant_id\" value=\"${variant.id}\" />\n        <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n        <button type=\"submit\" class=\"btn btn-sm btn-warning\" name=\"__action\" value=\"report_issue\">\n          Report issue\n        </button>\n      </form>\n    </div>\n  `;\n}\n"]}