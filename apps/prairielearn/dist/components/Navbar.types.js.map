{"version":3,"file":"Navbar.types.js","sourceRoot":"","sources":["../../src/components/Navbar.types.ts"],"names":[],"mappings":"","sourcesContent":["import type { HtmlValue } from '@prairielearn/html';\n\nexport type NavbarType =\n  | 'plain'\n  | 'student'\n  | 'instructor'\n  | 'administrator_institution'\n  | 'institution'\n  | 'public'\n  | undefined;\n\nexport type NavPage =\n  | 'public_assessment'\n  | 'public_question'\n  | 'public_questions'\n  | 'instance_admin'\n  | 'course_admin'\n  | 'assessment'\n  | 'question'\n  | 'admin'\n  | 'administrator_institution'\n  | 'institution_admin'\n  | 'assessments'\n  | 'gradebook'\n  | 'assessment_instance'\n  | 'effective'\n  | 'lti13_course_navigation'\n  | 'error'\n  | 'enroll'\n  | 'request_course'\n  | 'home'\n  | 'news_item'\n  | 'news_items'\n  | 'user_settings'\n  | 'password'\n  | undefined;\n\n// This type is provisionally very lenient, to avoid problems with existing\n// code. A future version where navSubPage is more strictly defined can set\n// this to a more specific enum-like type.\nexport type NavSubPage = string | undefined;\n\nexport interface NavContext {\n  type: NavbarType;\n  page: NavPage;\n  subPage?: NavSubPage;\n}\n\nexport interface TabInfo {\n  activeSubPage: NavSubPage | NavSubPage[];\n  urlSuffix: string | ((resLocals: Record<string, any>) => string);\n  iconClasses: string;\n  tabLabel: string;\n  htmlSuffix?: (resLocals: Record<string, any>) => HtmlValue;\n  renderCondition?: (resLocals: Record<string, any>) => boolean;\n}\n"]}