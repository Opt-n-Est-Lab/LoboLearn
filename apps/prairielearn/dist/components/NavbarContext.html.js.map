{"version":3,"file":"NavbarContext.html.js","sourceRoot":"","sources":["../../src/components/NavbarContext.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAEvD,OAAO,EAA+C,MAAM,mBAAmB,CAAC;AAEhF,MAAM,UAAU,iBAAiB,CAAC,EAChC,SAAS,EACT,OAAO,EACP,UAAU,GAKX;IACC,IAAI,CAAC,OAAO;QAAE,OAAO,EAAE,CAAC;IAExB,MAAM,YAAY,GAAG,cAAc,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;IACvE,MAAM,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IAE1C,iCAAiC;IACjC,IAAI,CAAC,WAAW;QAAE,OAAO,EAAE,CAAC;IAE5B,OAAO,IAAI,CAAA;;;;;;;;;;;;UAYH,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;;;GAGlF,CAAC;AACJ,CAAC;AAED,SAAS,SAAS,CAAC,EACjB,UAAU,EACV,SAAS,EACT,OAAO,GAKR;IACC,MAAM,EAAE,SAAS,EAAE,GAAG,SAAS,CAAC;IAChC,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,OAAO,CAAC;IAEtF,IAAI,eAAe,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;QAAE,OAAO,EAAE,CAAC;IAEtE,MAAM,SAAS,GACb,OAAO,OAAO,CAAC,SAAS,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;IAE7F,MAAM,aAAa,GACjB,UAAU,KAAK,aAAa;QAC5B,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,UAAU,IAAI,IAAI,IAAI,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACxF,CAAC,CAAC,kBAAkB;QACpB,CAAC,CAAC,gBAAgB,CAAC;IAEvB,OAAO,IAAI,CAAA;;;oDAGuC,aAAa;gBACjD,SAAS,GAAG,SAAS;;yBAEZ,WAAW,SAAS,QAAQ,GAAG,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE;;;GAGlF,CAAC;AACJ,CAAC","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport { getNavPageTabs } from '../lib/navPageTabs.js';\n\nimport { type NavPage, type NavSubPage, type TabInfo } from './Navbar.types.js';\n\nexport function ContextNavigation({\n  resLocals,\n  navPage,\n  navSubPage,\n}: {\n  resLocals: Record<string, any>;\n  navPage: NavPage;\n  navSubPage: NavSubPage;\n}) {\n  if (!navPage) return '';\n\n  const navPagesTabs = getNavPageTabs(resLocals.has_enhanced_navigation);\n  const navPageTabs = navPagesTabs[navPage];\n\n  // Some navPages do not have tabs\n  if (!navPageTabs) return '';\n\n  return html`\n    <nav>\n      <ul\n        class=\"\n          nav \n          nav-tabs \n          pl-nav-tabs-bar \n          pt-2\n          px-3 \n          bg-light\n        \"\n      >\n        ${navPageTabs.map((tabInfo) => NavbarTab({ navSubPage, resLocals, tabInfo }))}\n      </ul>\n    </nav>\n  `;\n}\n\nfunction NavbarTab({\n  navSubPage,\n  resLocals,\n  tabInfo,\n}: {\n  navSubPage: NavSubPage;\n  resLocals: Record<string, any>;\n  tabInfo: TabInfo;\n}) {\n  const { urlPrefix } = resLocals;\n  const { activeSubPage, iconClasses, tabLabel, htmlSuffix, renderCondition } = tabInfo;\n\n  if (renderCondition != null && !renderCondition(resLocals)) return '';\n\n  const urlSuffix =\n    typeof tabInfo.urlSuffix === 'function' ? tabInfo.urlSuffix(resLocals) : tabInfo.urlSuffix;\n\n  const activeClasses =\n    navSubPage === activeSubPage ||\n    (Array.isArray(activeSubPage) && navSubPage != null && activeSubPage.includes(navSubPage))\n      ? 'active text-dark'\n      : 'text-secondary';\n\n  return html`\n    <li class=\"nav-item\">\n      <a\n        class=\"nav-link d-flex align-items-center ${activeClasses}\"\n        href=\"${urlPrefix}${urlSuffix}\"\n      >\n        <i class=\"me-1 ${iconClasses}\"></i>${tabLabel}${htmlSuffix?.(resLocals) || ''}\n      </a>\n    </li>\n  `;\n}\n"]}