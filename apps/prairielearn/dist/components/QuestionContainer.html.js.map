{"version":3,"file":"QuestionContainer.html.js","sourceRoot":"","sources":["../../src/components/QuestionContainer.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { EncodedData } from '@prairielearn/browser-utils';\nimport { escapeHtml, html, unsafeHtml } from '@prairielearn/html';\nimport { run } from '@prairielearn/run';\n\nimport { config } from '../lib/config.js';\nimport type {\n  AssessmentQuestion,\n  CourseInstance,\n  GroupConfig,\n  InstanceQuestion,\n  Issue,\n  Question,\n  User,\n  Variant,\n} from '../lib/db-types.js';\nimport { type GroupInfo, getRoleNamesForUser } from '../lib/groups.js';\nimport { idsEqual } from '../lib/id.js';\n\nimport { AiGradingHtmlPreview } from './AiGradingHtmlPreview.html.js';\nimport { Modal } from './Modal.html.js';\nimport type { QuestionContext, QuestionRenderContext } from './QuestionContainer.types.js';\nimport { type SubmissionForRender, SubmissionPanel } from './SubmissionPanel.html.js';\n\n// Only shows this many recent submissions by default\nconst MAX_TOP_RECENTS = 3;\n\nexport function QuestionContainer({\n  resLocals,\n  questionContext,\n  questionRenderContext,\n  showFooter = true,\n  manualGradingPreviewUrl,\n  aiGradingPreviewUrl,\n  renderSubmissionSearchParams,\n}: {\n  resLocals: Record<string, any>;\n  questionContext: QuestionContext;\n  questionRenderContext?: QuestionRenderContext;\n  showFooter?: boolean;\n  manualGradingPreviewUrl?: string;\n  aiGradingPreviewUrl?: string;\n  renderSubmissionSearchParams?: URLSearchParams;\n}) {\n  const {\n    question,\n    issues,\n    variant,\n    variantToken,\n    questionJsonBase64,\n    course_instance,\n    authz_data,\n    is_administrator,\n    showTrueAnswer,\n    submissions,\n    submissionHtmls,\n    answerHtml,\n  } = resLocals;\n\n  return html`\n    <div\n      class=\"question-container mb-4\"\n      data-grading-method=\"${question.grading_method}\"\n      data-variant-id=\"${variant.id}\"\n      data-variant-token=\"${variantToken}\"\n    >\n      ${question.type !== 'Freeform'\n        ? html`<div hidden class=\"question-data\">${questionJsonBase64}</div>`\n        : ''}\n      ${issues.map((issue) => IssuePanel({ issue, course_instance, authz_data, is_administrator }))}\n      ${question.type === 'Freeform'\n        ? html`\n            <form class=\"question-form\" name=\"question-form\" method=\"POST\" autocomplete=\"off\">\n              ${QuestionPanel({\n                resLocals,\n                questionContext,\n                questionRenderContext,\n                showFooter,\n                manualGradingPreviewUrl,\n                aiGradingPreviewUrl,\n              })}\n            </form>\n          `\n        : QuestionPanel({ resLocals, showFooter, questionContext })}\n      ${\n        // The correct answer isn't used when performing AI grading, so we hide\n        // it here to avoid confusion.\n        questionRenderContext !== 'ai_grading'\n          ? html`\n              <div class=\"card mb-3 grading-block${showTrueAnswer ? '' : ' d-none'}\">\n                <div class=\"card-header bg-secondary text-white\">\n                  <h2>Correct answer</h2>\n                </div>\n                <div class=\"card-body answer-body\">\n                  ${showTrueAnswer ? unsafeHtml(answerHtml) : ''}\n                </div>\n              </div>\n            `\n          : ''\n      }\n      ${submissions.length > 0\n        ? html`\n            ${SubmissionList({\n              resLocals,\n              questionContext,\n              questionRenderContext,\n              submissions: submissions.slice(0, MAX_TOP_RECENTS),\n              submissionHtmls,\n              submissionCount: submissions.length,\n              renderSubmissionSearchParams,\n            })}\n            ${submissions.length > MAX_TOP_RECENTS\n              ? html`\n                  <div class=\"mb-3 d-flex justify-content-center\">\n                    <button\n                      class=\"btn btn-outline-secondary btn-sm show-hide-btn collapsed\"\n                      type=\"button\"\n                      data-bs-toggle=\"collapse\"\n                      data-bs-target=\"#more-submissions-collapser\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"more-submissions-collapser\"\n                    >\n                      Show/hide older submissions\n                      <i class=\"fa fa-angle-up fa-fw ms-1 expand-icon\"></i>\n                    </button>\n                  </div>\n\n                  <div id=\"more-submissions-collapser\" class=\"collapse\">\n                    ${SubmissionList({\n                      resLocals,\n                      questionContext,\n                      questionRenderContext,\n                      submissions: submissions.slice(MAX_TOP_RECENTS),\n                      submissionHtmls: submissionHtmls.slice(MAX_TOP_RECENTS),\n                      submissionCount: submissions.length,\n                      renderSubmissionSearchParams,\n                    })}\n                  </div>\n                `\n              : ''}\n          `\n        : ''}\n    </div>\n    ${CopyQuestionModal({ resLocals })}\n  `;\n}\n\nexport function IssuePanel({\n  issue,\n  course_instance,\n  authz_data,\n  is_administrator,\n}: {\n  issue: Issue & {\n    user_name: User['name'];\n    user_email: User['email'];\n    user_uid: User['uid'];\n    formatted_date: string;\n  };\n  course_instance: CourseInstance;\n  authz_data: Record<string, any>;\n  is_administrator: boolean;\n}) {\n  // There are three situations in which the issue need not be anonymized:\n  //\n  //  1) The issue is not associated with a course instance. The only way\n  //     for a user to generate an issue that is not associated with a course\n  //     instance is if they are an instructor, so there are no student data\n  //     to be protected in this case.\n  //\n  //  2) We are accessing this page through a course instance, the issue is\n  //     associated with the same course instance, and the user has student\n  //     data view access.\n  //\n  // Otherwise, all issues must be anonymized.\n  const showUserName =\n    !issue.course_instance_id ||\n    (course_instance &&\n      idsEqual(course_instance.id, issue.course_instance_id) &&\n      authz_data.has_course_instance_permission_view);\n\n  const msgBody = `Hello ${issue.user_name}\\n\\nRegarding the issue of:\\n\\n\"${issue.student_message || '-'}\"\\n\\nWe've...`;\n  const mailtoLink = `mailto:${\n    issue.user_email || issue.user_uid || '-'\n  }?subject=Reported%20PrairieLearn%20Issue&body=${encodeURIComponent(msgBody)}`;\n\n  return html`\n    <div class=\"card mb-3\">\n      <div class=\"card-header bg-danger text-white\">\n        ${issue.manually_reported ? 'Manually reported issue' : 'Issue'}\n      </div>\n\n      <table\n        class=\"table table-sm table-hover two-column-description\"\n        aria-label=\"Issue information\"\n      >\n        <tbody>\n          ${showUserName\n            ? html`\n                <tr>\n                  <th>User:</th>\n                  <td>\n                    ${issue.user_name || '-'} (<a href=\"${mailtoLink}\">${issue.user_uid || '-'}</a>)\n                  </td>\n                </tr>\n                <tr>\n                  <th>Student message:</th>\n                  <td>${issue.student_message}</td>\n                </tr>\n                <tr>\n                  <th>Instructor message:</th>\n                  <td>${issue.instructor_message}</td>\n                </tr>\n              `\n            : authz_data.has_course_permission_preview\n              ? html`\n                  <tr>\n                    <th>Student message:</th>\n                    <td>${issue.student_message}</td>\n                  </tr>\n                  <tr>\n                    <th>Instructor message:</th>\n                    <td>${issue.instructor_message}</td>\n                  </tr>\n                `\n              : html`\n                  <tr>\n                    <th>Message:</th>\n                    <td>${issue.student_message}</td>\n                  </tr>\n                `}\n          <tr>\n            <th>ID:</th>\n            <td>${issue.id}</td>\n          </tr>\n          <tr>\n            <th>Date:</th>\n            <td>${issue.formatted_date}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      ${config.devMode || authz_data.has_course_permission_view\n        ? html`\n            <div class=\"card-body border border-bottom-0 border-start-0 border-end-0\">\n              ${issue.system_data?.courseErrData\n                ? html`\n                    <p><strong>Console log:</strong></p>\n                    <pre class=\"bg-dark text-white rounded p-3\">\n${issue.system_data.courseErrData.outputBoth}</pre\n                    >\n                  `\n                : ''}\n              <p>\n                <strong>Associated data:</strong>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-xs btn-secondary\"\n                  data-bs-toggle=\"collapse\"\n                  href=\"#issue-course-data-${issue.id}\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"#issue-course-data-${issue.id}\"\n                >\n                  Show/hide\n                </button>\n              </p>\n              <div class=\"collapse\" id=\"issue-course-data-${issue.id}\">\n                <pre class=\"bg-dark text-white rounded p-3\">\n${JSON.stringify(issue.course_data, null, '    ')}</pre\n                >\n              </div>\n              ${is_administrator\n                ? html`\n                    <p>\n                      <strong>System data:</strong>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-xs btn-secondary\"\n                        data-bs-toggle=\"collapse\"\n                        href=\"#issue-system-data-${issue.id}\"\n                        aria-expanded=\"false\"\n                        aria-controls=\"#issue-system-data-${issue.id}\"\n                      >\n                        Show/hide\n                      </button>\n                    </p>\n                    <div class=\"collapse\" id=\"issue-system-data-${issue.id}\">\n                      <pre class=\"bg-dark text-white rounded p-3\">\n${JSON.stringify(issue.system_data, null, '    ')}</pre\n                      >\n                    </div>\n                  `\n                : ''}\n            </div>\n          `\n        : ''}\n    </div>\n  `;\n}\n\nexport function QuestionTitle({\n  questionContext,\n  question,\n  questionNumber,\n}: {\n  questionContext: QuestionContext;\n  question: Question;\n  questionNumber: string;\n}) {\n  if (questionContext === 'student_homework') {\n    return `${questionNumber}. ${question.title}`;\n  } else if (questionContext === 'student_exam') {\n    return `Question ${questionNumber}: ${question.title}`;\n  } else {\n    return question.title;\n  }\n}\n\ninterface QuestionFooterResLocals {\n  showSaveButton: boolean;\n  showGradeButton: boolean;\n  disableSaveButton: boolean;\n  disableGradeButton: boolean;\n  showNewVariantButton: boolean;\n  showTryAgainButton: boolean;\n  hasAttemptsOtherVariants: boolean;\n  variantAttemptsLeft: number;\n  variantAttemptsTotal: number;\n  newVariantUrl: string;\n  tryAgainUrl: string;\n  question: Question;\n  variant: Variant;\n  instance_question: (InstanceQuestion & { allow_grade_left_ms?: number }) | null;\n  assessment_question: AssessmentQuestion | null;\n  instance_question_info: Record<string, any>;\n  authz_result: Record<string, any>;\n  group_config: GroupConfig | null;\n  group_info: GroupInfo | null;\n  group_role_permissions: {\n    can_view: boolean;\n    can_submit: boolean;\n  } | null;\n  user: User;\n  __csrf_token: string;\n}\n\nfunction QuestionFooter({\n  resLocals,\n  questionContext,\n}: {\n  resLocals: QuestionFooterResLocals;\n  questionContext: QuestionContext;\n}) {\n  if (resLocals.question.type === 'Freeform') {\n    return html`\n      <div class=\"card-footer\" id=\"question-panel-footer\">\n        <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n        ${QuestionFooterContent({ resLocals, questionContext })}\n      </div>\n    `;\n  } else {\n    return html`\n      <div class=\"card-footer\" id=\"question-panel-footer\">\n        <form class=\"question-form\" name=\"question-form\" method=\"POST\">\n          <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n          ${QuestionFooterContent({ resLocals, questionContext })}\n        </form>\n      </div>\n    `;\n  }\n}\n\nexport function QuestionFooterContent({\n  resLocals,\n  questionContext,\n}: {\n  resLocals: Omit<QuestionFooterResLocals, '__csrf_token'>;\n  questionContext: QuestionContext;\n}) {\n  const {\n    showSaveButton,\n    showGradeButton,\n    disableSaveButton,\n    disableGradeButton,\n    showNewVariantButton,\n    showTryAgainButton,\n    hasAttemptsOtherVariants,\n    variantAttemptsLeft,\n    variantAttemptsTotal,\n    newVariantUrl,\n    tryAgainUrl,\n    question,\n    variant,\n    instance_question,\n    assessment_question,\n    instance_question_info,\n    authz_result,\n    group_config,\n    group_info,\n    group_role_permissions,\n    user,\n  } = resLocals;\n\n  const contents = run(() => {\n    if (questionContext === 'student_exam' && variantAttemptsLeft === 0) {\n      return 'This question is complete and cannot be answered again.';\n    }\n\n    if (authz_result?.authorized_edit === false) {\n      return html`<div class=\"alert alert-warning mt-2\" role=\"alert\">\n        You are viewing the question instance of a different user and so are not authorized to save\n        answers, to submit answers for grading, or to try a new variant of this same question.\n      </div>`;\n    }\n\n    return html`\n      <div class=\"row\">\n        <div class=\"col d-flex justify-content-between\">\n          <span class=\"d-flex align-items-center\">\n            ${showSaveButton\n              ? html`\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-info question-save disable-on-submit order-2\"\n                    ${disableSaveButton ? 'disabled' : ''}\n                    ${question.type === 'Freeform' ? html`name=\"__action\" value=\"save\"` : ''}\n                  >\n                    ${showGradeButton ? 'Save only' : 'Save'}\n                  </button>\n                `\n              : ''}\n            ${showGradeButton\n              ? html`\n                  <button\n                    type=\"submit\"\n                    class=\"btn btn-primary question-grade disable-on-submit order-1 me-1\"\n                    ${disableGradeButton ? 'disabled' : ''}\n                    ${question.type === 'Freeform' ? html`name=\"__action\" value=\"grade\"` : ''}\n                  >\n                    Save &amp; Grade\n                    ${variantAttemptsTotal > 0\n                      ? variantAttemptsLeft > 1\n                        ? html`\n                            <small class=\"font-italic ms-2\">\n                              ${variantAttemptsLeft} attempts left\n                            </small>\n                          `\n                        : variantAttemptsLeft === 1 && variantAttemptsTotal > 1\n                          ? html`<small class=\"font-italic ms-2\">Last attempt</small>`\n                          : variantAttemptsLeft === 1\n                            ? html`<small class=\"font-italic ms-2\">Single attempt</small>`\n                            : ''\n                      : questionContext === 'student_homework'\n                        ? html`<small class=\"font-italic ms-2\">Unlimited attempts</small>`\n                        : ''}\n                  </button>\n                `\n              : ''}\n            ${group_config?.has_roles && !group_role_permissions?.can_submit && group_info\n              ? html`\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-xs btn-ghost me-1\"\n                    data-bs-toggle=\"popover\"\n                    data-bs-content=\"Your group role (${getRoleNamesForUser(group_info, user).join(\n                      ', ',\n                    )}) is not allowed to submit this question.\"\n                    aria-label=\"Submission blocked\"\n                  >\n                    <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                  </button>\n                `\n              : ''}\n          </span>\n          <span class=\"d-flex\">\n            ${question.type === 'Freeform'\n              ? html` <input type=\"hidden\" name=\"__variant_id\" value=\"${variant.id}\" /> `\n              : html`\n                  <input type=\"hidden\" name=\"postData\" class=\"postData\" />\n                  <input type=\"hidden\" name=\"__action\" class=\"__action\" />\n                `}\n            ${showNewVariantButton\n              ? html`\n                  <a href=\"${newVariantUrl}\" class=\"btn btn-primary disable-on-click ms-1\">\n                    New variant\n                  </a>\n                `\n              : showTryAgainButton\n                ? html`\n                    <a href=\"${tryAgainUrl}\" class=\"btn btn-primary disable-on-click ms-1\">\n                      ${instance_question_info.previous_variants?.some((variant) => variant.open)\n                        ? 'Go to latest variant'\n                        : 'Try a new variant'}\n                    </a>\n                  `\n                : hasAttemptsOtherVariants\n                  ? html`\n                      <small class=\"font-italic align-self-center\">\n                        Additional attempts available with new variants\n                      </small>\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-xs btn-ghost align-self-center ms-1\"\n                        data-bs-toggle=\"popover\"\n                        data-bs-container=\"body\"\n                        data-bs-html=\"true\"\n                        data-bs-title=\"Explanation of new variants\"\n                        data-bs-content=\"${escapeHtml(\n                          NewVariantInfo({ variantAttemptsLeft, variantAttemptsTotal }),\n                        )}\"\n                        data-bs-placement=\"auto\"\n                      >\n                        <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n                      </button>\n                    `\n                  : ''}\n            ${AvailablePointsNotes({ questionContext, instance_question, assessment_question })}\n          </span>\n        </div>\n      </div>\n      ${SubmitRateFooter({\n        questionContext,\n        showGradeButton,\n        disableGradeButton,\n        assessment_question,\n        allowGradeLeftMs: instance_question?.allow_grade_left_ms ?? 0,\n      })}\n    `;\n  });\n\n  return html`<div id=\"question-panel-footer-content\">${contents}</div>`;\n}\n\nfunction SubmitRateFooter({\n  questionContext,\n  showGradeButton,\n  disableGradeButton,\n  assessment_question,\n  allowGradeLeftMs,\n}: {\n  questionContext: QuestionContext;\n  showGradeButton: boolean;\n  disableGradeButton: boolean;\n  assessment_question: AssessmentQuestion | null;\n  allowGradeLeftMs: number;\n}) {\n  if (!showGradeButton || !assessment_question?.grade_rate_minutes) return '';\n  const popoverContent = html`\n    <p>\n      Once you have clicked <strong>Save &amp; Grade</strong>, you will need to wait\n      ${assessment_question.grade_rate_minutes}\n      ${assessment_question.grade_rate_minutes > 1 ? 'minutes' : 'minute'} before you can grade\n      again.\n    </p>\n    <p>\n      You can still save your answer as frequently as you like.\n      ${questionContext === 'student_exam'\n        ? 'If your assessment ends before your last saved answer is graded, it will be automatically graded for you.'\n        : ''}\n    </p>\n  `;\n  return html`\n    <div class=\"row\">\n      <div class=\"col d-flex justify-content-between\">\n        <span class=\"d-flex\">\n          ${disableGradeButton\n            ? html`\n                <small class=\"font-italic ms-2 mt-1 submission-suspended-msg\">\n                  Grading possible in <span id=\"submission-suspended-display\"></span>\n                  <div id=\"submission-suspended-progress\" class=\"border border-info\"></div>\n                </small>\n                ${EncodedData(\n                  {\n                    serverTimeLimitMS: assessment_question.grade_rate_minutes * 60 * 1000,\n                    serverRemainingMS: allowGradeLeftMs,\n                  },\n                  'submission-suspended-data',\n                )}\n              `\n            : ''}\n        </span>\n        <span class=\"d-flex align-self-center\">\n          <small class=\"font-italic\">\n            Can only be graded once every ${assessment_question.grade_rate_minutes}\n            ${assessment_question.grade_rate_minutes > 1 ? 'minutes' : 'minute'}\n          </small>\n          <button\n            type=\"button\"\n            class=\"btn btn-xs btn-ghost\"\n            data-bs-toggle=\"popover\"\n            data-bs-container=\"body\"\n            data-bs-html=\"true\"\n            data-bs-title=\"Explanation of grading rate limits\"\n            data-bs-content=\"${escapeHtml(popoverContent)}\"\n            data-bs-placement=\"auto\"\n          >\n            <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n      </div>\n    </div>\n  `;\n}\n\nfunction NewVariantInfo({\n  variantAttemptsLeft,\n  variantAttemptsTotal,\n}: {\n  variantAttemptsLeft: number;\n  variantAttemptsTotal: number;\n}) {\n  return html`\n    <p>\n      This question allows you to try multiple variants. Each of these variants is equivalent to the\n      question you have been presented with, but may include changes in input values, parameters,\n      and other settings. Although\n      ${variantAttemptsLeft > 1\n        ? `you have ${variantAttemptsLeft} attempts left`\n        : variantAttemptsTotal > 1\n          ? 'this is your last attempt'\n          : 'you have a single attempt'}\n      with the current variant, you are allowed to try an unlimited number of other variants.\n    </p>\n  `;\n}\n\nfunction AvailablePointsNotes({\n  questionContext,\n  instance_question,\n  assessment_question,\n}: {\n  questionContext: QuestionContext;\n  instance_question: InstanceQuestion | null;\n  assessment_question: AssessmentQuestion | null;\n}) {\n  if (questionContext !== 'student_exam' || !instance_question?.points_list) return '';\n\n  const roundedPoints = instance_question.points_list.map((p: number) => Math.round(p * 100) / 100);\n  const maxManualPoints = assessment_question?.max_manual_points ?? 0;\n  const additional = instance_question.points === 0 ? '' : 'additional';\n  return html`\n    <small class=\"font-italic align-self-center text-right\">\n      ${roundedPoints[0] === 1\n        ? `1 ${additional} point available for this attempt`\n        : `${roundedPoints[0]} ${additional} points available for this attempt`}\n      ${maxManualPoints > 0\n        ? roundedPoints[0] > maxManualPoints\n          ? html`&mdash; ${Math.round((roundedPoints[0] - maxManualPoints) * 100) / 100}\n            auto-graded, ${maxManualPoints} manually graded`\n          : html`&mdash; manually graded`\n        : ''}\n      ${roundedPoints.length === 2\n        ? html`<br />(following attempt is worth: ${roundedPoints[1]})`\n        : roundedPoints.length > 2\n          ? html`<br />(following attempts are worth: ${roundedPoints.slice(1).join(', ')})`\n          : ''}\n    </small>\n  `;\n}\n\nfunction QuestionPanel({\n  resLocals,\n  questionContext,\n  questionRenderContext,\n  showFooter,\n  manualGradingPreviewUrl,\n  aiGradingPreviewUrl,\n}: {\n  resLocals: Record<string, any>;\n  questionContext: QuestionContext;\n  questionRenderContext?: QuestionRenderContext;\n  showFooter: boolean;\n  manualGradingPreviewUrl?: string;\n  aiGradingPreviewUrl?: string;\n}) {\n  const { question, questionHtml, question_copy_targets, course, instance_question_info } =\n    resLocals;\n  // Show even when question_copy_targets is empty.\n  // We'll show a CTA to request a course if the user isn't an editor of any course.\n  const showCopyQuestionButton =\n    question.type === 'Freeform' &&\n    question_copy_targets != null &&\n    (course.template_course || (question.share_source_publicly && questionContext === 'public')) &&\n    questionContext !== 'manual_grading';\n\n  return html`\n    <div class=\"card mb-3 question-block\">\n      <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n        <h1>\n          ${QuestionTitle({\n            questionContext,\n            question,\n            questionNumber: instance_question_info?.question_number,\n          })}\n        </h1>\n        <div class=\"ms-auto d-flex flex-row gap-1\">\n          <div class=\"btn-group\">\n            ${showCopyQuestionButton\n              ? html`\n                  <button\n                    class=\"btn btn-sm btn-outline-light\"\n                    type=\"button\"\n                    aria-label=\"Copy question\"\n                    data-bs-toggle=\"modal\"\n                    data-bs-target=\"#copyQuestionModal\"\n                  >\n                    <i class=\"fa fa-fw fa-clone\"></i>\n                    <span class=\"d-none d-sm-inline\">Copy question</span>\n                  </button>\n                `\n              : ''}\n            ${manualGradingPreviewUrl || aiGradingPreviewUrl\n              ? html`\n                  <div class=\"btn-group\">\n                    <button\n                      class=\"btn btn-sm btn-outline-light dropdown-toggle\"\n                      type=\"button\"\n                      aria-expanded=\"false\"\n                      data-bs-toggle=\"dropdown\"\n                    >\n                      View&hellip;\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-end\">\n                      ${manualGradingPreviewUrl\n                        ? html`\n                            <li>\n                              <a class=\"dropdown-item\" href=\"${manualGradingPreviewUrl}\">\n                                Manual grading view\n                              </a>\n                            </li>\n                          `\n                        : ''}\n                      ${aiGradingPreviewUrl\n                        ? html`\n                            <li>\n                              <a class=\"dropdown-item\" href=\"${aiGradingPreviewUrl}\">\n                                AI grading view\n                              </a>\n                            </li>\n                          `\n                        : ''}\n                    </ul>\n                  </div>\n                `\n              : ''}\n          </div>\n        </div>\n      </div>\n      <div class=\"card-body question-body\">\n        ${questionRenderContext === 'ai_grading'\n          ? AiGradingHtmlPreview(questionHtml)\n          : unsafeHtml(questionHtml)}\n      </div>\n      ${showFooter\n        ? QuestionFooter({\n            // TODO: propagate more precise types upwards.\n            resLocals: resLocals as any,\n            questionContext,\n          })\n        : ''}\n    </div>\n  `;\n}\n\nfunction SubmissionList({\n  resLocals,\n  questionContext,\n  questionRenderContext,\n  submissions,\n  submissionHtmls,\n  submissionCount,\n  renderSubmissionSearchParams,\n}: {\n  resLocals: Record<string, any>;\n  questionContext: QuestionContext;\n  questionRenderContext?: QuestionRenderContext;\n  submissions: SubmissionForRender[];\n  submissionHtmls: string[];\n  submissionCount: number;\n  renderSubmissionSearchParams?: URLSearchParams;\n}) {\n  return submissions.map((submission, idx) =>\n    SubmissionPanel({\n      questionContext,\n      questionRenderContext,\n      question: resLocals.question,\n      assessment_question: resLocals.assessment_question,\n      instance_question: resLocals.instance_question,\n      variant_id: resLocals.variant.id,\n      course_instance_id: resLocals.course_instance?.id,\n      submission,\n      submissionHtml: submissionHtmls[idx],\n      submissionCount,\n      rubric_data: resLocals.rubric_data,\n      urlPrefix: resLocals.urlPrefix,\n      renderSubmissionSearchParams,\n    }),\n  );\n}\n\nfunction CopyQuestionModal({ resLocals }: { resLocals: Record<string, any> }) {\n  const { question_copy_targets, question, course } = resLocals;\n  if (question_copy_targets == null) return '';\n  return Modal({\n    id: 'copyQuestionModal',\n    title: 'Copy question',\n    formAction: question_copy_targets[0]?.copy_url ?? '',\n    formClass: 'js-copy-question-form',\n    body:\n      question_copy_targets.length === 0\n        ? html`\n            <p>\n              You can't copy this question because you don't have editor permissions in any courses.\n              <a href=\"/pl/request_course\">Request a course</a> if you don't have one already.\n              Otherwise, contact the owner of the course you expected to have access to.\n            </p>\n          `\n        : html`\n            <p>\n              This question can be copied to any course for which you have editor permissions.\n              Select one of your courses to copy this question.\n            </p>\n            <select class=\"form-select\" name=\"to_course_id\" required>\n              ${question_copy_targets.map(\n                (course, index) => html`\n                  <option\n                    value=\"${course.id}\"\n                    data-csrf-token=\"${course.__csrf_token}\"\n                    data-copy-url=\"${course.copy_url}\"\n                    ${index === 0 ? 'selected' : ''}\n                  >\n                    ${course.short_name}\n                  </option>\n                `,\n              )}\n            </select>\n          `,\n    footer: html`\n      <input\n        type=\"hidden\"\n        name=\"__csrf_token\"\n        value=\"${question_copy_targets[0]?.__csrf_token ?? ''}\"\n      />\n      <input type=\"hidden\" name=\"question_id\" value=\"${question.id}\" />\n      <input type=\"hidden\" name=\"course_id\" value=\"${course.id}\" />\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n      ${question_copy_targets?.length > 0\n        ? html`\n            <button type=\"submit\" name=\"__action\" value=\"copy_question\" class=\"btn btn-primary\">\n              Copy question\n            </button>\n          `\n        : ''}\n    `,\n  });\n}\n"]}