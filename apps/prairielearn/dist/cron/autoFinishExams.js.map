{"version":3,"file":"autoFinishExams.js","sourceRoot":"","sources":["../../src/cron/autoFinishExams.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,KAAK,KAAK,MAAM,wBAAwB,CAAC;AAChD,OAAO,KAAK,MAAM,MAAM,sBAAsB,CAAC;AAE/C,OAAO,EAAE,uBAAuB,EAAE,MAAM,sBAAsB,CAAC;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,wBAAwB,EAAE,MAAM,oBAAoB,CAAC;AAE9D,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhD;;;;;;;GAOG;AACH,MAAM,CAAC,KAAK,UAAU,GAAG;IACvB,MAAM,oBAAoB,GAAG,MAAM,KAAK,CAAC,SAAS,CAChD,GAAG,CAAC,gCAAgC,EACpC,EAAE,WAAW,EAAE,MAAM,CAAC,iBAAiB,EAAE,EACzC,wBAAwB,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAC7E,CAAC;IAEF,KAAK,MAAM,mBAAmB,IAAI,oBAAoB,EAAE,CAAC;QACvD,MAAM,CAAC,OAAO,CAAC,6BAA6B,GAAG,mBAAmB,CAAC,EAAE,EAAE,mBAAmB,CAAC,CAAC;QAC5F,uCAAuC;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC;QACrB,MAAM,aAAa,GAAG,IAAI,CAAC;QAC3B,gEAAgE;QAChE,qEAAqE;QACrE,yEAAyE;QACzE,iEAAiE;QACjE,MAAM,WAAW,GAAG,KAAK,CAAC;QAC1B,wEAAwE;QACxE,MAAM,KAAK,GAAG,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC;QACzC,kDAAkD;QAClD,MAAM,iBAAiB,GAAG,IAAI,CAAC;QAC/B,uDAAuD;QACvD,MAAM,mBAAmB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC;YACH,MAAM,uBAAuB,CAC3B,mBAAmB,CAAC,EAAE,EACtB,OAAO,EACP,aAAa,EACb,WAAW,EACX,KAAK,EACL,iBAAiB,EACjB,mBAAmB,CACpB,CAAC;QACJ,CAAC;QAAC,OAAO,GAAG,EAAE,CAAC;YACb,MAAM,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,mBAAmB,EAAE,CAAC,CAAC,CAAC;YAClF,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE;gBAC3B,IAAI,EAAE;oBACJ,eAAe,EAAE,mBAAmB,CAAC,aAAa;oBAClD,wBAAwB,EAAE,mBAAmB,CAAC,EAAE;iBACjD;aACF,CAAC,CAAC;QACL,CAAC;IACH,CAAC;AACH,CAAC","sourcesContent":["import * as error from '@prairielearn/error';\nimport { logger } from '@prairielearn/logger';\nimport * as sqldb from '@prairielearn/postgres';\nimport * as Sentry from '@prairielearn/sentry';\n\nimport { gradeAssessmentInstance } from '../lib/assessment.js';\nimport { config } from '../lib/config.js';\nimport { AssessmentInstanceSchema } from '../lib/db-types.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\n/**\n * This cron job runs periodically to check for any exams that need to be\n * \"finished\". This includes exams that are still open and are configured to\n * auto-close after a certain time period, and exams that were previously\n * closed but not completely graded.\n *\n * @see assessment.gradeAssessmentInstance\n */\nexport async function run() {\n  const assessment_instances = await sqldb.queryRows(\n    sql.select_assessments_to_auto_close,\n    { age_minutes: config.autoFinishAgeMins },\n    AssessmentInstanceSchema.pick({ id: true, open: true, assessment_id: true }),\n  );\n\n  for (const assessment_instance of assessment_instances) {\n    logger.verbose('autoFinishExams: finishing ' + assessment_instance.id, assessment_instance);\n    // Grading was performed by the system.\n    const user_id = null;\n    const authn_user_id = null;\n    // Don't require the assessment to be open. This is important to\n    // ensure we correctly handle the case where the PrairieLearn process\n    // dies in the middle of grading a question. In that case, the assessment\n    // would have already been closed, but we still need to grade it.\n    const requireOpen = false;\n    // Only mark this assessment as needing to be closed if it's still open.\n    const close = !!assessment_instance.open;\n    // Override any submission or grading rate limits.\n    const overrideGradeRate = true;\n    // We don't have a client fingerprint ID, so pass null.\n    const clientFingerprintId = null;\n    try {\n      await gradeAssessmentInstance(\n        assessment_instance.id,\n        user_id,\n        authn_user_id,\n        requireOpen,\n        close,\n        overrideGradeRate,\n        clientFingerprintId,\n      );\n    } catch (err) {\n      logger.error('Error finishing exam', error.addData(err, { assessment_instance }));\n      Sentry.captureException(err, {\n        tags: {\n          'assessment.id': assessment_instance.assessment_id,\n          'assessment_instance.id': assessment_instance.id,\n        },\n      });\n    }\n  }\n}\n"]}