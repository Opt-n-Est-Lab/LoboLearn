{"version":3,"file":"calculateAssessmentQuestionStats.js","sourceRoot":"","sources":["../../src/cron/calculateAssessmentQuestionStats.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAEjE,OAAO,EAAE,0CAA0C,EAAE,MAAM,sBAAsB,CAAC;AAClF,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAE9C,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE1C,MAAM,CAAC,KAAK,UAAU,GAAG;IACvB,MAAM,cAAc,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;IACzE,KAAK,MAAM,aAAa,IAAI,cAAc,EAAE,CAAC;QAC3C,MAAM,CAAC,OAAO,CAAC,gEAAgE,aAAa,EAAE,CAAC,CAAC;QAChG,MAAM,0CAA0C,CAAC,aAAa,CAAC,CAAC;IAClE,CAAC;AACH,CAAC","sourcesContent":["import { logger } from '@prairielearn/logger';\nimport { loadSqlEquiv, queryRows } from '@prairielearn/postgres';\n\nimport { updateAssessmentQuestionStatsForAssessment } from '../lib/assessment.js';\nimport { IdSchema } from '../lib/db-types.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nexport async function run() {\n  const assessment_ids = await queryRows(sql.select_assessments, IdSchema);\n  for (const assessment_id of assessment_ids) {\n    logger.verbose(`calculateAssessmentQuestionStats: processing assessment_id = ${assessment_id}`);\n    await updateAssessmentQuestionStatsForAssessment(assessment_id);\n  }\n}\n"]}