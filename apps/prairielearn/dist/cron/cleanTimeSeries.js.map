{"version":3,"file":"cleanTimeSeries.js","sourceRoot":"","sources":["../../src/cron/cleanTimeSeries.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,KAAK,KAAK,MAAM,wBAAwB,CAAC;AAEhD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhD,MAAM,CAAC,KAAK,UAAU,GAAG;IACvB,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,iBAAiB,EAAE;QAC5D,oBAAoB,EAAE,MAAM,CAAC,4BAA4B;KAC1D,CAAC,CAAC;IACH,MAAM,CAAC,OAAO,CAAC,WAAW,OAAO,CAAC,QAAQ,sCAAsC,CAAC,CAAC;AACpF,CAAC","sourcesContent":["import { logger } from '@prairielearn/logger';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nexport async function run() {\n  const results = await sqldb.queryAsync(sql.clean_time_series, {\n    retention_period_sec: config.timeSeriesRetentionPeriodSec,\n  });\n  logger.verbose(`Deleted ${results.rowCount} old rows from the time_series table`);\n}\n"]}