{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/ee/auth/azure/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,mBAAmB,CAAC;AAEjD,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAEhD,MAAM,UAAU,gBAAgB;IAC9B,OAAO,IAAI,YAAY,CACrB;QACE,gBAAgB,EAAE,2EAA2E;QAC7F,QAAQ,EAAE,MAAM,CAAC,aAAa;QAC9B,WAAW,EAAE,MAAM,CAAC,gBAAgB;QACpC,uBAAuB,EAAE,MAAM,CAAC,4BAA4B;QAC5D,YAAY,EAAE,MAAM,CAAC,iBAAiB;QACtC,oBAAoB,EAAE,MAAM,CAAC,yBAAyB;QACtD,YAAY,EAAE,MAAM,CAAC,iBAAiB;QACtC,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;QACrC,wEAAwE;QACxE,wEAAwE;QACxE,+DAA+D;QAC/D,EAAE;QACF,0EAA0E;QAC1E,2EAA2E;QAC3E,0DAA0D;QAC1D,YAAY,EAAE,UAAU;QACxB,YAAY,EAAE,WAAW;QACzB,qFAAqF;QACrF,cAAc,EAAE,KAAK;QACrB,iBAAiB,EAAE,KAAK;QACxB,wEAAwE;QACxE,yBAAyB,EAAE,IAAI;KAChC,EACD,UAAU,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,WAAW,EAAE,YAAY,EAAE,IAAI;QAC1D,OAAO,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IAC7B,CAAC,CACF,CAAC;AACJ,CAAC","sourcesContent":["import { OIDCStrategy } from 'passport-azure-ad';\n\nimport { config } from '../../../lib/config.js';\n\nexport function getAzureStrategy() {\n  return new OIDCStrategy(\n    {\n      identityMetadata: 'https://login.microsoftonline.com/common/.well-known/openid-configuration',\n      clientID: config.azureClientID,\n      redirectUrl: config.azureRedirectUrl,\n      allowHttpForRedirectUrl: config.azureAllowHttpForRedirectUrl,\n      clientSecret: config.azureClientSecret,\n      cookieEncryptionKeys: config.azureCookieEncryptionKeys,\n      loggingLevel: config.azureLoggingLevel,\n      scope: ['openid', 'profile', 'email'],\n      // This should only be `id_token`, which will force the implicit flow to\n      // be used. When we specify `code id_token` here, it will use the hybrid\n      // flow, which for whatever reason does not return user emails.\n      //\n      // The implicit flow isn't recommended for `response_type=token`, but it's\n      // safe for us to use here because we're using `response_type=id_token`. We\n      // don't ever need access/refresh tokens for our use case.\n      responseType: 'id_token',\n      responseMode: 'form_post',\n      // We're using the common metadata endpoint, so we need to disable issuer validation.\n      validateIssuer: false,\n      passReqToCallback: false,\n      // We don't want to use Express sessions, so we disable session support.\n      useCookieInsteadOfSession: true,\n    },\n    function (iss, sub, profile, accessToken, refreshToken, done) {\n      return done(null, profile);\n    },\n  );\n}\n"]}