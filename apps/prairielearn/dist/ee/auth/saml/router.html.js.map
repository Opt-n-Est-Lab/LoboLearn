{"version":3,"file":"router.html.js","sourceRoot":"","sources":["../../../../src/ee/auth/saml/router.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport { HeadContents } from '../../../components/HeadContents.html.js';\n\nexport const SamlTest = ({\n  uid,\n  uin,\n  name,\n  email,\n  uidAttribute,\n  uinAttribute,\n  nameAttribute,\n  emailAttribute,\n  attributes,\n  resLocals,\n}) => {\n  const hasUidAttribute = !!uidAttribute;\n  const hasUinAttribute = !!uinAttribute;\n  const hasNameAttribute = !!nameAttribute;\n  const hasEmailAttribute = !!emailAttribute;\n\n  const hasUid = !!uid;\n  const hasUin = !!uin;\n  const hasName = !!name;\n  const hasEmail = !!email;\n\n  // Note that even though the normal login flow doesn't yet validate the\n  // presence of an email, we want to make it obvious during all future SAML\n  // configuration processes that `emailAttribute` should be set and that the\n  // corresponding value should be present.\n  const hasError =\n    !hasUidAttribute ||\n    !hasUinAttribute ||\n    !hasNameAttribute ||\n    !hasEmailAttribute ||\n    !hasUid ||\n    !hasUin ||\n    !hasName ||\n    !hasEmail;\n\n  return html`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        ${HeadContents({ resLocals, pageTitle: 'SAML test' })}\n      </head>\n      <body>\n        <main id=\"content\" class=\"container mb-4\">\n          ${hasError\n            ? html`\n                <div class=\"alert alert-danger\">\n                  <h2 class=\"h4\">\n                    One or more errors were encountered while validating the SAML response.\n                  </h2>\n                  <ul class=\"mb-0\">\n                    ${!hasUidAttribute\n                      ? html`<li>No UID attribute mapping is configured for this institution</li>`\n                      : ''}\n                    ${!hasUinAttribute\n                      ? html`<li>No UIN attribute mapping is configured for this institution</li>`\n                      : ''}\n                    ${!hasNameAttribute\n                      ? html`<li>No name attribute mapping is configured for this institution</li>`\n                      : ''}\n                    ${!hasEmailAttribute\n                      ? html`<li>No email attribute mapping is configured for this institution</li>`\n                      : ''}\n                    ${hasUidAttribute && !hasUid\n                      ? html`<li>\n                          No value fond for configured UID attribute (<code>${uidAttribute}</code>)\n                        </li>`\n                      : ''}\n                    ${hasUinAttribute && !hasUin\n                      ? html`<li>\n                          No value found for configured UIN attribute (<code>${uinAttribute}</code>)\n                        </li>`\n                      : ''}\n                    ${hasNameAttribute && !hasName\n                      ? html`<li>\n                          No value found for configured name attribute\n                          (<code>${nameAttribute}</code>)\n                        </li>`\n                      : ''}\n                    ${hasEmailAttribute && !hasEmail\n                      ? html`<li>\n                          No value found for configured email attribute\n                          (<code>${emailAttribute}</code>)\n                        </li>`\n                      : ''}\n                  </ul>\n                </div>\n              `\n            : ''}\n          ${hasUid || hasUin || hasName\n            ? html`\n                <h2 class=\"h4\">Mapped SAML attributes</h2>\n                <ul>\n                  ${hasUid\n                    ? html`<li><strong>UID:</strong> ${uid} (<code>${uidAttribute}</code>)</li>`\n                    : ''}\n                  ${hasUin\n                    ? html`<li><strong>UIN:</strong> ${uin} (<code>${uinAttribute}</code>)</li>`\n                    : ''}\n                  ${hasName\n                    ? html`<li><strong>Name:</strong> ${name} (<code>${nameAttribute}</code>)</li>`\n                    : ''}\n                  ${hasEmail\n                    ? html`<li>\n                        <strong>Email:</strong> ${email} (<code>${emailAttribute}</code>)\n                      </li>`\n                    : ''}\n                </ul>\n              `\n            : ''}\n\n          <h2 class=\"h4\">All SAML attributes</h2>\n          <pre><code>${JSON.stringify(attributes, null, 2)}</code></pre>\n        </main>\n      </body>\n    </html>\n  `.toString();\n};\n"]}