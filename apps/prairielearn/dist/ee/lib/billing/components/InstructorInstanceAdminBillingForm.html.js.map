{"version":3,"file":"InstructorInstanceAdminBillingForm.html.js","sourceRoot":"","sources":["../../../../../src/ee/lib/billing/components/InstructorInstanceAdminBillingForm.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { EncodedData } from '@prairielearn/browser-utils';\nimport { html } from '@prairielearn/html';\n\nimport { type PlanName, planGrantsMatchPlanFeatures } from '../plans-types.js';\n\ninterface InstructorInstanceAdminBillingInput {\n  initialRequiredPlans: PlanName[];\n  desiredRequiredPlans: PlanName[];\n  institutionPlanGrants: PlanName[];\n  courseInstancePlanGrants: PlanName[];\n  enrollmentCount: number;\n  enrollmentLimit: number;\n  editable: boolean;\n}\n\ninterface InstructorInstanceAdminBillingState {\n  studentBillingEnabled: boolean;\n  studentBillingCanChange: boolean;\n  studentBillingDidChange: boolean;\n  studentBillingAlert: AlertProps | null;\n  computeEnabled: boolean;\n  computeCanChange: boolean;\n  computeDidChange: boolean;\n  computeAlert: AlertProps | null;\n}\n\ninterface AlertProps {\n  message: string;\n  color: 'success' | 'warning' | 'danger';\n}\n\nexport function instructorInstanceAdminBillingState(\n  input: InstructorInstanceAdminBillingInput,\n): InstructorInstanceAdminBillingState {\n  const studentBillingInitialEnabled = input.initialRequiredPlans.includes('basic');\n  const studentBillingEnabled = input.desiredRequiredPlans.includes('basic');\n  const computeEnabledByInstitution = planGrantsMatchPlanFeatures(input.institutionPlanGrants, [\n    'compute',\n  ]);\n  const computeEnabledByCourseInstance = planGrantsMatchPlanFeatures(\n    input.courseInstancePlanGrants,\n    ['compute'],\n  );\n  const computeEnabled =\n    (!studentBillingEnabled && (computeEnabledByInstitution || computeEnabledByCourseInstance)) ||\n    input.desiredRequiredPlans.includes('compute');\n\n  let studentBillingCanChange = input.editable;\n  const studentBillingDidChange =\n    input.initialRequiredPlans.includes('basic') !== input.desiredRequiredPlans.includes('basic');\n  let studentBillingAlert: AlertProps | null = null;\n  if (studentBillingInitialEnabled && input.enrollmentCount > input.enrollmentLimit) {\n    studentBillingCanChange = false;\n    const inflectedCountVerb = input.enrollmentCount === 1 ? 'is' : 'are';\n    const inflectedCountNoun = input.enrollmentCount === 1 ? 'enrollment' : 'enrollments';\n    studentBillingAlert = {\n      message: [\n        `There ${inflectedCountVerb} ${input.enrollmentCount} ${inflectedCountNoun} in this course, which exceeds the limit of ${input.enrollmentLimit}.`,\n        'To disable student billing, first remove excess enrollments.',\n      ].join(' '),\n      color: 'warning',\n    };\n  }\n\n  let computeCanChange = input.editable;\n  const computeDidChange =\n    input.initialRequiredPlans.includes('compute') !==\n    input.desiredRequiredPlans.includes('compute');\n  let computeAlert: AlertProps | null = null;\n  if (!studentBillingEnabled && (computeEnabledByInstitution || computeEnabledByCourseInstance)) {\n    computeCanChange = false;\n    computeAlert = {\n      message:\n        'This course instance already has access to compute features without additional payment.',\n      color: 'success',\n    };\n  }\n\n  return {\n    studentBillingEnabled,\n    studentBillingCanChange,\n    studentBillingDidChange,\n    studentBillingAlert,\n    computeEnabled,\n    computeCanChange,\n    computeDidChange,\n    computeAlert,\n  };\n}\n\nexport interface InstructorInstanceAdminBillingFormProps\n  extends InstructorInstanceAdminBillingInput {\n  enrollmentLimitSource: 'course_instance' | 'institution';\n  externalGradingQuestionCount: number;\n  workspaceQuestionCount: number;\n  csrfToken: string;\n}\n\nexport function InstructorInstanceAdminBillingForm(props: InstructorInstanceAdminBillingFormProps) {\n  const {\n    enrollmentCount,\n    enrollmentLimit,\n    enrollmentLimitSource,\n    externalGradingQuestionCount,\n    workspaceQuestionCount,\n    editable,\n    csrfToken,\n  } = props;\n\n  const {\n    studentBillingEnabled,\n    studentBillingCanChange,\n    studentBillingAlert,\n    computeEnabled,\n    computeCanChange,\n    computeAlert,\n  } = instructorInstanceAdminBillingState(props);\n\n  const enrollmentLimitPercentage = Math.min(100, (enrollmentCount / enrollmentLimit) * 100);\n  const enrollmentLimitExceeded = enrollmentCount > enrollmentLimit;\n\n  // Make the colored portion of the progress bar at least 2% wide at all\n  // times to ensure that it's not just a gray box.\n  const enrollmentLimitProgressBarPercentage = Math.max(2, enrollmentLimitPercentage);\n  const enrollmentLimitProgressBarColor = enrollmentLimitExceeded\n    ? 'bg-danger'\n    : enrollmentLimitPercentage > 90\n      ? 'bg-warning'\n      : 'bg-primary';\n\n  return html`\n    <form method=\"POST\" class=\"js-billing-form\">\n      ${EncodedData(props, 'billing-form-data')}\n      <h2 class=\"h4\">Enrollments</h2>\n      <div class=\"mb-3\">\n        <div class=\"d-flex flex-row align-items-center\">\n          <span class=\"me-2\">\n            ${formatEnrollmentCount(enrollmentCount, enrollmentLimit, studentBillingEnabled)}\n          </span>\n          <div\n            class=\"progress flex-grow-1 ${studentBillingEnabled ? 'd-none' : ''}\"\n            style=\"max-width: 100px\"\n          >\n            <div\n              class=\"progress-bar ${enrollmentLimitProgressBarColor}\"\n              role=\"progressbar\"\n              style=\"width: ${enrollmentLimitProgressBarPercentage}%\"\n              aria-valuenow=\"${enrollmentCount}\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"${enrollmentLimit}\"\n            ></div>\n          </div>\n        </div>\n        <div class=\"small text-muted\">\n          ${enrollmentLimitExplanation({\n            studentBillingEnabled,\n            enrollmentLimit,\n            enrollmentLimitSource,\n          })}\n        </div>\n      </div>\n\n      <div class=\"form-check\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"student_billing_enabled\"\n          ${studentBillingEnabled ? 'checked' : ''}\n          value=\"1\"\n          id=\"studentBillingEnabled\"\n          ${!studentBillingCanChange ? 'disabled' : ''}\n        />\n        <label class=\"form-check-label\" for=\"studentBillingEnabled\">\n          Enable student billing for enrollments\n        </label>\n        <p class=\"small text-muted\">\n          When student billing is enabled, students pay for access to your course instance. Enabling\n          student billing will allow your course instance to exceed any enrollment limits that would\n          otherwise apply.\n        </p>\n        ${MaybeAlert(studentBillingAlert)}\n      </div>\n\n      <h2 class=\"h4\">Features</h2>\n      <p>\n        If your course requires certain features, you can enable them so that students can pay for\n        them.\n      </p>\n\n      <div class=\"form-check\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          name=\"compute_enabled\"\n          ${computeEnabled ? 'checked' : ''}\n          value=\"1\"\n          id=\"computeEnabled\"\n          ${!computeCanChange ? 'disabled' : ''}\n        />\n        <label class=\"form-check-label\" for=\"computeEnabled\">\n          External grading and workspaces\n        </label>\n        <p class=\"small text-muted\">\n          Students will be able to use questions that utilize external grading and/or workspaces.\n          This course has\n          <strong>${pluralizeQuestionCount(externalGradingQuestionCount)}</strong> that use external\n          grading and <strong>${pluralizeQuestionCount(workspaceQuestionCount)}</strong> that use\n          workspaces.\n        </p>\n        ${MaybeAlert(computeAlert)}\n      </div>\n\n      <div\n        class=\"alert alert-warning js-student-billing-warning\"\n        data-student-billing-enabled=\"${studentBillingEnabled}\"\n        data-compute-enabled=\"${computeEnabled}\"\n        data-enrollment-count=\"${enrollmentCount}\"\n        data-enrollment-limit=\"${enrollmentLimit}\"\n        hidden\n      >\n        Any students currently enrolled in your course will lose access until they have paid for the\n        above features. If your course is currently in session, you should carefully consider the\n        impact of enabling student billing. Before proceeding, you should communicate this change to\n        your students.\n      </div>\n\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <button type=\"submit\" class=\"btn btn-primary\" ${!editable ? 'disabled' : null}>Save</button>\n    </form>\n  `;\n}\n\nfunction MaybeAlert(props: AlertProps | null) {\n  if (!props) return null;\n  return html`<div class=\"alert alert-${props.color}\">${props.message}</div>`;\n}\n\nfunction enrollmentLimitExplanation({\n  studentBillingEnabled,\n  enrollmentLimit,\n  enrollmentLimitSource,\n}: {\n  studentBillingEnabled: boolean;\n  enrollmentLimit: number;\n  enrollmentLimitSource: 'course_instance' | 'institution';\n}): string {\n  if (studentBillingEnabled) {\n    return 'Student billing for enrollments is enabled, so there is no enrollment limit.';\n  }\n\n  if (enrollmentLimitSource === 'course_instance') {\n    return `This course instance has an enrollment limit of ${enrollmentLimit}.`;\n  }\n\n  return `This course's institution has a per-course-instance enrollment limit of ${enrollmentLimit}.`;\n}\n\nfunction pluralizeQuestionCount(count: number) {\n  return count === 1 ? `${count} question` : `${count} questions`;\n}\n\nfunction formatEnrollmentCount(\n  enrollmentCount: number,\n  enrollmentLimit: number,\n  studentBillingEnabled: boolean,\n) {\n  if (studentBillingEnabled) {\n    const pluralizedEnrollments = enrollmentCount === 1 ? 'enrollment' : 'enrollments';\n\n    // Student billing doesn't have a limit, so don't show it.\n    return `${enrollmentCount} ${pluralizedEnrollments}`;\n  } else {\n    const pluralizedEnrollments = enrollmentLimit === 1 ? 'enrollment' : 'enrollments';\n\n    return `${enrollmentCount} / ${enrollmentLimit} ${pluralizedEnrollments}`;\n  }\n}\n"]}