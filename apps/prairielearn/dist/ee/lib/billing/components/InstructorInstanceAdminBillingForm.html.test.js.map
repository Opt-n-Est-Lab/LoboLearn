{"version":3,"file":"InstructorInstanceAdminBillingForm.html.test.js","sourceRoot":"","sources":["../../../../../src/ee/lib/billing/components/InstructorInstanceAdminBillingForm.html.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\n\nimport { instructorInstanceAdminBillingState } from './InstructorInstanceAdminBillingForm.html.js';\n\ndescribe('instructorInstanceAdminBillingState', () => {\n  it('allows enabling student billing by default', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: [],\n      desiredRequiredPlans: [],\n      institutionPlanGrants: [],\n      courseInstancePlanGrants: [],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: true,\n    });\n    assert.isFalse(state.studentBillingEnabled);\n    assert.isTrue(state.studentBillingCanChange);\n    assert.isFalse(state.computeEnabled);\n    assert.isTrue(state.computeCanChange);\n  });\n\n  it('disallows enabling compute when already granted by institution', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: [],\n      desiredRequiredPlans: [],\n      institutionPlanGrants: ['compute'],\n      courseInstancePlanGrants: [],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: true,\n    });\n    assert.isTrue(state.computeEnabled);\n    assert.isFalse(state.computeCanChange);\n  });\n\n  it('disallows enabling compute when already granted by course instance', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: [],\n      desiredRequiredPlans: [],\n      institutionPlanGrants: [],\n      courseInstancePlanGrants: ['compute'],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: true,\n    });\n    assert.isTrue(state.computeEnabled);\n    assert.isFalse(state.computeCanChange);\n  });\n\n  it('allows enabling compute when student billing is enabled', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: ['basic'],\n      desiredRequiredPlans: ['basic'],\n      institutionPlanGrants: [],\n      courseInstancePlanGrants: [],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: true,\n    });\n    assert.isFalse(state.computeEnabled);\n    assert.isTrue(state.computeCanChange);\n  });\n\n  it('allows enabling compute when student billing is enabled and compute is granted by institution', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: ['basic'],\n      desiredRequiredPlans: ['basic'],\n      institutionPlanGrants: ['compute'],\n      courseInstancePlanGrants: [],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: true,\n    });\n    assert.isFalse(state.computeEnabled);\n    assert.isTrue(state.computeCanChange);\n  });\n\n  it('allows enabling compute when student billing is enabled and compute is granted by course instance', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: ['basic'],\n      desiredRequiredPlans: ['basic'],\n      institutionPlanGrants: [],\n      courseInstancePlanGrants: ['compute'],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: true,\n    });\n    assert.isFalse(state.computeEnabled);\n    assert.isTrue(state.computeCanChange);\n  });\n\n  it('warns when disabling student billing with excess enrollments', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: ['basic'],\n      desiredRequiredPlans: [],\n      institutionPlanGrants: [],\n      courseInstancePlanGrants: [],\n      enrollmentCount: 100,\n      enrollmentLimit: 50,\n      editable: true,\n    });\n    assert.isFalse(state.studentBillingCanChange);\n    assert.isTrue(state.studentBillingDidChange);\n    assert.match(\n      state.studentBillingAlert?.message ?? '',\n      /To disable student billing, first remove excess enrollments./,\n    );\n  });\n\n  it('disallows changes when editing is disabled', () => {\n    const state = instructorInstanceAdminBillingState({\n      initialRequiredPlans: [],\n      desiredRequiredPlans: [],\n      institutionPlanGrants: [],\n      courseInstancePlanGrants: [],\n      enrollmentCount: 0,\n      enrollmentLimit: 0,\n      editable: false,\n    });\n    assert.isFalse(state.studentBillingCanChange);\n    assert.isFalse(state.computeCanChange);\n  });\n});\n"]}