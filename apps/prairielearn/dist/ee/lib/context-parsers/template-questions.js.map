{"version":3,"file":"template-questions.js","sourceRoot":"","sources":["../../../../src/ee/lib/context-parsers/template-questions.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAE7B,OAAO,EAAE,MAAM,UAAU,CAAC;AAE1B,OAAO,EAAE,YAAY,EAAE,MAAM,oBAAoB,CAAC;AAElD,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,GAAW;IACvD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAElD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IACjD,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAElD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC/C,MAAM,SAAS,GAAG,MAAM,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAElD,MAAM,OAAO,GAAa,EAAE,CAAC;IAE7B,IAAI,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACpD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,IAAI,SAAS,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAErC,IAAI,SAAS,EAAE,CAAC;QACd,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QACtD,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IAC7C,CAAC;IAED,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,CAAC","sourcesContent":["import * as path from 'path';\n\nimport fs from 'fs-extra';\n\nimport { validateHTML } from '../validateHTML.js';\n\nexport async function buildContextForQuestion(dir: string): Promise<string | undefined> {\n  const readmePath = path.join(dir, 'README.md');\n  const hasReadme = await fs.pathExists(readmePath);\n\n  const htmlPath = path.join(dir, 'question.html');\n  const html = await fs.readFile(htmlPath, 'utf-8');\n\n  const pythonPath = path.join(dir, 'server.py');\n  const hasPython = await fs.pathExists(pythonPath);\n\n  const context: string[] = [];\n\n  if (validateHTML(html, false, hasPython).length > 0) {\n    return undefined;\n  }\n\n  if (hasReadme) {\n    const readme = await fs.readFile(readmePath, 'utf-8');\n    context.push(readme, '\\n');\n  }\n\n  context.push('```html', html, '```');\n\n  if (hasPython) {\n    const python = await fs.readFile(pythonPath, 'utf-8');\n    context.push('\\n```python', python, '```');\n  }\n\n  return context.join('\\n');\n}\n"]}