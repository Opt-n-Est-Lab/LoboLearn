{"version":3,"file":"lti13.js","sourceRoot":"","sources":["../../../src/ee/lib/lti13.ts"],"names":[],"mappings":"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","sourcesContent":["import { setTimeout as sleep } from 'timers/promises';\n\nimport { parseLinkHeader } from '@web3-storage/parse-link-header';\nimport type { Request } from 'express';\nimport _ from 'lodash';\nimport fetch, { type RequestInfo, type RequestInit, type Response } from 'node-fetch';\nimport { Issuer, type TokenSet } from 'openid-client';\nimport { z } from 'zod';\n\nimport { AugmentedError, HttpStatusError } from '@prairielearn/error';\nimport {\n  loadSqlEquiv,\n  queryAsync,\n  queryRow,\n  queryRows,\n  runInTransactionAsync,\n} from '@prairielearn/postgres';\n\nimport { selectAssessmentInstanceLastSubmissionDate } from '../../lib/assessment.js';\nimport {\n  AssessmentInstanceSchema,\n  AssessmentSchema,\n  DateFromISOString,\n  Lti13CourseInstanceSchema,\n  Lti13InstanceSchema,\n  UserSchema,\n} from '../../lib/db-types.js';\nimport { features } from '../../lib/features/index.js';\nimport { type ServerJob } from '../../lib/server-jobs.js';\nimport { selectLti13Instance } from '../models/lti13Instance.js';\n\nimport { getInstitutionAuthenticationProviders } from './institution.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\n// Scope list at\n// https://canvas.instructure.com/doc/api/file.lti_dev_key_config.html#anatomy-of-a-json-configuration\nconst TOKEN_SCOPES = [\n  'https://purl.imsglobal.org/spec/lti-ags/scope/lineitem',\n  'https://purl.imsglobal.org/spec/lti-ags/scope/score',\n  'https://purl.imsglobal.org/spec/lti-nrps/scope/contextmembership.readonly',\n];\n\nexport const Lti13CombinedInstanceSchema = z.object({\n  lti13_course_instance: Lti13CourseInstanceSchema,\n  lti13_instance: Lti13InstanceSchema,\n});\nexport type Lti13CombinedInstance = z.infer<typeof Lti13CombinedInstanceSchema>;\n\nexport const LineitemSchema = z.object({\n  id: z.string(),\n  label: z.string(),\n  scoreMaximum: z.number(),\n  resourceId: z.string().optional(),\n  resourceLinkId: z.string().optional(),\n  tag: z.string().optional(),\n  startDateTime: DateFromISOString.optional(),\n  endDateTime: DateFromISOString.optional(),\n  gradesReleased: z.boolean().optional(),\n  'https://canvas.instructure.com/lti/submission_type': z\n    .object({\n      type: z.enum(['none', 'external_tool']).optional(),\n      external_tool_url: z.string().optional(),\n    })\n    .optional(),\n});\nexport type Lineitem = z.infer<typeof LineitemSchema>;\n\nexport const LineitemsSchema = z.array(LineitemSchema);\nexport type Lineitems = z.infer<typeof LineitemsSchema>;\n\n// Validate LTI 1.3\n// https://www.imsglobal.org/spec/lti/v1p3#required-message-claims\nexport const Lti13ClaimSchema = z.object({\n  'https://purl.imsglobal.org/spec/lti/claim/message_type': z.literal('LtiResourceLinkRequest'),\n  'https://purl.imsglobal.org/spec/lti/claim/version': z.literal('1.3.0'),\n  'https://purl.imsglobal.org/spec/lti/claim/deployment_id': z.string(),\n  'https://purl.imsglobal.org/spec/lti/claim/target_link_uri': z.string(),\n  'https://purl.imsglobal.org/spec/lti/claim/resource_link': z.object({\n    id: z.string(),\n    description: z.string().nullish(),\n    title: z.string().nullish(),\n  }),\n  // https://www.imsglobal.org/spec/security/v1p0/#tool-jwt\n  // https://www.imsglobal.org/spec/security/v1p0/#id-token\n  iss: z.string(),\n  aud: z.string(),\n  sub: z.string(),\n  exp: z.number(),\n  iat: z.number(),\n  azp: z.string().optional(),\n  nonce: z.string(),\n\n  given_name: z.string().optional(),\n  family_name: z.string().optional(),\n  name: z.string().optional(),\n  email: z.string().optional(),\n  locale: z.string().optional(),\n  // Could be more from OIDC Standard Claims\n  'https://purl.imsglobal.org/spec/lti/claim/roles': z.string().array(),\n\n  'https://purl.imsglobal.org/spec/lti/claim/context': z\n    .object({\n      id: z.string(),\n      type: z.string().array().nullish(),\n      label: z.string().nullish(),\n      title: z.string().nullish(),\n    })\n    .nullish(),\n\n  'https://purl.imsglobal.org/spec/lti/claim/tool_platform': z\n    .object({\n      guid: z.string().max(255),\n      name: z.string().optional(),\n      contact_email: z.string().optional(),\n      description: z.string().optional(),\n      url: z.string().optional(),\n      product_family_code: z.string().optional(),\n      version: z.string().optional(),\n    })\n    .nullish(),\n\n  'https://purl.imsglobal.org/spec/lti/claim/role_scope_mentor': z.string().array().nullish(),\n\n  'https://purl.imsglobal.org/spec/lti/claim/launch_presentation': z\n    .object({\n      document_target: z.string().optional(),\n      height: z.number().optional(),\n      width: z.number().optional(),\n      return_url: z.string().optional(),\n      locale: z.string().optional(),\n    })\n    .nullish(),\n\n  'https://purl.imsglobal.org/spec/lti/claim/lis': z.any().nullish(),\n  'https://purl.imsglobal.org/spec/lti/claim/custom': z.any().nullish(),\n\n  // https://www.imsglobal.org/spec/lti/v1p3#vendor-specific-extension-claims\n  // My development Canvas sends their own named extension as a top level property\n  // \"https://www.instructure.com/placement\": \"course_navigation\"\n});\nexport type Lti13ClaimType = z.infer<typeof Lti13ClaimSchema>;\n\nexport const STUDENT_ROLE = 'http://purl.imsglobal.org/vocab/lis/v2/membership#Learner';\n\nexport class Lti13Claim {\n  private claims: Lti13ClaimType;\n  private req: Request;\n  private valid = false;\n\n  constructor(req: Request) {\n    try {\n      this.claims = Lti13ClaimSchema.passthrough().parse(req.session.lti13_claims);\n    } catch (err) {\n      throw new AugmentedError('LTI session invalid or timed out, please try logging in again.', {\n        cause: err,\n        status: 403,\n      });\n    }\n    this.valid = true;\n    this.req = req;\n\n    // Check to see that it's not expired\n    this.assertValid();\n  }\n\n  // Accessors\n\n  get context() {\n    this.assertValid();\n    return this.claims['https://purl.imsglobal.org/spec/lti/claim/context'];\n  }\n\n  get roles() {\n    this.assertValid();\n    return this.claims['https://purl.imsglobal.org/spec/lti/claim/roles'];\n  }\n\n  get deployment_id() {\n    this.assertValid();\n    return this.claims['https://purl.imsglobal.org/spec/lti/claim/deployment_id'];\n  }\n\n  get target_link_uri() {\n    this.assertValid();\n    return this.claims['https://purl.imsglobal.org/spec/lti/claim/target_link_uri'];\n  }\n\n  get lineitems() {\n    this.assertValid();\n    return this.claims['https://purl.imsglobal.org/spec/lti-ags/claim/endpoint']?.lineitems;\n  }\n\n  get context_memberships_url() {\n    this.assertValid();\n    return this.claims['https://purl.imsglobal.org/spec/lti-nrps/claim/namesroleservice']\n      ?.context_memberships_url;\n  }\n\n  // Functions\n\n  private assertValid() {\n    if (!this.valid || Math.floor(Date.now() / 1000) > this.claims.exp) {\n      this.valid = false;\n      delete this.req.session['lti13_claims'];\n      throw new HttpStatusError(\n        403,\n        'LTI session invalid or timed out, please try logging in again.',\n      );\n    }\n  }\n\n  isRoleTestUser() {\n    this.assertValid();\n    return this.roles.includes('http://purl.imsglobal.org/vocab/lti/system/person#TestUser');\n  }\n\n  /**\n   * Return if user claim has roles for Instructor. Can toggle if a TA is considered an\n   * instructor or not.\n   */\n  isRoleInstructor(): boolean {\n    this.assertValid();\n    /*\n     TA roles from Canvas development system\n     [\n      'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Instructor',\n      'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Student',\n      'http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor',\n      'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistant',\n      'http://purl.imsglobal.org/vocab/lis/v2/system/person#User'\n     ]\n    Student roles\n    [\n      'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Instructor',\n      'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Student',\n      'http://purl.imsglobal.org/vocab/lis/v2/membership#Learner',\n      'http://purl.imsglobal.org/vocab/lis/v2/system/person#User'\n    ]\n    Designer roles\n    [\n      'http://purl.imsglobal.org/vocab/lis/v2/institution/person#Instructor',\n      'http://purl.imsglobal.org/vocab/lis/v2/membership#ContentDeveloper',\n      'http://purl.imsglobal.org/vocab/lis/v2/system/person#User'\n    ]\n    */\n\n    let role_instructor = this.roles.some((val: string) =>\n      [\n        'http://purl.imsglobal.org/vocab/lis/v2/membership#Instructor',\n        'http://purl.imsglobal.org/vocab/lis/v2/membership#ContentDeveloper',\n      ].includes(val),\n    );\n\n    // TA roles may also have Instructor roles, so check this next. We don't\n    // currently consider TAs to be instructors.\n    if (\n      this.roles.includes(\n        'http://purl.imsglobal.org/vocab/lis/v2/membership/Instructor#TeachingAssistant',\n      )\n    ) {\n      role_instructor = false;\n    }\n\n    return role_instructor;\n  }\n\n  get(property: _.PropertyPath): any {\n    this.assertValid();\n    // Uses lodash.get to expand path representation in text to the object, like 'a[0].b.c'\n    // eslint-disable-next-line you-dont-need-lodash-underscore/get\n    return _.get(this.claims, property);\n  }\n\n  /**\n   * Invalidate the object and remove the claims from the session\n   */\n  remove() {\n    this.valid = false;\n    delete this.req.session['lti13_claims'];\n    delete this.req.session['authn_lti13_instance_id'];\n  }\n}\n\nexport async function validateLti13CourseInstance(\n  resLocals: Record<string, any>,\n): Promise<boolean> {\n  const feature_enabled = await features.enabledFromLocals('lti13', resLocals);\n\n  if (!feature_enabled) {\n    return false;\n  }\n\n  const hasLti13CourseInstance = await queryRow(\n    sql.select_ci_validation,\n    {\n      course_instance_id: resLocals.course_instance.id,\n    },\n    z.boolean(),\n  );\n\n  if (!hasLti13CourseInstance) {\n    return false;\n  }\n\n  const instAuthProviders = await getInstitutionAuthenticationProviders(resLocals.institution.id);\n  return instAuthProviders.some((a) => a.name === 'LTI 1.3');\n}\n\nexport async function getAccessToken(lti13_instance_id: string) {\n  const lti13_instance = await selectLti13Instance(lti13_instance_id);\n\n  let tokenSet: TokenSet = lti13_instance.access_tokenset;\n\n  const fiveMinutesInTheFuture = new Date(Date.now() + 5 * 60 * 1000);\n\n  if (\n    lti13_instance.access_token_expires_at &&\n    lti13_instance.access_token_expires_at > fiveMinutesInTheFuture\n  ) {\n    return tokenSet.access_token;\n  }\n\n  // Fetch the token\n  const issuer = new Issuer(lti13_instance.issuer_params);\n  const client = new issuer.Client(lti13_instance.client_params, lti13_instance.keystore);\n\n  tokenSet = await client.grant(\n    {\n      grant_type: 'client_credentials',\n      scope: TOKEN_SCOPES.join(' '),\n    },\n    {\n      clientAssertionPayload: {\n        // Canvas requires the `aud` claim the be (or contain) the token endpoint:\n        // https://github.com/instructure/canvas-lms/blob/995169713440bd8305854d440b336911a734c38f/lib/canvas/oauth/client_credentials_provider.rb#L26-L29\n        // https://github.com/instructure/canvas-lms/blob/995169713440bd8305854d440b336911a734c38f/lib/canvas/oauth/asymmetric_client_credentials_provider.rb#L24\n        //\n        // From what we can tell, the OIDC spec requires this as well, see \"private key jwt\"\n        // here: https://openid.net/specs/openid-connect-core-1_0.html#rfc.section.9\n        //\n        // \"The Audience SHOULD be the URL of the Authorization Server's Token Endpoint.\"\n        //\n        // However, `openid-client` changed their behavior in the following commit:\n        // https://github.com/panva/openid-client/commit/0b05217e7f283b75fd93c27c0f8c647f37501a33\n        //\n        // There wasn't a justification provided and this seems to deviate from the OIDC spec.\n        // See a discussion here: https://github.com/panva/openid-client/discussions/730\n        aud: [...new Set([issuer.issuer, issuer.token_endpoint].filter(Boolean))],\n      },\n    },\n  );\n\n  // Store the token for reuse\n  const expires_at = tokenSet.expires_at ? tokenSet.expires_at * 1000 : Date.now();\n\n  await queryAsync(sql.update_token, {\n    lti13_instance_id,\n    access_tokenset: tokenSet,\n    access_token_expires_at: new Date(expires_at),\n  });\n  return tokenSet.access_token;\n}\n\nexport async function getLineitems(instance: Lti13CombinedInstance) {\n  if (instance.lti13_course_instance.lineitems_url == null) {\n    throw new HttpStatusError(400, 'Lineitems not defined');\n  }\n  const token = await getAccessToken(instance.lti13_instance.id);\n  const fetchArray = await fetchRetryPaginated(instance.lti13_course_instance.lineitems_url, {\n    method: 'GET',\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  const lineitems = LineitemsSchema.array().parse(fetchArray);\n  return lineitems.flat();\n}\n\nexport async function getLineitem(instance: Lti13CombinedInstance, lineitem_id_url: string) {\n  const token = await getAccessToken(instance.lti13_instance.id);\n  const fetchRes = await fetchRetry(lineitem_id_url, {\n    method: 'GET',\n    headers: { Authorization: `Bearer ${token}` },\n  });\n\n  return LineitemSchema.parse(await fetchRes.json());\n}\n\nexport async function syncLineitems(instance: Lti13CombinedInstance, job: ServerJob) {\n  job.info(\n    `Polling for external assignments from ${instance.lti13_instance.name} ${instance.lti13_course_instance.context_label}`,\n  );\n  const lineitems = await getLineitems(instance);\n  job.info(`Found ${lineitems.length} assignments.`);\n\n  const lineitems_import = lineitems.map((item) => {\n    return {\n      lineitem: item,\n      lineitem_id_url: item.id,\n      lti13_course_instance_id: instance.lti13_course_instance.id,\n    };\n  });\n\n  await runInTransactionAsync(async () => {\n    const output = await queryRow(\n      sql.sync_lti13_assessments,\n      {\n        lti13_course_instance_id: instance.lti13_course_instance.id,\n        lineitems_import: JSON.stringify(lineitems_import),\n      },\n      z.object({\n        updated: z.string(),\n        deleted: z.string(),\n      }),\n    );\n\n    job.info(\n      `\\nSummary of PrairieLearn changes: ${output.updated} updated, ${output.deleted} deleted.`,\n    );\n  });\n  job.info('Done.');\n}\n\nexport async function createAndLinkLineitem(\n  instance: Lti13CombinedInstance,\n  job: ServerJob,\n  assessment: {\n    label: string;\n    id: string;\n    url: string;\n  },\n) {\n  if (instance.lti13_course_instance.lineitems_url == null) {\n    throw new HttpStatusError(400, 'Lineitems not defined');\n  }\n\n  const createBody: Omit<Lineitem, 'id'> = {\n    scoreMaximum: 100,\n    label: assessment.label,\n    resourceId: assessment.id,\n    'https://canvas.instructure.com/lti/submission_type': {\n      type: 'external_tool',\n      external_tool_url: assessment.url,\n    },\n  };\n\n  job.info(\n    `Creating assignment for ${assessment.label} in ${instance.lti13_instance.name} ${instance.lti13_course_instance.context_label}`,\n  );\n\n  const token = await getAccessToken(instance.lti13_instance.id);\n  const fetchRes = await fetchRetry(instance.lti13_course_instance.lineitems_url, {\n    method: 'POST',\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-type': 'application/vnd.ims.lis.v2.lineitem+json',\n    },\n    body: JSON.stringify(createBody),\n  });\n  const item = LineitemSchema.parse(await fetchRes.json());\n\n  job.info('Associating PrairieLearn assessment with the new assignment');\n\n  await linkAssessment(instance.lti13_course_instance.id, assessment.id, item);\n  job.info('Done.');\n}\n\nexport async function queryAndLinkLineitem(\n  instance: Lti13CombinedInstance,\n  lineitem_id_url: string,\n  unsafe_assessment_id: string | number,\n) {\n  const item = await getLineitem(instance, lineitem_id_url);\n\n  if (item) {\n    await linkAssessment(instance.lti13_course_instance.id, unsafe_assessment_id, item);\n  } else {\n    throw new HttpStatusError(400, 'Lineitem not found');\n  }\n}\n\nexport async function unlinkAssessment(\n  lti13_course_instance_id: string,\n  assessment_id: string | number,\n) {\n  await queryAsync(sql.delete_lti13_assessment, {\n    lti13_course_instance_id,\n    assessment_id,\n  });\n}\n\nexport async function linkAssessment(\n  lti13_course_instance_id: string,\n  unsafe_assessment_id: string | number,\n  lineitem: Lineitem,\n) {\n  const assessment = await queryRow(\n    sql.select_assessment_in_lti13_course_instance,\n    {\n      unsafe_assessment_id,\n      lti13_course_instance_id,\n    },\n    AssessmentSchema,\n  );\n\n  if (assessment === null) {\n    throw new HttpStatusError(403, 'Invalid assessment id');\n  }\n\n  await queryAsync(sql.upsert_lti13_assessment, {\n    lti13_course_instance_id,\n    lineitem_id_url: lineitem.id,\n    lineitem: JSON.stringify(lineitem),\n    assessment_id: assessment.id,\n  });\n}\n\n/* Throttling notes\n// https://canvas.instructure.com/doc/api/file.throttling.html\n// 403 Forbidden (Rate Limit Exceeded)\n// X-Request-Cost\n// X-Rate-Limit-Remaining\n*/\n\n/**\n * Make HTTP fetch requests with retries\n *\n * @param input URL to visit\n * @param opts fetch options\n * @param incomingfetchRetryOpts options specific to fetchRetry\n * @returns Node fetch response object\n */\nexport async function fetchRetry(\n  input: RequestInfo | URL,\n  opts?: RequestInit | undefined,\n  incomingfetchRetryOpts?: {\n    retryLeft?: number;\n    sleepMs?: number;\n  },\n): Promise<Response> {\n  const fetchRetryOpts = {\n    retryLeft: 5,\n    sleepMs: 1000,\n    ...incomingfetchRetryOpts,\n  };\n  try {\n    const response = await fetch(input, opts);\n\n    switch (response.status) {\n      // 422 Unprocessable Entity, User not found in course or is not a student\n      case 422:\n        return response;\n    }\n\n    if (!response.ok) {\n      throw new AugmentedError('LTI 1.3 fetch error, please try again', {\n        data: {\n          status: response.status,\n          statusText: response.statusText,\n          body: await response.text(),\n        },\n      });\n    }\n    return response;\n  } catch (err) {\n    fetchRetryOpts.retryLeft -= 1;\n    if (fetchRetryOpts.retryLeft === 0) {\n      throw err;\n    }\n    await sleep(fetchRetryOpts.sleepMs);\n    return await fetchRetry(input, opts, fetchRetryOpts);\n  }\n}\n\n/**\n * Pagination wrapper around fetchRetry\n *\n * @param input\n * @param opts\n * @param incomingfetchRetryOpts\n * @param input URL to visit\n * @param opts fetch options\n * @param incomingfetchRetryOpts options specific to fetchRetry\n * @returns Array of JSON responses from fetch\n */\nexport async function fetchRetryPaginated(\n  input: RequestInfo | URL,\n  opts?: RequestInit | undefined,\n  incomingfetchRetryOpts?: {\n    retryLeft?: number;\n    sleepMs?: number;\n  },\n): Promise<unknown[]> {\n  const output: unknown[] = [];\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const res = await fetchRetry(input, opts, incomingfetchRetryOpts);\n    output.push(await res.json());\n\n    const parsed = parseLinkHeader(res.headers.get('link')) ?? {};\n    if ('next' in parsed) {\n      input = parsed.next.url;\n    } else {\n      return output;\n    }\n  }\n}\n\n// https://www.imsglobal.org/spec/lti-ags/v2p0#score-publish-service\nexport const Lti13ScoreSchema = z.object({\n  scoreGiven: z.number(),\n  scoreMaximum: z.number(),\n  userId: z.string(),\n  scoringUserId: z.string().optional(),\n  activityProgress: z.enum(['Initialized', 'Started', 'InProgress', 'Submitted', 'Completed']),\n  gradingProgress: z.enum(['FullyGraded', 'Pending', 'PendingManual', 'Failed', 'NotReady']),\n  timestamp: DateFromISOString,\n  submission: z\n    .object({\n      startedAt: DateFromISOString.optional(),\n      submittedAt: DateFromISOString.optional(),\n    })\n    .optional(),\n  comment: z.string().optional(),\n});\nexport type Lti13Score = z.infer<typeof Lti13ScoreSchema>;\n\nconst UsersWithLti13SubSchema = UserSchema.extend({\n  lti13_sub: z.string().nullable(),\n});\ntype UsersWithLti13Sub = z.infer<typeof UsersWithLti13SubSchema>;\n\n// https://www.imsglobal.org/spec/lti-nrps/v2p0/#sharing-of-personal-data\nconst ContextMembershipSchema = z.object({\n  user_id: z.string(),\n  roles: z.string().array(), // https://www.imsglobal.org/spec/lti/v1p3#role-vocabularies\n  status: z.enum(['Active', 'Inactive', 'Deleted']).optional(),\n  email: z.string().optional(),\n});\ntype ContextMembership = z.infer<typeof ContextMembershipSchema>;\n\nconst ContextMembershipContainerSchema = z.object({\n  id: z.string(),\n  context: z.object({\n    id: z.string(),\n  }),\n  members: ContextMembershipSchema.array(),\n});\n\nclass Lti13ContextMembership {\n  #memberships: Record<string, ContextMembership[]> = {};\n\n  private constructor(memberships: ContextMembership[]) {\n    // Turn array into an object for efficient lookups. We need to retain duplicates\n    // so that we can detect and handle the case where two users have the same email.\n    for (const member of memberships) {\n      if (member.email === undefined) {\n        continue;\n      }\n      this.#memberships[member.email] ??= [];\n      this.#memberships[member.email].push(member);\n    }\n  }\n\n  static async loadForInstance({\n    lti13_instance,\n    lti13_course_instance,\n  }: Lti13CombinedInstance): Promise<Lti13ContextMembership> {\n    if (lti13_course_instance.context_memberships_url === null) {\n      throw new HttpStatusError(\n        403,\n        'LTI 1.3 course instance context_memberships_url not configured',\n      );\n    }\n\n    const token = await getAccessToken(lti13_instance.id);\n    const fetchArray = await fetchRetryPaginated(lti13_course_instance.context_memberships_url, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`,\n        'Content-type': 'application/vnd.ims.lti-nrps.v2.membershipcontainer+json',\n      },\n    });\n\n    const containers = ContextMembershipContainerSchema.array().parse(fetchArray);\n    const ltiMemberships = containers.flatMap((c) => {\n      return c.members;\n    });\n\n    const filteredMemberships = ltiMemberships.filter((member: ContextMembership) => {\n      // Skip invalid cases\n      if (\n        member.roles.includes('http://purl.imsglobal.org/vocab/lti/system/person#TestUser') ||\n        !('email' in member)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    return new Lti13ContextMembership(filteredMemberships);\n  }\n\n  /**\n   * @param user The user to look up.\n   * @returns The LTI 1.3 sub (user_id) for the user, or null if not found.\n   */\n  async lookup(user: UsersWithLti13Sub): Promise<string | null> {\n    if (user.lti13_sub !== null) {\n      return user.lti13_sub;\n    }\n\n    for (const match of ['uid', 'email']) {\n      const memberResults = this.#memberships[user[match]];\n\n      if (!memberResults) continue;\n\n      // member.email cannot be duplicated in memberships\n      if (memberResults.length > 1) return null;\n\n      // The `user_id` that we get from the membership API is what we call `lti13_sub`.\n      return memberResults[0].user_id;\n    }\n\n    // The user wan't found.\n    return null;\n  }\n}\n\nexport async function updateLti13Scores(\n  unsafe_assessment_id: string | number,\n  instance: Lti13CombinedInstance,\n  job: ServerJob,\n) {\n  // Get the assessment metadata\n  const assessment = await queryRow(\n    sql.select_assessment_for_lti13_scores,\n    {\n      unsafe_assessment_id,\n      lti13_course_instance_id: instance.lti13_course_instance.id,\n    },\n    AssessmentSchema.extend({\n      lti13_lineitem_id_url: z.string(),\n      lti13_instance_id: z.string(),\n      context_memberships_url: z.string(),\n    }),\n  );\n\n  if (assessment === null) {\n    throw new HttpStatusError(403, 'Invalid assessment.id');\n  }\n\n  job.info(`Sending grade data for ${assessment.tid} ${assessment.title}`);\n\n  const token = await getAccessToken(instance.lti13_instance.id);\n\n  const assessment_instances = await queryRows(\n    sql.select_assessment_instances_for_scores,\n    {\n      assessment_id: assessment.id,\n    },\n    AssessmentInstanceSchema.extend({\n      score_perc: z.number(), // not .nullable() from SQL query\n      date: DateFromISOString, // not .nullable() from SQL query\n      users: UsersWithLti13SubSchema.array(),\n    }),\n  );\n\n  const memberships = await Lti13ContextMembership.loadForInstance(instance);\n  const timestamp = new Date();\n\n  for (const assessment_instance of assessment_instances) {\n    for (const user of assessment_instance.users) {\n      job.info(`ai=${assessment_instance.id}, ${assessment_instance.score_perc}% for ${user.name}`);\n\n      const userId = await memberships.lookup(user);\n      if (userId === null) {\n        job.warn(`* Could not find LTI user information for ${user.name} ${user.uid}, skipping...`);\n        continue;\n      }\n\n      const submittedAt = await selectAssessmentInstanceLastSubmissionDate(assessment_instance.id);\n\n      /*\n       https://www.imsglobal.org/spec/lti-ags/v2p0#score-service-media-type-and-schema\n       Canvas has extensions we could use described at\n       https://canvas.instructure.com/doc/api/score.html#method.lti/ims/scores.create\n      */\n      const score: Lti13Score = {\n        timestamp,\n        scoreGiven: assessment_instance.score_perc,\n        scoreMaximum: 100,\n        activityProgress: assessment_instance.open ? 'Submitted' : 'Completed',\n        gradingProgress: 'FullyGraded',\n        userId,\n        submission: {\n          startedAt: assessment_instance.date,\n          submittedAt: submittedAt ?? undefined,\n        },\n      };\n\n      const res = await fetchRetry(assessment.lti13_lineitem_id_url + '/scores', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-type': 'application/vnd.ims.lis.v1.score+json',\n        },\n        body: JSON.stringify(score),\n      });\n\n      job.info(`\\t${res.statusText}`);\n      if (!res.ok) {\n        job.warn(`\\t${await res.text()}`);\n      }\n    }\n  }\n}\n"]}