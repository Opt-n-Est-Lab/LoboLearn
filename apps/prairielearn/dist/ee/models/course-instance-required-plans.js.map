{"version":3,"file":"course-instance-required-plans.js","sourceRoot":"","sources":["../../../src/ee/models/course-instance-required-plans.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAEhE,OAAO,EAAE,gCAAgC,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACnF,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAC3D,OAAO,EAAiB,MAAM,+BAA+B,CAAC;AAE9D,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE1C,MAAM,2CAA2C,GAAG,gCAAgC,CAAC,MAAM,CAAC;IAC1F,SAAS,EAAE,QAAQ;IACnB,cAAc,EAAE,QAAQ;CACzB,CAAC,CAAC;AAEH,MAAM,CAAC,KAAK,UAAU,gCAAgC,CACpD,kBAA0B,EAC1B,IAAc,EACd,aAAqB;IAErB,MAAM,eAAe,GAAG,MAAM,QAAQ,CACpC,GAAG,CAAC,wCAAwC,EAC5C,EAAE,kBAAkB,EAAE,SAAS,EAAE,IAAI,EAAE,EACvC,2CAA2C,CAC5C,CAAC;IACF,MAAM,cAAc,CAAC;QACnB,aAAa;QACb,UAAU,EAAE,gCAAgC;QAC5C,MAAM,EAAE,QAAQ;QAChB,cAAc,EAAE,eAAe,CAAC,cAAc;QAC9C,SAAS,EAAE,eAAe,CAAC,SAAS;QACpC,kBAAkB;QAClB,SAAS,EAAE,eAAe;QAC1B,MAAM,EAAE,eAAe,CAAC,EAAE;KAC3B,CAAC,CAAC;IACH,OAAO,eAAe,CAAC;AACzB,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gCAAgC,CACpD,kBAA0B,EAC1B,IAAc,EACd,aAAqB;IAErB,MAAM,mBAAmB,GAAG,MAAM,QAAQ,CACxC,GAAG,CAAC,wCAAwC,EAC5C;QACE,kBAAkB;QAClB,SAAS,EAAE,IAAI;KAChB,EACD,2CAA2C,CAC5C,CAAC;IACF,MAAM,cAAc,CAAC;QACnB,aAAa;QACb,UAAU,EAAE,gCAAgC;QAC5C,MAAM,EAAE,QAAQ;QAChB,cAAc,EAAE,mBAAmB,CAAC,cAAc;QAClD,SAAS,EAAE,mBAAmB,CAAC,cAAc;QAC7C,kBAAkB;QAClB,SAAS,EAAE,mBAAmB;QAC9B,MAAM,EAAE,mBAAmB,CAAC,EAAE;KAC/B,CAAC,CAAC;IACH,OAAO,mBAAmB,CAAC;AAC7B,CAAC","sourcesContent":["import { loadSqlEquiv, queryRow } from '@prairielearn/postgres';\n\nimport { CourseInstanceRequiredPlanSchema, IdSchema } from '../../lib/db-types.js';\nimport { insertAuditLog } from '../../models/audit-log.js';\nimport { type PlanName } from '../lib/billing/plans-types.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nconst CourseInstanceRequiredPlanWithContextSchema = CourseInstanceRequiredPlanSchema.extend({\n  course_id: IdSchema,\n  institution_id: IdSchema,\n});\n\nexport async function insertCourseInstanceRequiredPlan(\n  course_instance_id: string,\n  plan: PlanName,\n  authn_user_id: string,\n) {\n  const newRequiredPlan = await queryRow(\n    sql.insert_required_plan_for_course_instance,\n    { course_instance_id, plan_name: plan },\n    CourseInstanceRequiredPlanWithContextSchema,\n  );\n  await insertAuditLog({\n    authn_user_id,\n    table_name: 'course_instance_required_plans',\n    action: 'insert',\n    institution_id: newRequiredPlan.institution_id,\n    course_id: newRequiredPlan.course_id,\n    course_instance_id,\n    new_state: newRequiredPlan,\n    row_id: newRequiredPlan.id,\n  });\n  return newRequiredPlan;\n}\n\nexport async function deleteCourseInstanceRequiredPlan(\n  course_instance_id: string,\n  plan: PlanName,\n  authn_user_id: string,\n) {\n  const deletedRequiredPlan = await queryRow(\n    sql.delete_required_plan_for_course_instance,\n    {\n      course_instance_id,\n      plan_name: plan,\n    },\n    CourseInstanceRequiredPlanWithContextSchema,\n  );\n  await insertAuditLog({\n    authn_user_id,\n    table_name: 'course_instance_required_plans',\n    action: 'delete',\n    institution_id: deletedRequiredPlan.institution_id,\n    course_id: deletedRequiredPlan.institution_id,\n    course_instance_id,\n    old_state: deletedRequiredPlan,\n    row_id: deletedRequiredPlan.id,\n  });\n  return deletedRequiredPlan;\n}\n"]}