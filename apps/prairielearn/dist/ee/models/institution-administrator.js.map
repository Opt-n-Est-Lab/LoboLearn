{"version":3,"file":"institution-administrator.js","sourceRoot":"","sources":["../../../src/ee/models/institution-administrator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,qBAAqB,EAAE,MAAM,wBAAwB,CAAC;AAE/F,OAAO,EAAE,8BAA8B,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAC;AAE3D,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE1C,MAAM,CAAC,KAAK,UAAU,8BAA8B,CAAC,EACnD,OAAO,EACP,cAAc,EACd,aAAa,GAKd;IACC,MAAM,qBAAqB,CAAC,KAAK,IAAI,EAAE;QACrC,MAAM,iBAAiB,GAAG,MAAM,gBAAgB,CAC9C,GAAG,CAAC,wBAAwB,EAC5B,EAAE,OAAO,EAAE,cAAc,EAAE,EAC3B,8BAA8B,CAC/B,CAAC;QAEF,IAAI,iBAAiB,EAAE,CAAC;YACtB,MAAM,cAAc,CAAC;gBACnB,aAAa;gBACb,UAAU,EAAE,4BAA4B;gBACxC,MAAM,EAAE,QAAQ;gBAChB,cAAc,EAAE,iBAAiB,CAAC,cAAc;gBAChD,OAAO,EAAE,iBAAiB,CAAC,OAAO;gBAClC,MAAM,EAAE,iBAAiB,CAAC,EAAE;gBAC5B,SAAS,EAAE,iBAAiB;aAC7B,CAAC,CAAC;QACL,CAAC;QAED,OAAO,iBAAiB,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,8BAA8B,CAAC,EACnD,cAAc,EACd,mCAAmC,EACnC,aAAa,GAKd;IACC,MAAM,qBAAqB,CAAC,KAAK,IAAI,EAAE;QACrC,MAAM,iBAAiB,GAAG,MAAM,gBAAgB,CAC9C,GAAG,CAAC,wBAAwB,EAC5B;YACE,cAAc;YACd,mCAAmC;SACpC,EACD,8BAA8B,CAC/B,CAAC;QAEF,IAAI,iBAAiB,EAAE,CAAC;YACtB,MAAM,cAAc,CAAC;gBACnB,aAAa;gBACb,UAAU,EAAE,4BAA4B;gBACxC,MAAM,EAAE,QAAQ;gBAChB,cAAc,EAAE,iBAAiB,CAAC,cAAc;gBAChD,OAAO,EAAE,iBAAiB,CAAC,OAAO;gBAClC,MAAM,EAAE,iBAAiB,CAAC,EAAE;gBAC5B,SAAS,EAAE,iBAAiB;aAC7B,CAAC,CAAC;QACL,CAAC;QAED,OAAO,iBAAiB,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { loadSqlEquiv, queryOptionalRow, runInTransactionAsync } from '@prairielearn/postgres';\n\nimport { InstitutionAdministratorSchema } from '../../lib/db-types.js';\nimport { insertAuditLog } from '../../models/audit-log.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nexport async function ensureInstitutionAdministrator({\n  user_id,\n  institution_id,\n  authn_user_id,\n}: {\n  user_id: string;\n  institution_id: string;\n  authn_user_id: string;\n}) {\n  await runInTransactionAsync(async () => {\n    const institution_admin = await queryOptionalRow(\n      sql.ensure_institution_admin,\n      { user_id, institution_id },\n      InstitutionAdministratorSchema,\n    );\n\n    if (institution_admin) {\n      await insertAuditLog({\n        authn_user_id,\n        table_name: 'institution_administrators',\n        action: 'insert',\n        institution_id: institution_admin.institution_id,\n        user_id: institution_admin.user_id,\n        row_id: institution_admin.id,\n        new_state: institution_admin,\n      });\n    }\n\n    return institution_admin;\n  });\n}\n\nexport async function deleteInstitutionAdministrator({\n  institution_id,\n  unsafe_institution_administrator_id,\n  authn_user_id,\n}: {\n  institution_id: string;\n  unsafe_institution_administrator_id: string;\n  authn_user_id: string;\n}) {\n  await runInTransactionAsync(async () => {\n    const institution_admin = await queryOptionalRow(\n      sql.delete_institution_admin,\n      {\n        institution_id,\n        unsafe_institution_administrator_id,\n      },\n      InstitutionAdministratorSchema,\n    );\n\n    if (institution_admin) {\n      await insertAuditLog({\n        authn_user_id,\n        table_name: 'institution_administrators',\n        action: 'delete',\n        institution_id: institution_admin.institution_id,\n        user_id: institution_admin.user_id,\n        row_id: institution_admin.id,\n        old_state: institution_admin,\n      });\n    }\n\n    return institution_admin;\n  });\n}\n"]}