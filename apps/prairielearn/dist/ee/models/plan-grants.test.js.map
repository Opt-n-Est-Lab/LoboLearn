{"version":3,"file":"plan-grants.test.js","sourceRoot":"","sources":["../../../src/ee/models/plan-grants.test.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAC;AAE5D,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAC;AAEnD,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;IAC3B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACxB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEtB,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,QAAQ,CAAC,2BAA2B,CAAC,KAAK,IAAI,EAAE;gBACpD,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC;oBACjC,GAAG,EAAE,qBAAqB;oBAC1B,IAAI,EAAE,iBAAiB;oBACvB,GAAG,EAAE,SAAS;oBACd,KAAK,EAAE,qBAAqB;iBAC7B,CAAC,CAAC;gBAEH,MAAM,eAAe,CAAC;oBACpB,UAAU,EAAE;wBACV,SAAS,EAAE,OAAO;wBAClB,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,IAAI,CAAC,OAAO;qBACtB;oBACD,aAAa,EAAE,IAAI,CAAC,OAAO;iBAC5B,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,eAAe,EAAE,KAAK,IAAI,EAAE;YAC7B,MAAM,QAAQ,CAAC,2BAA2B,CAAC,KAAK,IAAI,EAAE;gBACpD,MAAM,IAAI,GAAG,MAAM,eAAe,CAAC;oBACjC,GAAG,EAAE,qBAAqB;oBAC1B,IAAI,EAAE,iBAAiB;oBACvB,GAAG,EAAE,SAAS;oBACd,KAAK,EAAE,qBAAqB;iBAC7B,CAAC,CAAC;gBAEH,MAAM,OAAO,GAAG;oBACd,UAAU,EAAE;wBACV,SAAS,EAAE,OAAO;wBAClB,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE,IAAI,CAAC,OAAO;qBACtB;oBACD,aAAa,EAAE,IAAI,CAAC,OAAO;iBACnB,CAAC;gBAEX,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC;gBAC/B,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as helperDb from '../../tests/helperDb.js';\nimport { getOrCreateUser } from '../../tests/utils/auth.js';\n\nimport { ensurePlanGrant } from './plan-grants.js';\n\ndescribe('plan-grants', () => {\n  before(helperDb.before);\n  after(helperDb.after);\n\n  describe('insertPlanGrant', () => {\n    it('creates a plan grant with audit logs', async () => {\n      await helperDb.runInTransactionAndRollback(async () => {\n        const user = await getOrCreateUser({\n          uid: 'student@example.com',\n          name: 'Example Student',\n          uin: 'student',\n          email: 'student@example.com',\n        });\n\n        await ensurePlanGrant({\n          plan_grant: {\n            plan_name: 'basic',\n            type: 'stripe',\n            user_id: user.user_id,\n          },\n          authn_user_id: user.user_id,\n        });\n      });\n    });\n\n    it('is idempotent', async () => {\n      await helperDb.runInTransactionAndRollback(async () => {\n        const user = await getOrCreateUser({\n          uid: 'student@example.com',\n          name: 'Example Student',\n          uin: 'student',\n          email: 'student@example.com',\n        });\n\n        const options = {\n          plan_grant: {\n            plan_name: 'basic',\n            type: 'stripe',\n            user_id: user.user_id,\n          },\n          authn_user_id: user.user_id,\n        } as const;\n\n        await ensurePlanGrant(options);\n        await ensurePlanGrant(options);\n      });\n    });\n  });\n});\n"]}