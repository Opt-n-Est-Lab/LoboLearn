{"version":3,"file":"administratorInstitutionCourse.js","sourceRoot":"","sources":["../../../../src/ee/pages/administratorInstitutionCourse/administratorInstitutionCourse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,SAAS,EAAE,qBAAqB,EAAE,MAAM,wBAAwB,CAAC;AAElG,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AACxD,OAAO,EAAE,cAAc,EAAE,MAAM,8BAA8B,CAAC;AAC9D,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE1D,OAAO,EACL,8BAA8B,EAC9B,uBAAuB,GACxB,MAAM,0CAA0C,CAAC;AAElD,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAE7C,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,WAAW,GAAG,MAAM,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;IACpE,MAAM,MAAM,GAAG,MAAM,QAAQ,CAC3B,GAAG,CAAC,aAAa,EACjB;QACE,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc;QACzC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;KAChC,EACD,YAAY,CACb,CAAC;IACF,MAAM,IAAI,GAAG,MAAM,SAAS,CAC1B,GAAG,CAAC,uBAAuB,EAC3B,EAAE,SAAS,EAAE,MAAM,CAAC,EAAE,EAAE,EACxB,uBAAuB,CACxB,CAAC;IACF,GAAG,CAAC,IAAI,CACN,8BAA8B,CAAC;QAC7B,WAAW;QACX,MAAM;QACN,IAAI;QACJ,SAAS,EAAE,GAAG,CAAC,MAAM;KACtB,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,MAAM,GAAG,MAAM,QAAQ,CAC3B,GAAG,CAAC,aAAa,EACjB;QACE,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc;QACzC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;KAChC,EACD,YAAY,CACb,CAAC;IAEF,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,0BAA0B,EAAE,CAAC;QACrD,MAAM,IAAI,GAAG,CAAC;aACX,MAAM,CAAC;YACN,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,0BAA0B,CAAC;YAC/C,uBAAuB,EAAE,CAAC,CAAC,KAAK,CAAC;gBAC/B,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;gBACnC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;aACxB,CAAC;YACF,gCAAgC,EAAE,CAAC,CAAC,KAAK,CAAC;gBACxC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;gBACnC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE;aACxB,CAAC;SACH,CAAC;aACD,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnB,MAAM,qBAAqB,CAAC,KAAK,IAAI,EAAE;YACrC,MAAM,aAAa,GAAG,MAAM,QAAQ,CAClC,GAAG,CAAC,wBAAwB,EAC5B;gBACE,SAAS,EAAE,MAAM,CAAC,EAAE;gBACpB,uBAAuB,EAAE,IAAI,CAAC,uBAAuB;gBACrD,gCAAgC,EAAE,IAAI,CAAC,gCAAgC;aACxE,EACD,YAAY,CACb,CAAC;YACF,MAAM,cAAc,CAAC;gBACnB,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;gBAC5C,UAAU,EAAE,YAAY;gBACxB,MAAM,EAAE,QAAQ;gBAChB,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc;gBACzC,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;gBAC/B,SAAS,EAAE,MAAM;gBACjB,SAAS,EAAE,aAAa;gBACxB,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,SAAS;aAC7B,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,mBAAmB,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/E,CAAC;AACH,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\nimport { z } from 'zod';\n\nimport * as error from '@prairielearn/error';\nimport { loadSqlEquiv, queryRow, queryRows, runInTransactionAsync } from '@prairielearn/postgres';\n\nimport { CourseSchema } from '../../../lib/db-types.js';\nimport { insertAuditLog } from '../../../models/audit-log.js';\nimport { getInstitution } from '../../lib/institution.js';\n\nimport {\n  AdministratorInstitutionCourse,\n  CourseInstanceRowSchema,\n} from './administratorInstitutionCourse.html.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\nconst router = Router({ mergeParams: true });\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const institution = await getInstitution(req.params.institution_id);\n    const course = await queryRow(\n      sql.select_course,\n      {\n        institution_id: req.params.institution_id,\n        course_id: req.params.course_id,\n      },\n      CourseSchema,\n    );\n    const rows = await queryRows(\n      sql.select_course_instances,\n      { course_id: course.id },\n      CourseInstanceRowSchema,\n    );\n    res.send(\n      AdministratorInstitutionCourse({\n        institution,\n        course,\n        rows,\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    const course = await queryRow(\n      sql.select_course,\n      {\n        institution_id: req.params.institution_id,\n        course_id: req.params.course_id,\n      },\n      CourseSchema,\n    );\n\n    if (req.body.__action === 'update_enrollment_limits') {\n      const body = z\n        .object({\n          __action: z.literal('update_enrollment_limits'),\n          yearly_enrollment_limit: z.union([\n            z.literal('').transform(() => null),\n            z.coerce.number().int(),\n          ]),\n          course_instance_enrollment_limit: z.union([\n            z.literal('').transform(() => null),\n            z.coerce.number().int(),\n          ]),\n        })\n        .parse(req.body);\n      await runInTransactionAsync(async () => {\n        const updatedCourse = await queryRow(\n          sql.update_enrollment_limits,\n          {\n            course_id: course.id,\n            yearly_enrollment_limit: body.yearly_enrollment_limit,\n            course_instance_enrollment_limit: body.course_instance_enrollment_limit,\n          },\n          CourseSchema,\n        );\n        await insertAuditLog({\n          authn_user_id: res.locals.authn_user.user_id,\n          table_name: 'pl_courses',\n          action: 'update',\n          institution_id: req.params.institution_id,\n          course_id: req.params.course_id,\n          old_state: course,\n          new_state: updatedCourse,\n          row_id: req.params.course_id,\n        });\n      });\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `Unknown action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}