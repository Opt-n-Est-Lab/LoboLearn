{"version":3,"file":"administratorInstitutionLti13.types.js","sourceRoot":"","sources":["../../../../src/ee/pages/administratorInstitutionLti13/administratorInstitutionLti13.types.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,qDAAqD;AACrD,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC;KAC1C,KAAK,CACJ,CAAC,CAAC,MAAM,CAAC;IACP,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE;IACpB,aAAa,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC;IACtC,aAAa,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;IACjC,aAAa,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE;CAClC,CAAC,CACH;KACA,OAAO,CAAC,EAAE,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\n// also in config.ts as config.lti13InstancePlatforms\nexport const LTI13InstancePlatformsSchema = z\n  .array(\n    z.object({\n      platform: z.string(),\n      display_order: z.number().default(100),\n      issuer_params: z.any().optional(),\n      custom_fields: z.any().optional(),\n    }),\n  )\n  .default([]);\n\nexport type LTI13InstancePlatforms = z.infer<typeof LTI13InstancePlatformsSchema>;\n"]}