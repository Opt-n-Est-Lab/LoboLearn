{"version":3,"file":"administratorInstitutionSaml.html.js","sourceRoot":"","sources":["../../../../src/ee/pages/administratorInstitutionSaml/administratorInstitutionSaml.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport { Modal } from '../../../components/Modal.html.js';\nimport { PageLayout } from '../../../components/PageLayout.html.js';\nimport { type AuthnProvider, type Institution, type SamlProvider } from '../../../lib/db-types.js';\n\nexport function AdministratorInstitutionSaml({\n  institution,\n  samlProvider,\n  institutionAuthenticationProviders,\n  host,\n  resLocals,\n}: {\n  institution: Institution;\n  samlProvider: SamlProvider | null;\n  institutionAuthenticationProviders: AuthnProvider[];\n  host: string;\n  resLocals: Record<string, any>;\n}) {\n  const hasSamlProvider = !!samlProvider;\n  const hasEnabledSaml = institutionAuthenticationProviders.some((p) => p.name === 'SAML');\n\n  const missingAttributeMappings =\n    !samlProvider?.uid_attribute || !samlProvider?.uin_attribute || !samlProvider?.name_attribute;\n\n  const issuer = `https://${host}/saml/institution/${institution.id}`;\n  const metadataUrl = `https://${host}/pl/auth/institution/${institution.id}/saml/metadata`;\n  const assertionConsumerServiceUrl = `https://${host}/pl/auth/institution/${institution.id}/saml/callback`;\n  const testSamlUrl = `https://${host}/pl/auth/institution/${institution.id}/saml/login?RelayState=test`;\n  const testSamlStrictUrl = `https://${host}/pl/auth/institution/${institution.id}/saml/login?RelayState=test,strict`;\n\n  return PageLayout({\n    resLocals: {\n      ...resLocals,\n      institution,\n    },\n    pageTitle: 'SAML - Institution Admin',\n    navContext: {\n      type: 'administrator_institution',\n      page: 'administrator_institution',\n      subPage: 'saml',\n    },\n    preContent: [DeleteSamlConfigurationModal({ csrfToken: resLocals.__csrf_token })],\n    content: html`\n      ${hasSamlProvider && !hasEnabledSaml\n        ? html`\n            <div class=\"alert alert-warning\">\n              <h2 class=\"h5\">SAML single sign-on is not enabled</h2>\n              <p class=\"mb-0\">\n                After <a href=\"${testSamlUrl}\">testing your SAML configuration</a>, you must visit\n                the <a href=\"${resLocals.urlPrefix}/sso\">single sign-on configuration</a> page and\n                enable SAML authentication.\n              </p>\n            </div>\n          `\n        : ''}\n      ${hasSamlProvider && missingAttributeMappings\n        ? html`\n            <div class=\"alert alert-warning\">\n              <h2 class=\"h5\">Missing attribute mappings</h2>\n              <p class=\"mb-0\">\n                One or more attribute mappings are missing. These are necessary for authentication\n                to work correctly.\n              </p>\n            </div>\n          `\n        : ''}\n      ${hasSamlProvider && hasEnabledSaml && !missingAttributeMappings\n        ? html`\n            <div class=\"alert alert-success\">\n              <h2 class=\"h5\">SAML single sign-on is configured and enabled!</h2>\n              <p class=\"mb-0\">\n                Users can sign into your institution using your configured SAML provider.\n              </p>\n            </div>\n          `\n        : ''}\n      ${hasSamlProvider\n        ? html`\n            <div class=\"card mb-4\">\n              <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n                Information required by your Identity Provider\n              </div>\n              <div class=\"card-body\">\n                <p>\n                  If your Identity Provider supports obtaining Service Provider configuration from a\n                  metadata URL, use the following:\n                </p>\n                <small class=\"text-muted\">Metadata URL</small>\n                <div class=\"form-control mb-3\">${metadataUrl}</div>\n                <p>Otherwise, use the following values to configure your Identity Provider:</p>\n                <small class=\"text-muted\">Issuer / Entity ID</small>\n                <div class=\"form-control mb-3\">${issuer}</div>\n                <small class=\"text-muted\">Assertion Consumer Service URL</small>\n                <div class=\"form-control mb-3\">${assertionConsumerServiceUrl}</div>\n                <small class=\"text-muted\">Public Key</small>\n                <pre\n                  class=\"form-control mb-0\"\n                  style=\"height: auto;\"\n                ><code>${samlProvider.public_key}</code></pre>\n              </div>\n            </div>\n          `\n        : ''}\n\n      <h2 class=\"h4\">Identity Provider configuration</h2>\n      <form method=\"POST\" class=\"mb-3 js-configure-form\" ${!hasSamlProvider ? 'hidden' : ''}>\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"issuer\">Issuer / Entity ID</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"issuer\"\n            id=\"issuer\"\n            value=\"${samlProvider?.issuer ?? ''}\"\n            describedby=\"issuer-help\"\n            aria-describedby=\"issuerHelp\"\n          />\n          <small id=\"issuerHelp\" class=\"form-text text-muted\">\n            Typically a unique URL generated by your Identity Provider.\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"sso_login_url\">SSO Login URL</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"sso_login_url\"\n            id=\"sso_login_url\"\n            value=\"${samlProvider?.sso_login_url ?? ''}\"\n            aria-describedby=\"ssoLoginUrlHelp\"\n          />\n          <small id=\"ssoLoginUrlHelp\" class=\"form-text text-muted\">\n            The SAML endpoint URL generated by your Identity Provider. PrairieLearn only supports\n            the HTTP Redirect binding; HTTP POST is not supported.\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"certificate\">Public Certificate</label>\n          <textarea\n            class=\"form-control\"\n            name=\"certificate\"\n            id=\"certificate\"\n            rows=\"20\"\n            aria-describedby=\"certificateHelp\"\n          >\n${samlProvider?.certificate ?? '-----BEGIN CERTIFICATE-----\\n-----END CERTIFICATE-----'}</textarea\n          >\n          <small id=\"certificateHelp\" class=\"form-text text-muted\">\n            The public certificate of the Identity Provider. This is used to verify the signature of\n            the SAML response. This <strong>must</strong> be a valid X.509 certificate in PEM\n            format, including the header and footer.\n          </small>\n        </div>\n\n        <div class=\"mb-3 form-check\">\n          <input\n            type=\"checkbox\"\n            class=\"form-check-input\"\n            id=\"validate_audience\"\n            name=\"validate_audience\"\n            value=\"1\"\n            ${(samlProvider?.validate_audience ?? true) ? 'checked' : ''}\n            aria-describedby=\"validateAudienceHelp\"\n          />\n          <label class=\"form-check-label\" for=\"validate_audience\">Validate audience</label>\n          <div id=\"validateAudienceHelp\" class=\"small text-muted\">\n            Whether or not to validate the audience of the SAML response. This should be enabled\n            unless the Identity Provider doesn't send a correct value for the audience.\n          </div>\n        </div>\n\n        <div class=\"mb-3 form-check\">\n          <input\n            type=\"checkbox\"\n            class=\"form-check-input\"\n            id=\"want_assertions_signed\"\n            name=\"want_assertions_signed\"\n            value=\"1\"\n            ${(samlProvider?.want_assertions_signed ?? true) ? 'checked' : ''}\n            aria-describedby=\"wantAssertionsSignedHelp\"\n          />\n          <label class=\"form-check-label\" for=\"want_assertions_signed\">\n            Require signed assertions\n          </label>\n          <div id=\"wantAssertionsSignedHelp\" class=\"small text-muted\">\n            Whether or not to require that assertions are signed. This should be enabled unless the\n            Identity Provider doesn't sign assertions.\n          </div>\n        </div>\n\n        <div class=\"mb-3 form-check\">\n          <input\n            type=\"checkbox\"\n            class=\"form-check-input\"\n            id=\"want_authn_response_signed\"\n            name=\"want_authn_response_signed\"\n            value=\"1\"\n            ${(samlProvider?.want_authn_response_signed ?? true) ? 'checked' : ''}\n            aria-describedby=\"wantAuthnResponseSignedHelp\"\n          />\n          <label class=\"form-check-label\" for=\"want_authn_response_signed\">\n            Require signed response\n          </label>\n          <div id=\"wantAuthnResponseSignedHelp\" class=\"small text-muted\">\n            Whether or not to require that the response is signed. This should be enabled unless the\n            Identity Provider doesn't sign responses.\n          </div>\n        </div>\n\n        <h3 class=\"h5\">Attribute mappings</h3>\n        <p>\n          You must specify a mapping from your Identity Provider's attributes to PrairieLearn's user\n          attributes. This will vary from provider to provider, but they will typically have the\n          form\n          <code>urn:oid:...</code>.\n        </p>\n\n        ${!hasSamlProvider\n          ? html`<div class=\"alert alert-info\">\n              If you're not sure which attributes are available, you can leave these blank for now\n              and use the \"Test SAML login\" link after setting up your Identity Provider.\n            </div>`\n          : ''}\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"name_attribute\">Name attribute</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"name_attribute\"\n            id=\"name_attribute\"\n            value=\"${samlProvider?.name_attribute ?? ''}\"\n            aria-describedby=\"nameAttributeHelp\"\n          />\n          <small id=\"nameAttributeHelp\" class=\"form-text text-muted\">\n            This attribute should contain the full name of the user, like \"Jasmine Wang\".\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"uid_attribute\">UID attribute</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"uid_attribute\"\n            id=\"uid_attribute\"\n            value=\"${samlProvider?.uid_attribute ?? ''}\"\n            aria-describedby=\"uidAttributeHelp\"\n          />\n          <small id=\"uidAttributeHelp\" class=\"form-text text-muted\">\n            The UID is a user-facing identifier for the user. This must be an email-like identifier,\n            like \"jwang@example.com\". However, it doesn't have to be an email address; PrairieLearn\n            will never try to route email to it. This attribute may change, for instance if a\n            student changes their name with their university.\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"uin_attribute\">UIN attribute</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"uin_attribute\"\n            id=\"uin_attribute\"\n            value=\"${samlProvider?.uin_attribute ?? ''}\"\n            aria-describedby=\"uinAttributeHelp\"\n          />\n          <small id=\"uinAttributeHelp\" class=\"form-text text-muted\">\n            The UIN is used as an internal, immutable identifier for the user. It\n            <strong>MUST</strong> never change for a given individual, even if they change their\n            name or email.\n          </small>\n        </div>\n\n        <div class=\"mb-3\">\n          <label class=\"form-label\" for=\"email_attribute\">Email attribute</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            name=\"email_attribute\"\n            id=\"email_attribute\"\n            value=\"${samlProvider?.email_attribute ?? ''}\"\n            aria-describedby=\"emailAttributeHelp\"\n          />\n          <small id=\"emailAttributeHelp\" class=\"form-text text-muted\">\n            The email attribute should contain the email address of the user, like\n            \"jwang123@example.com\". This may be the same as the UID attribute for some institutions.\n            You should confirm that the values received in this attribute are routable email\n            addresses.\n          </small>\n        </div>\n\n        <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n        <button type=\"submit\" class=\"btn btn-primary\" name=\"__action\" value=\"save\">Save</button>\n        <a class=\"btn btn-secondary\" href=\"\">Cancel</a>\n      </form>\n      <div class=\"js-configure-prompt\" ${hasSamlProvider ? 'hidden' : ''}>\n        <p>A SAML identity provider has not been configured.</p>\n        <button type=\"button\" class=\"btn btn-primary js-configure-prompt-button\">\n          Configure SAML identity provider\n        </button>\n      </div>\n      ${hasSamlProvider\n        ? html`\n            <p>\n              <a href=\"${testSamlUrl}\" target=\"_blank\">Test SAML login</a>: Shows all attributes\n              from the SAML IdP without establishing a session.\n            </p>\n\n            <p>\n              <a href=\"${testSamlStrictUrl}\" target=\"_blank\">Test SAML login (strict mode)</a>:\n              Forces \"validate audience\", \"require signed assertions\", and \"require signed response\"\n              to be enabled.\n            </p>\n\n            <p>\n              <a href=\"${metadataUrl}\" target=\"_blank\">View SAML metadata</a>: Metadata can be\n              provided to institutions to help them configure their SAML IdP.\n            </p>\n\n            <p>\n              <button\n                class=\"btn btn-danger\"\n                type=\"button\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteModal\"\n              >\n                Delete SAML configuration\n              </button>\n            </p>\n\n            <h2 class=\"h4\">Decode SAML assertion</h2>\n\n            <form method=\"POST\">\n              <div class=\"mb-3\">\n                <label class=\"form-label\" for=\"encodedAssertion\">Encoded assertion</label>\n                <textarea\n                  class=\"form-control\"\n                  id=\"encodedAssertion\"\n                  rows=\"10\"\n                  name=\"encoded_assertion\"\n                  aria-describedby=\"encodedAssertionHelp\"\n                ></textarea>\n                <small class=\"form-text text-muted\">\n                  This should be raw base64-encoded data from the\n                  <code>SAMLResponse</code> parameter in the POST request from the IdP.\n                </small>\n              </div>\n\n              <div class=\"mb-3 form-check\">\n                <input\n                  type=\"checkbox\"\n                  class=\"form-check-input\"\n                  id=\"strictMode\"\n                  name=\"strict_mode\"\n                  value=\"1\"\n                  aria-describedby=\"strictModeHelp\"\n                />\n                <label class=\"form-check-label\" for=\"strictMode\">Strict mode</label>\n                <small id=\"strictModeHelp\" class=\"form-text text-muted mt-0\">\n                  Forces \"validate audience\", \"require signed assertions\", and \"require signed\n                  response\" to be enabled.\n                </small>\n              </div>\n\n              <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n              <button\n                class=\"btn btn-primary\"\n                type=\"button\"\n                name=\"__action\"\n                value=\"decode_assertion\"\n                hx-post=\"${resLocals.urlPrefix}/saml\"\n                hx-target=\"#decodedAssertion\"\n                hx-swap=\"innerHTML show:top\"\n              >\n                Decode\n              </button>\n              <div id=\"decodedAssertion\"></div>\n            </form>\n          `\n        : ''}\n    `,\n    postContent: html`\n      <script>\n        (function () {\n          // Show the configuration form when the button is clicked.\n          document\n            .querySelector('.js-configure-prompt-button')\n            .addEventListener('click', function () {\n              document.querySelector('.js-configure-prompt').hidden = true;\n              document.querySelector('.js-configure-form').hidden = false;\n            });\n        })();\n      </script>\n    `,\n  });\n}\n\nfunction DeleteSamlConfigurationModal({ csrfToken }: { csrfToken: string }) {\n  return Modal({\n    id: 'deleteModal',\n    title: 'Confirm deletion',\n    body: html`\n      <p>\n        Are you sure you want to delete the SAML configuration? Users in your institution, including\n        yourself, may be unable to log in to PrairieLearn.\n      </p>\n    `,\n    footer: html`\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n      <button class=\"btn btn-danger\" type=\"submit\" name=\"__action\" value=\"delete\">\n        Delete SAML configuration\n      </button>\n    `,\n  });\n}\n\nexport function DecodedAssertion({ xml, profile }: { xml: string; profile: string }) {\n  return html`\n    <h3 class=\"h5 mt-3\">Decoded XML</h2>\n    <pre class=\"bg-dark text-white rounded p-3 mt-3 mb-0\">${xml}</pre>\n\n    <h3 class=\"h5 mt-3\">Profile</h2>\n    <pre class=\"bg-dark text-white rounded p-3 mt-3 mb-0\">${profile}</pre>\n  `.toString();\n}\n"]}