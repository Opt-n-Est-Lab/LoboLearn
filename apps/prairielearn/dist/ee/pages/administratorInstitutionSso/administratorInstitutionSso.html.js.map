{"version":3,"file":"administratorInstitutionSso.html.js","sourceRoot":"","sources":["../../../../src/ee/pages/administratorInstitutionSso/administratorInstitutionSso.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AACpE,OAAO,EAA2D,MAAM,0BAA0B,CAAC;AAEnG,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,EAC1C,WAAW,EACX,gCAAgC,EAChC,uBAAuB,EACvB,kCAAkC,EAClC,SAAS,GAOV,EAAE,EAAE;IACH,MAAM,eAAe,GAAG,CAAC,CAAC,uBAAuB,CAAC;IAElD,+EAA+E;IAC/E,OAAO,UAAU,CAAC;QAChB,SAAS,EAAE,EAAE,GAAG,SAAS,EAAE,WAAW,EAAE;QACxC,SAAS,EAAE,yBAAyB;QACpC,UAAU,EAAE;YACV,IAAI,EAAE,2BAA2B;YACjC,IAAI,EAAE,2BAA2B;YACjC,OAAO,EAAE,KAAK;SACf;QACD,OAAO,EAAE,IAAI,CAAA;;;;YAIL,gCAAgC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClD,MAAM,SAAS,GAAG,kCAAkC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,CAAC;YACvF,OAAO,IAAI,CAAA;;;;;2BAKI,QAAQ,CAAC,EAAE;iCACL,QAAQ,CAAC,EAAE;;sCAEN,QAAQ,CAAC,EAAE;oBAC7B,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;oBAC1B,QAAQ,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;gEAElB,QAAQ,CAAC,EAAE;oBACvD,QAAQ,CAAC,IAAI;oBACb,QAAQ,CAAC,IAAI,KAAK,MAAM,IAAI,CAAC,eAAe;gBAC5C,CAAC,CAAC,IAAI,CAAA;;;qCAGW,SAAS,CAAC,SAAS;;;uBAGjC;gBACH,CAAC,CAAC,EAAE;;;aAGX,CAAC;QACJ,CAAC,CAAC;;;;;;;;;;;;;;;+BAemB,WAAW,CAAC,yBAAyB,KAAK,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;;cAGjF,gCAAgC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YAClD,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK;gBAAE,OAAO,EAAE,CAAC;YAEvC,MAAM,SAAS,GAAG,kCAAkC,CAAC,IAAI,CACvD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAC5B,CAAC;YAEF,OAAO,IAAI,CAAA;;2BAEE,QAAQ,CAAC,EAAE;oBAClB,QAAQ,CAAC,EAAE,KAAK,WAAW,CAAC,yBAAyB,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;oBACvE,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;oBAE5B,QAAQ,CAAC,IAAI;;eAElB,CAAC;QACJ,CAAC,CAAC;;;0DAG4C,SAAS,CAAC,YAAY;;;KAG3E;QACD,WAAW,EAAE,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;KAsBhB;KACF,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport { PageLayout } from '../../../components/PageLayout.html.js';\nimport { type AuthnProvider, type Institution, type SamlProvider } from '../../../lib/db-types.js';\n\nexport const AdministratorInstitutionSso = ({\n  institution,\n  supportedAuthenticationProviders,\n  institutionSamlProvider,\n  institutionAuthenticationProviders,\n  resLocals,\n}: {\n  institution: Institution;\n  supportedAuthenticationProviders: AuthnProvider[];\n  institutionSamlProvider: SamlProvider | null;\n  institutionAuthenticationProviders: AuthnProvider[];\n  resLocals: Record<string, any>;\n}) => {\n  const hasSamlProvider = !!institutionSamlProvider;\n\n  // TODO: only show authentication providers that were enabled in `config.json`.\n  return PageLayout({\n    resLocals: { ...resLocals, institution },\n    pageTitle: 'SSO - Institution Admin',\n    navContext: {\n      type: 'administrator_institution',\n      page: 'administrator_institution',\n      subPage: 'sso',\n    },\n    content: html`\n      <form method=\"POST\">\n        <div class=\"mb-3\">\n          <h2 class=\"h4\">Enabled single sign-on providers</h2>\n          ${supportedAuthenticationProviders.map((provider) => {\n            const isEnabled = institutionAuthenticationProviders.some((p) => p.id === provider.id);\n            return html`\n              <div class=\"form-check\">\n                <input\n                  class=\"form-check-input js-authentication-provider\"\n                  type=\"checkbox\"\n                  value=\"${provider.id}\"\n                  id=\"provider-${provider.id}-enabled\"\n                  name=\"enabled_authn_provider_ids\"\n                  data-provider-id=\"${provider.id}\"\n                  ${isEnabled ? 'checked' : ''}\n                  ${provider.name === 'SAML' && !hasSamlProvider ? 'disabled' : ''}\n                />\n                <label class=\"form-check-label\" for=\"provider-${provider.id}-enabled\">\n                  ${provider.name}\n                  ${provider.name === 'SAML' && !hasSamlProvider\n                    ? html`\n                        <small class=\" d-block text-muted\">\n                          You must\n                          <a href=\"${resLocals.urlPrefix}/saml\">configure SAML</a> before you can\n                          enable it.\n                        </small>\n                      `\n                    : ''}\n                </label>\n              </div>\n            `;\n          })}\n        </div>\n        <div class=\"mb-3\">\n          <h2 class=\"h4 mb-0\" id=\"defaultProviderLabel\">Default single sign-on provider</h2>\n          <small class=\"form-text text-muted mt-0 mb-2\">\n            When a default single sign-on provider is configured, users can click on your\n            institution's name on the login screen and be taken directly to the appropriate\n            provider. Note that LTI cannot be set as the default provider.\n          </small>\n          <select\n            class=\"form-select js-default-authentication-provider\"\n            id=\"defaultProvider\"\n            name=\"default_authn_provider_id\"\n            aria-labelledby=\"defaultProviderLabel\"\n          >\n            <option value=\"\" ${institution.default_authn_provider_id === null ? 'selected' : ''}>\n              None\n            </option>\n            ${supportedAuthenticationProviders.map((provider) => {\n              if (provider.name === 'LTI') return '';\n\n              const isEnabled = institutionAuthenticationProviders.some(\n                (p) => p.id === provider.id,\n              );\n\n              return html`\n                <option\n                  value=\"${provider.id}\"\n                  ${provider.id === institution.default_authn_provider_id ? 'selected' : ''}\n                  ${!isEnabled ? 'disabled' : ''}\n                >\n                  ${provider.name}\n                </option>\n              `;\n            })}\n          </select>\n        </div>\n        <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n        <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n      </form>\n    `,\n    postContent: html`\n      <script>\n        $(function () {\n          // Keep default authentication provider selection in sync with checkboxes:\n          // - If the default authentication provider is disabled, reset the default to \"None\".\n          // - When a provider is enabled, add it to the list of options.\n          // - When a provider is disabled, remove it from the list of options.\n          $('.js-authentication-provider').on('change', function (e) {\n            var providerId = $(this).attr('data-provider-id');\n            var currentDefaultProvider = $('#defaultProvider').val();\n\n            if (currentDefaultProvider === providerId && !e.target.checked) {\n              // Reset default provider to \"None\" if it's being disabled.\n              $('#defaultProvider').val('');\n            }\n\n            // Sync disabled state of default provider option.\n            var defaultProviderOption = $('#defaultProvider option[value=\"' + providerId + '\"]');\n            defaultProviderOption.prop('disabled', !e.target.checked);\n          });\n        });\n      </script>\n    `,\n  });\n};\n"]}