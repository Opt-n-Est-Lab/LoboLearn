{"version":3,"file":"instructorAiGenerateDraftEditor.js","sourceRoot":"","sources":["../../../../src/ee/pages/instructorAiGenerateDraftEditor/instructorAiGenerateDraftEditor.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport OpenAI from 'openai';\n\nimport * as error from '@prairielearn/error';\nimport { flash } from '@prairielearn/flash';\nimport { loadSqlEquiv, queryAsync, queryRow, queryRows } from '@prairielearn/postgres';\n\nimport * as b64Util from '../../../lib/base64-util.js';\nimport { config } from '../../../lib/config.js';\nimport { setQuestionCopyTargets } from '../../../lib/copy-question.js';\nimport { getCourseFilesClient } from '../../../lib/course-files-api.js';\nimport {\n  AiQuestionGenerationPromptSchema,\n  type Course,\n  IdSchema,\n  type Question,\n  type User,\n} from '../../../lib/db-types.js';\nimport { features } from '../../../lib/features/index.js';\nimport { idsEqual } from '../../../lib/id.js';\nimport { getAndRenderVariant, setRendererHeader } from '../../../lib/question-render.js';\nimport { processSubmission } from '../../../lib/question-submission.js';\nimport { HttpRedirect } from '../../../lib/redirect.js';\nimport { logPageView } from '../../../middlewares/logPageView.js';\nimport { selectQuestionById } from '../../../models/question.js';\nimport { regenerateQuestion } from '../../lib/aiQuestionGeneration.js';\nimport { GenerationFailure } from '../instructorAiGenerateDrafts/instructorAiGenerateDrafts.html.js';\n\nimport { InstructorAiGenerateDraftEditor } from './instructorAiGenerateDraftEditor.html.js';\n\nconst router = express.Router({ mergeParams: true });\nconst sql = loadSqlEquiv(import.meta.url);\n\nasync function saveGeneratedQuestion(\n  res: express.Response,\n  htmlFileContents: string | undefined,\n  pythonFileContents: string | undefined,\n  title?: string,\n  qid?: string,\n): Promise<string> {\n  const files = {};\n\n  if (htmlFileContents) {\n    files['question.html'] = htmlFileContents;\n  }\n\n  if (pythonFileContents) {\n    files['server.py'] = pythonFileContents;\n  }\n\n  const client = getCourseFilesClient();\n\n  const result = await client.createQuestion.mutate({\n    course_id: res.locals.course.id,\n    user_id: res.locals.user.user_id,\n    authn_user_id: res.locals.authn_user.user_id,\n    has_course_permission_edit: res.locals.authz_data.has_course_permission_edit,\n    qid,\n    title,\n    files,\n  });\n\n  if (result.status === 'error') {\n    throw new HttpRedirect(res.locals.urlPrefix + '/edit_error/' + result.job_sequence_id);\n  }\n\n  return result.question_id;\n}\n\nasync function saveRevisedQuestion({\n  course,\n  question,\n  user,\n  authn_user,\n  authz_data,\n  urlPrefix,\n  html,\n  python,\n  prompt,\n  promptType,\n}: {\n  course: Course;\n  question: Question;\n  user: User;\n  authn_user: User;\n  authz_data: {\n    has_course_permission_edit: boolean;\n  };\n  urlPrefix: string;\n  html: string;\n  python?: string;\n  prompt: string;\n  promptType: 'manual_change' | 'manual_revert';\n}) {\n  const client = getCourseFilesClient();\n\n  const files: Record<string, string | null> = {\n    'question.html': b64Util.b64EncodeUnicode(html),\n  };\n\n  // We'll delete the `server.py` file if the Python code is empty. Setting\n  // it to `null` instructs the editor to delete the file.\n  const trimmedPython = python?.trim() ?? '';\n  if (trimmedPython !== '') {\n    files['server.py'] = b64Util.b64EncodeUnicode(trimmedPython);\n  } else {\n    files['server.py'] = null;\n  }\n\n  const result = await client.updateQuestionFiles.mutate({\n    course_id: course.id,\n    user_id: user.user_id,\n    authn_user_id: authn_user.user_id,\n    question_id: question.id,\n    has_course_permission_edit: authz_data.has_course_permission_edit,\n    files,\n  });\n\n  if (result.status === 'error') {\n    throw new HttpRedirect(urlPrefix + '/edit_error/' + result.job_sequence_id);\n  }\n\n  const response = `\\`\\`\\`html\\n${html}\\`\\`\\`\\n\\`\\`\\`python\\n${python}\\`\\`\\``;\n\n  await queryAsync(sql.insert_ai_question_generation_prompt, {\n    question_id: question.id,\n    prompting_user_id: authn_user.user_id,\n    prompt_type: promptType,\n    user_prompt: prompt,\n    system_prompt: prompt,\n    response,\n    html,\n    python,\n  });\n}\n\nfunction assertCanCreateQuestion(resLocals: Record<string, any>) {\n  // Do not allow users to edit without permission\n  if (!resLocals.authz_data.has_course_permission_edit) {\n    throw new error.HttpStatusError(403, 'Access denied (must be course editor)');\n  }\n\n  // Do not allow users to edit the exampleCourse\n  if (resLocals.course.example_course) {\n    throw new error.HttpStatusError(403, 'Access denied (cannot edit the example course)');\n  }\n}\n\nrouter.use(\n  asyncHandler(async (req, res, next) => {\n    if (!(await features.enabledFromLocals('ai-question-generation', res.locals))) {\n      throw new error.HttpStatusError(403, 'Feature not enabled');\n    }\n    next();\n  }),\n);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    res.locals.question = await selectQuestionById(req.params.question_id);\n\n    // Ensure the question belongs to this course and that it's a draft question.\n    if (\n      !idsEqual(res.locals.question.course_id, res.locals.course.id) ||\n      !res.locals.question.draft\n    ) {\n      throw new error.HttpStatusError(404, 'Draft question not found');\n    }\n\n    assertCanCreateQuestion(res.locals);\n\n    const prompts = await queryRows(\n      sql.select_ai_question_generation_prompts,\n      {\n        question_id: req.params.question_id,\n        course_id: res.locals.course.id,\n      },\n      AiQuestionGenerationPromptSchema,\n    );\n\n    if (prompts.length === 0) {\n      // This is probably a draft question that was created on a different server\n      // and thus doesn't have any prompt history. We currently rely on the prompt\n      // history to know which HTML and Python to display and adjust, so we can't\n      // render this page.\n      //\n      // TODO: We should pull the HTML and Python off disk instead of relying on\n      // the prompt history.\n      throw new error.HttpStatusError(404, 'No prompt history found');\n    }\n\n    const variant_id = req.query.variant_id ? IdSchema.parse(req.query.variant_id) : null;\n\n    // Render the preview.\n    await getAndRenderVariant(variant_id, null, res.locals as any, {\n      urlOverrides: {\n        // By default, this would be the URL to the instructor question preview page.\n        // We need to redirect to this same page instead.\n        newVariantUrl: `${res.locals.urlPrefix}/ai_generate_editor/${req.params.question_id}`,\n      },\n    });\n    await setQuestionCopyTargets(res);\n    await logPageView('instructorQuestionPreview', req, res);\n    setRendererHeader(res);\n\n    res.send(\n      InstructorAiGenerateDraftEditor({\n        resLocals: res.locals,\n        prompts,\n        question: res.locals.question,\n        variantId: typeof req.query?.variant_id === 'string' ? req.query?.variant_id : undefined,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (!config.openAiApiKey || !config.openAiOrganization) {\n      throw new error.HttpStatusError(403, 'Not implemented (feature not available)');\n    }\n\n    const question = await selectQuestionById(req.params.question_id);\n\n    // Ensure the question belongs to this course and that it's a draft question.\n    if (!idsEqual(question.course_id, res.locals.course.id) || !question.draft || !question.qid) {\n      throw new error.HttpStatusError(404, 'Draft question not found');\n    }\n\n    assertCanCreateQuestion(res.locals);\n\n    const client = new OpenAI({\n      apiKey: config.openAiApiKey,\n      organization: config.openAiOrganization,\n    });\n\n    if (req.body.__action === 'regenerate_question') {\n      const prompts = await queryRows(\n        sql.select_ai_question_generation_prompts,\n        {\n          question_id: req.params.question_id,\n          course_id: res.locals.course.id,\n        },\n        AiQuestionGenerationPromptSchema,\n      );\n\n      if (prompts.length < 1) {\n        throw new error.HttpStatusError(403, 'Prompt history not found.');\n      }\n\n      const result = await regenerateQuestion(\n        client,\n        res.locals.course.id,\n        res.locals.authn_user.user_id,\n        prompts[0]?.user_prompt,\n        req.body.prompt,\n        prompts[prompts.length - 1].html || '',\n        prompts[prompts.length - 1].python || '',\n        question.qid,\n        res.locals.authn_user.user_id,\n        res.locals.authz_data.has_course_permission_edit,\n      );\n\n      if (result.htmlResult) {\n        res.set({\n          'HX-Redirect': `${res.locals.urlPrefix}/ai_generate_editor/${question.id}`,\n        });\n        res.send();\n      } else {\n        res.send(\n          GenerationFailure({\n            urlPrefix: res.locals.urlPrefix,\n            jobSequenceId: result.jobSequenceId,\n          }),\n        );\n      }\n    } else if (req.body.__action === 'save_question') {\n      const prompts = await queryRows(\n        sql.select_ai_question_generation_prompts,\n        {\n          question_id: question.id,\n          course_id: res.locals.course.id,\n        },\n        AiQuestionGenerationPromptSchema,\n      );\n\n      if (prompts.length === 0) {\n        throw new error.HttpStatusError(403, 'Prompt history not found.');\n      }\n\n      // TODO: any membership checks needed here?\n      const qid = await saveGeneratedQuestion(\n        res,\n        prompts[prompts.length - 1].html || undefined,\n        prompts[prompts.length - 1].python || undefined,\n        req.body.title,\n        req.body.qid,\n      );\n\n      const client = getCourseFilesClient();\n\n      const result = await client.batchDeleteQuestions.mutate({\n        course_id: res.locals.course.id,\n        user_id: res.locals.user.user_id,\n        authn_user_id: res.locals.authn_user.user_id,\n        has_course_permission_edit: res.locals.authz_data.has_course_permission_edit,\n        question_ids: [question.id],\n      });\n\n      if (result.status === 'error') {\n        throw new error.HttpStatusError(\n          500,\n          'Draft deletion failed, but question creation succeeded.',\n        );\n      }\n\n      flash('success', `Your question is ready for use as ${qid}.`);\n\n      res.redirect(res.locals.urlPrefix + '/question/' + qid + '/preview');\n    } else if (req.body.__action === 'submit_manual_revision') {\n      await saveRevisedQuestion({\n        course: res.locals.course,\n        question,\n        user: res.locals.user,\n        authn_user: res.locals.authn_user,\n        authz_data: res.locals.authz_data,\n        urlPrefix: res.locals.urlPrefix,\n        html: b64Util.b64DecodeUnicode(req.body.html),\n        python: b64Util.b64DecodeUnicode(req.body.python),\n        prompt: 'Manually update question.',\n        promptType: 'manual_change',\n      });\n\n      res.redirect(`${res.locals.urlPrefix}/ai_generate_editor/${req.params.question_id}`);\n    } else if (req.body.__action === 'revert_edit_version') {\n      const prompt = await queryRow(\n        sql.select_ai_question_generation_prompt_by_id_and_question,\n        { prompt_id: req.body.unsafe_prompt_id, question_id: req.params.question_id },\n        AiQuestionGenerationPromptSchema,\n      );\n\n      await saveRevisedQuestion({\n        course: res.locals.course,\n        question,\n        user: res.locals.user,\n        authn_user: res.locals.authn_user,\n        authz_data: res.locals.authz_data,\n        urlPrefix: res.locals.urlPrefix,\n        html: prompt.html ?? '',\n        python: prompt.python ?? undefined,\n        prompt: 'Manually revert question to earlier revision.',\n        promptType: 'manual_revert',\n      });\n\n      res.redirect(`${res.locals.urlPrefix}/ai_generate_editor/${req.params.question_id}`);\n    } else if (req.body.__action === 'grade' || req.body.__action === 'save') {\n      res.locals.question = question;\n      const variantId = await processSubmission(req, res);\n      res.redirect(\n        `${res.locals.urlPrefix}/ai_generate_editor/${req.params.question_id}?variant_id=${variantId}`,\n      );\n    } else {\n      throw new error.HttpStatusError(400, `Unknown action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}