{"version":3,"file":"instructorAiGenerateDrafts.html.js","sourceRoot":"","sources":["../../../../src/ee/pages/instructorAiGenerateDrafts/instructorAiGenerateDrafts.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { compiledScriptTag } from '@prairielearn/compiled-assets';\nimport { formatDate } from '@prairielearn/formatter';\nimport { html } from '@prairielearn/html';\n\nimport { Modal } from '../../../components/Modal.html.js';\nimport { PageLayout } from '../../../components/PageLayout.html.js';\nimport { DraftQuestionMetadataSchema, IdSchema } from '../../../lib/db-types.js';\n\n// We show all draft questions, even those without associated metadata, because we\n// won't have metadata for a draft question if it was created on and synced from\n// another instance of PrairieLearn, including from local dev.\nexport const DraftMetadataWithQidSchema = z.object({\n  draft_question_metadata: DraftQuestionMetadataSchema.nullable(),\n  question_id: IdSchema,\n  qid: z.string(),\n  uid: z.string().nullable(),\n});\nexport type DraftMetadataWithQid = z.infer<typeof DraftMetadataWithQidSchema>;\n\nconst examplePrompts = [\n  {\n    id: 'Select median of 5 random numbers',\n    prompt:\n      'Write a multiple choice question asking the user to choose the median of 5 random numbers between 1 and 100. Display all numbers to the user, and ask them to choose the median.',\n  },\n  {\n    id: 'Multiply random integers',\n    prompt:\n      'Write a question that asks the user to multiply two integers. You should randomly generate two integers A and B, display them to the user, and then ask the user to provide the product C = A * B.',\n  },\n  {\n    id: 'Answer to Ultimate Question',\n    prompt:\n      'Write a question asking \"What Is The Answer to the Ultimate Question of Life, the Universe, and Everything?\".',\n  },\n  {\n    id: 'Calculate Projectile Distance',\n    prompt:\n      'Write a question that asks the user to calculate how far a projectile will be launched. Display to the user an angle randomly generated between 30 and 60 degrees, and a velocity randomly generated between 10 and 20 m/s, and ask for the distance (in meters) that the object travels assuming no wind resistance.',\n  },\n];\n\nexport function InstructorAIGenerateDrafts({\n  resLocals,\n  drafts,\n}: {\n  resLocals: Record<string, any>;\n  drafts: DraftMetadataWithQid[];\n}) {\n  const hasDrafts = drafts.length > 0;\n\n  return PageLayout({\n    resLocals,\n    pageTitle: resLocals.pageTitle,\n    headContent: html`\n      ${compiledScriptTag('instructorAiGenerateDraftsClient.ts')}\n      <style>\n        .reveal-fade {\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          height: 6rem;\n          background: linear-gradient(to bottom, transparent, var(--bs-light));\n          pointer-events: none;\n        }\n      </style>\n    `,\n    options: {\n      hxExt: 'loading-states',\n    },\n    navContext: {\n      type: 'instructor',\n      page: 'course_admin',\n      subPage: 'questions',\n    },\n    content: html`\n      <div class=\"mb-3\">\n        <a href=\"${resLocals.urlPrefix}/course_admin/questions\" class=\"btn btn-sm btn-primary\">\n          <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n          Back to all questions\n        </a>\n      </div>\n      <div\n        id=\"add-question-card\"\n        class=\"card mb-5 mx-auto overflow-hidden\"\n        style=\"max-width: 700px\"\n      >\n        <div class=\"card-body position-relative\">\n          <h1 class=\"h3 text-center\">Generate a new question with AI</h1>\n          <form\n            id=\"add-question-form\"\n            name=\"add-question-form\"\n            hx-post=\"${resLocals.urlPrefix}/ai_generate_question_drafts\"\n            hx-target=\"#generation-results\"\n            hx-swap=\"outerHTML\"\n            hx-disabled-elt=\"button\"\n          >\n            <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n            <input type=\"hidden\" name=\"__action\" value=\"generate_question\" />\n\n            <div class=\"mb-3\">\n              <label class=\"form-label\" for=\"user-prompt-llm\">\n                Give a high-level overview of the question, including what parameters should be\n                generated and how students should provide their response.\n              </label>\n              <textarea\n                name=\"prompt\"\n                id=\"user-prompt-llm\"\n                class=\"form-control js-textarea-autosize\"\n                style=\"resize: none;\"\n              ></textarea>\n              <div class=\"form-text form-muted\">\n                <em>\n                  Example: A toy car is pushed off a table with height h at speed v0. Assume\n                  acceleration due to gravity as 9.81 m/s^2. H is a number with 1 decimal digit\n                  selected at random between 1 and 2 meters. V0 is a an integer between 1 and 4 m/s.\n                  How long does it take for the car to reach the ground?\n                </em>\n              </div>\n            </div>\n\n            ${\n              // We think this will mostly be useful in local dev or for\n              // global admins who will want to iterate rapidly and don't\n              // want to retype a whole prompt each time. For actual users,\n              // we think this will mostly be confusing if we show it.\n              resLocals.is_administrator\n                ? html`\n                    <hr />\n\n                    <div class=\"mb-3\">\n                      <label for=\"user-prompt-example\" class=\"form-label\">\n                        Or choose an example prompt:\n                      </label>\n                      <select id=\"user-prompt-example\" class=\"form-select\">\n                        <option value=\"\"></option>\n                        ${examplePrompts.map(\n                          (question) =>\n                            html`<option value=\"${question.id}\" data-prompt=\"${question.prompt}\">\n                              ${question.id}\n                            </option>`,\n                        )}\n                      </select>\n                    </div>\n                  `\n                : ''\n            }\n\n            <button type=\"submit\" class=\"btn btn-primary w-100\">\n              <span\n                class=\"spinner-grow spinner-grow-sm d-none me-1\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                data-loading-class-remove=\"d-none\"\n              >\n              </span>\n              Create question\n            </button>\n\n            <div class=\"text-muted small text-center mt-2\">\n              AI can make mistakes. Review the generated question.\n            </div>\n\n            <div id=\"generation-results\"></div>\n          </form>\n        </div>\n      </div>\n      ${hasDrafts\n        ? html`\n            <div class=\"d-flex flex-row align-items-center justify-content-between mb-2\">\n              <h1 class=\"h5 mb-0\">Continue working on a draft question</h1>\n              <button\n                class=\"btn btn-sm btn-outline-danger ms-2\"\n                data-bs-toggle=\"modal\"\n                data-bs-target=\"#deleteModal\"\n              >\n                <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                <span class=\"d-none d-sm-inline\">Delete all drafts</span>\n              </button>\n            </div>\n            <div class=\"card\">\n              <div class=\"table-responsive\">\n                <table class=\"table table-sm table-hover\" aria-label=\"AI question generation jobs\">\n                  <thead>\n                    <tr>\n                      <th>QID</th>\n                      <th>Created At</th>\n                      <th>Created By</th>\n                      <th>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    ${drafts.map(\n                      (row) => html`\n                        <tr>\n                          <td>${row.qid}</td>\n                          <td>\n                            ${row.draft_question_metadata?.created_at == null\n                              ? html`&mdash;`\n                              : formatDate(\n                                  row.draft_question_metadata.created_at,\n                                  resLocals.course.display_timezone,\n                                )}\n                          </td>\n                          <td>${row.uid ?? '(System)'}</td>\n                          <td>\n                            <a\n                              href=\"${resLocals.urlPrefix}/ai_generate_editor/${row.question_id}\"\n                              class=\"btn btn-xs btn-primary\"\n                            >\n                              Continue editing\n                            </a>\n                          </td>\n                        </tr>\n                      `,\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          `\n        : ''}\n      ${DeleteQuestionsModal({ csrfToken: resLocals.__csrf_token })}\n    `,\n  });\n}\n\nexport function GenerationFailure({\n  urlPrefix,\n  jobSequenceId,\n}: {\n  urlPrefix: string;\n  jobSequenceId: string;\n}): string {\n  return html`\n    <div id=\"generation-results\">\n      <h3>Generation Failed</h3>\n\n      <p>The LLM did not generate any question file.</p>\n      <a href=\"${urlPrefix + '/jobSequence/' + jobSequenceId}\">See job logs</a>\n    </div>\n  `.toString();\n}\n\nfunction DeleteQuestionsModal({ csrfToken }: { csrfToken: string }) {\n  return Modal({\n    id: 'deleteModal',\n    title: 'Delete all draft questions',\n    body: 'Are you sure you want to permanently delete all draft questions?',\n    footer: html`\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <button type=\"submit\" class=\"btn btn-danger\" name=\"__action\" value=\"delete_drafts\">\n        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n        Delete all drafts\n      </button>\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n    `,\n  });\n}\n"]}