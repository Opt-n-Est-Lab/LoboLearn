{"version":3,"file":"instructorAiGenerateDrafts.js","sourceRoot":"","sources":["../../../../src/ee/pages/instructorAiGenerateDrafts/instructorAiGenerateDrafts.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport OpenAI from 'openai';\n\nimport * as error from '@prairielearn/error';\nimport { loadSqlEquiv, queryRows } from '@prairielearn/postgres';\n\nimport { config } from '../../../lib/config.js';\nimport { getCourseFilesClient } from '../../../lib/course-files-api.js';\nimport { AiQuestionGenerationPromptSchema, IdSchema } from '../../../lib/db-types.js';\nimport { generateQuestion } from '../../lib/aiQuestionGeneration.js';\n\nimport {\n  DraftMetadataWithQidSchema,\n  GenerationFailure,\n  InstructorAIGenerateDrafts,\n} from './instructorAiGenerateDrafts.html.js';\n\nconst router = express.Router();\nconst sql = loadSqlEquiv(import.meta.url);\n\nfunction assertCanCreateQuestion(resLocals: Record<string, any>) {\n  // Do not allow users to edit without permission\n  if (!resLocals.authz_data.has_course_permission_edit) {\n    throw new error.HttpStatusError(403, 'Access denied (must be course editor)');\n  }\n\n  // Do not allow users to edit the exampleCourse\n  if (resLocals.course.example_course) {\n    throw new error.HttpStatusError(403, 'Access denied (cannot edit the example course)');\n  }\n}\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    assertCanCreateQuestion(res.locals);\n\n    const drafts = await queryRows(\n      sql.select_draft_generation_info_by_course_id,\n      { course_id: res.locals.course.id },\n      DraftMetadataWithQidSchema,\n    );\n\n    res.send(InstructorAIGenerateDrafts({ resLocals: res.locals, drafts }));\n  }),\n);\n\nrouter.get(\n  '/generation_logs.json',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_permission_edit) {\n      throw new error.HttpStatusError(403, 'Access denied (must be course editor)');\n    }\n    const file = await queryRows(\n      sql.select_ai_question_generation_prompts_by_course_id,\n      { course_id: res.locals.course.id },\n      AiQuestionGenerationPromptSchema,\n    );\n\n    res.json(file);\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    assertCanCreateQuestion(res.locals);\n\n    if (!config.openAiApiKey || !config.openAiOrganization) {\n      throw new error.HttpStatusError(403, 'Not implemented (feature not available)');\n    }\n\n    const client = new OpenAI({\n      apiKey: config.openAiApiKey,\n      organization: config.openAiOrganization,\n    });\n\n    if (req.body.__action === 'generate_question') {\n      const result = await generateQuestion({\n        client,\n        courseId: res.locals.course.id,\n        authnUserId: res.locals.authn_user.user_id,\n        prompt: req.body.prompt,\n        userId: res.locals.authn_user.user_id,\n        hasCoursePermissionEdit: res.locals.authz_data.has_course_permission_edit,\n      });\n\n      if (result.htmlResult) {\n        res.set({\n          'HX-Redirect': `${res.locals.urlPrefix}/ai_generate_editor/${result.questionId}`,\n        });\n        res.send();\n      } else {\n        res.send(\n          GenerationFailure({\n            urlPrefix: res.locals.urlPrefix,\n            jobSequenceId: result.jobSequenceId,\n          }),\n        );\n      }\n    } else if (req.body.__action === 'delete_drafts') {\n      const questions = await queryRows(\n        sql.select_draft_questions_by_course_id,\n        { course_id: res.locals.course.id.toString() },\n        IdSchema,\n      );\n\n      const client = getCourseFilesClient();\n\n      const result = await client.batchDeleteQuestions.mutate({\n        course_id: res.locals.course.id,\n        user_id: res.locals.user.user_id,\n        authn_user_id: res.locals.authn_user.user_id,\n        has_course_permission_edit: res.locals.authz_data.has_course_permission_edit,\n        question_ids: questions,\n      });\n\n      if (result.status === 'error') {\n        throw new error.HttpStatusError(500, 'Failed to delete all draft questions.');\n      }\n\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `Unknown action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}