{"version":3,"file":"instructorAiGradingRuns.js","sourceRoot":"","sources":["../../../../src/ee/pages/instructorAiGradingRuns/instructorAiGradingRuns.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\n\nimport { features } from '../../../lib/features/index.js';\nimport { aiGradeTest } from '../../lib/ai-grading/ai-grading-test.js';\nimport { aiGrade } from '../../lib/ai-grading.js';\n\nimport { InstructorAIGradingRuns } from './instructorAiGradingRuns.html.js';\n\nconst router = express.Router();\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_instance_permission_edit) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a student data editor)');\n    }\n    const ai_grading_enabled = await features.enabledFromLocals('ai-grading', res.locals);\n    if (!ai_grading_enabled) {\n      throw new error.HttpStatusError(403, 'Access denied (feature not available)');\n    }\n    res.send(InstructorAIGradingRuns({ resLocals: res.locals }));\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'ai_grade_assessment') {\n      const ai_grading_enabled = await features.enabledFromLocals('ai-grading', res.locals);\n      if (!ai_grading_enabled) {\n        throw new error.HttpStatusError(403, 'Access denied (feature not available)');\n      }\n      const jobSequenceId = await aiGrade({\n        question: res.locals.question,\n        course: res.locals.course,\n        course_instance_id: res.locals.course_instance.id,\n        assessment_question: res.locals.assessment_question,\n        urlPrefix: res.locals.urlPrefix,\n        authn_user_id: res.locals.authn_user.user_id,\n        user_id: res.locals.user.user_id,\n      });\n      res.redirect(res.locals.urlPrefix + '/jobSequence/' + jobSequenceId);\n    } else if (req.body.__action === 'ai_grade_assessment_test') {\n      const ai_grading_enabled = await features.enabledFromLocals('ai-grading', res.locals);\n      if (!ai_grading_enabled) {\n        throw new error.HttpStatusError(403, 'Access denied (feature not available)');\n      }\n      const jobSequenceId = await aiGradeTest({\n        question: res.locals.question,\n        course: res.locals.course,\n        course_instance_id: res.locals.course_instance.id,\n        assessment_question: res.locals.assessment_question,\n        urlPrefix: res.locals.urlPrefix,\n        authn_user_id: res.locals.authn_user.user_id,\n        user_id: res.locals.user.user_id,\n      });\n      res.redirect(res.locals.urlPrefix + '/jobSequence/' + jobSequenceId);\n    } else {\n      throw new error.HttpStatusError(400, `Unknown action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}