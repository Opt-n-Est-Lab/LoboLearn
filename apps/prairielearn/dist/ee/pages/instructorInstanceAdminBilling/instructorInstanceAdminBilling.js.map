{"version":3,"file":"instructorInstanceAdminBilling.js","sourceRoot":"","sources":["../../../../src/ee/pages/instructorInstanceAdminBilling/instructorInstanceAdminBilling.ts"],"names":[],"mappings":"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","sourcesContent":["import { type Response, Router } from 'express';\nimport asyncHandler from 'express-async-handler';\nimport { z } from 'zod';\n\nimport * as error from '@prairielearn/error';\nimport { loadSqlEquiv, queryRow } from '@prairielearn/postgres';\n\nimport { instructorInstanceAdminBillingState } from '../../lib/billing/components/InstructorInstanceAdminBillingForm.html.js';\nimport { type PlanName } from '../../lib/billing/plans-types.js';\nimport {\n  getPlanGrantsForContext,\n  getRequiredPlansForCourseInstance,\n  updateRequiredPlansForCourseInstance,\n} from '../../lib/billing/plans.js';\n\nimport {\n  type EnrollmentLimitSource,\n  InstructorCourseInstanceBilling,\n} from './instructorInstanceAdminBilling.html.js';\n\nconst router = Router({ mergeParams: true });\nconst sql = loadSqlEquiv(import.meta.url);\n\nasync function loadPageData(res: Response) {\n  const requiredPlans = await getRequiredPlansForCourseInstance(res.locals.course_instance.id);\n  const institutionPlanGrants = await getPlanGrantsForContext({\n    institution_id: res.locals.institution.id,\n  });\n  const courseInstancePlanGrants = await getPlanGrantsForContext({\n    institution_id: res.locals.institution.id,\n    course_instance_id: res.locals.course_instance.id,\n  });\n\n  const enrollmentCount = await queryRow(\n    sql.course_instance_enrollment_count,\n    { course_instance_id: res.locals.course_instance.id },\n    z.number(),\n  );\n  const enrollmentLimit =\n    res.locals.course_instance.enrollment_limit ??\n    res.locals.institution.course_instance_enrollment_limit;\n  const enrollmentLimitSource: EnrollmentLimitSource = res.locals.course_instance.enrollment_limit\n    ? 'course_instance'\n    : 'institution';\n\n  return {\n    requiredPlans,\n    institutionPlanGrants: institutionPlanGrants.map((planGrant) => planGrant.plan_name),\n    courseInstancePlanGrants: courseInstancePlanGrants.map((planGrant) => planGrant.plan_name),\n    enrollmentCount,\n    enrollmentLimit,\n    enrollmentLimitSource,\n  };\n}\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    // This page is behind a feature flag for now.\n    if (!res.locals.billing_enabled) {\n      throw new error.HttpStatusError(404, 'Not Found');\n    }\n\n    const {\n      requiredPlans,\n      institutionPlanGrants,\n      courseInstancePlanGrants,\n      enrollmentCount,\n      enrollmentLimit,\n      enrollmentLimitSource,\n    } = await loadPageData(res);\n\n    const { external_grading_question_count, workspace_question_count } = await queryRow(\n      sql.question_counts,\n      { course_id: res.locals.course.id },\n      z.object({\n        external_grading_question_count: z.number(),\n        workspace_question_count: z.number(),\n      }),\n    );\n\n    res.send(\n      InstructorCourseInstanceBilling({\n        requiredPlans,\n        institutionPlanGrants,\n        courseInstancePlanGrants,\n        enrollmentCount,\n        enrollmentLimit,\n        enrollmentLimitSource,\n        externalGradingQuestionCount: external_grading_question_count,\n        workspaceQuestionCount: workspace_question_count,\n        // Only course owners can manage billing.\n        editable: res.locals.authz_data.has_course_permission_own,\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    // This page is behind a feature flag for now.\n    if (!res.locals.billing_enabled) {\n      throw new error.HttpStatusError(404, 'Not Found');\n    }\n\n    // Only course owners can manage billing.\n    if (!res.locals.authz_data.has_course_permission_own) {\n      throw new error.HttpStatusError(403, 'Access denied (must be course owner)');\n    }\n\n    const pageData = await loadPageData(res);\n\n    const desiredRequiredPlans: PlanName[] = [];\n    if (req.body.student_billing_enabled === '1') desiredRequiredPlans.push('basic');\n    if (req.body.compute_enabled === '1') desiredRequiredPlans.push('compute');\n\n    const state = instructorInstanceAdminBillingState({\n      ...pageData,\n      // We already checked authorization above.\n      editable: true,\n      initialRequiredPlans: pageData.requiredPlans,\n      desiredRequiredPlans,\n    });\n\n    if (!state.studentBillingCanChange && state.studentBillingDidChange) {\n      const verb = desiredRequiredPlans.includes('basic') ? 'enabled' : 'disabled';\n      throw new error.HttpStatusError(400, `Student billing cannot be ${verb}.`);\n    }\n\n    if (!state.computeCanChange && state.computeDidChange) {\n      const verb = desiredRequiredPlans.includes('compute') ? 'enabled' : 'disabled';\n      throw new error.HttpStatusError(400, `Compute cannot be ${verb}.`);\n    }\n\n    await updateRequiredPlansForCourseInstance(\n      res.locals.course_instance.id,\n      desiredRequiredPlans,\n      res.locals.authn_user.user_id,\n    );\n    res.redirect(req.originalUrl);\n  }),\n);\n\nexport default router;\n"]}