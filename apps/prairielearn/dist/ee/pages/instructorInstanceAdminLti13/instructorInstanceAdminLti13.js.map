{"version":3,"file":"instructorInstanceAdminLti13.js","sourceRoot":"","sources":["../../../../src/ee/pages/instructorInstanceAdminLti13/instructorInstanceAdminLti13.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\nimport { z } from 'zod';\n\nimport * as error from '@prairielearn/error';\nimport { flash } from '@prairielearn/flash';\nimport {\n  loadSqlEquiv,\n  queryAsync,\n  queryRow,\n  queryRows,\n  runInTransactionAsync,\n} from '@prairielearn/postgres';\n\nimport {\n  AssessmentSchema,\n  Lti13AssessmentsSchema,\n  Lti13CourseInstanceSchema,\n} from '../../../lib/db-types.js';\nimport { createServerJob } from '../../../lib/server-jobs.js';\nimport { getCanonicalHost } from '../../../lib/url.js';\nimport { insertAuditLog } from '../../../models/audit-log.js';\nimport {\n  Lti13CombinedInstanceSchema,\n  createAndLinkLineitem,\n  getLineitems,\n  queryAndLinkLineitem,\n  syncLineitems,\n  unlinkAssessment,\n  updateLti13Scores,\n  validateLti13CourseInstance,\n} from '../../lib/lti13.js';\n\nimport {\n  AssessmentRowSchema,\n  InstructorInstanceAdminLti13,\n  LineitemsInputs,\n} from './instructorInstanceAdminLti13.html.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\nconst router = Router({ mergeParams: true });\n\nrouter.use(\n  asyncHandler(async (req, res, next) => {\n    if (!(await validateLti13CourseInstance(res.locals))) {\n      throw new error.HttpStatusError(403, 'LTI 1.3 is not available');\n    }\n    next();\n  }),\n);\n\nrouter.get(\n  '/:unsafe_lti13_course_instance_id?',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_instance_permission_edit) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a student data editor)');\n    }\n\n    const instances = await queryRows(\n      sql.select_lti13_instances,\n      {\n        course_instance_id: res.locals.course_instance.id,\n      },\n      Lti13CombinedInstanceSchema,\n    );\n\n    // Handle the no parameter offered case, take the first one\n    if (!req.params.unsafe_lti13_course_instance_id) {\n      const lti13_course_instance_id = instances[0].lti13_course_instance.id;\n\n      res.redirect(\n        `/pl/course_instance/${res.locals.course_instance.id}/instructor/instance_admin/lti13_instance/${lti13_course_instance_id}`,\n      );\n      return;\n    }\n\n    const instance = instances.find(\n      (i) => i.lti13_course_instance.id === req.params.unsafe_lti13_course_instance_id,\n    );\n\n    if (!instance) {\n      throw error.make(404, 'LTI 1.3 instance not found.');\n    }\n\n    if ('lineitems' in req.query) {\n      res.send(LineitemsInputs(await getLineitems(instance)));\n      return;\n    }\n\n    const assessments = await queryRows(\n      sql.select_assessments,\n      {\n        course_instance_id: res.locals.course_instance.id,\n        authz_data: res.locals.authz_data,\n        req_date: res.locals.req_date,\n        assessments_group_by: res.locals.course_instance.assessments_group_by,\n      },\n      AssessmentRowSchema,\n    );\n\n    const lineitems = await queryRows(\n      sql.select_lti13_assessments,\n      {\n        lti13_course_instance_id: instance.lti13_course_instance.id,\n      },\n      Lti13AssessmentsSchema,\n    );\n\n    res.send(\n      InstructorInstanceAdminLti13({\n        resLocals: res.locals,\n        instance,\n        instances,\n        assessments,\n        lineitems,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/:unsafe_lti13_course_instance_id',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_instance_permission_edit) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a student data editor)');\n    }\n\n    const instance = await queryRow(\n      sql.select_lti13_instance,\n      {\n        course_instance_id: res.locals.course_instance.id,\n        lti13_course_instance_id: req.params.unsafe_lti13_course_instance_id,\n      },\n      Lti13CombinedInstanceSchema,\n    );\n\n    const serverJobOptions = {\n      courseId: res.locals.course.id,\n      courseInstanceId: res.locals.course_instance.id,\n      userId: res.locals.user.user_id,\n      authnUserId: res.locals.authn_user.user_id,\n      type: 'lti13',\n      description: 'Some LTI operation',\n    };\n\n    if (req.body.__action === 'delete_lti13_course_instance') {\n      await runInTransactionAsync(async () => {\n        const deleted_lti13_course_instance = await queryRow(\n          sql.delete_lti13_course_instance,\n          {\n            course_instance_id: res.locals.course_instance.id,\n            lti13_course_instance_id: req.params.unsafe_lti13_course_instance_id,\n          },\n          Lti13CourseInstanceSchema,\n        );\n        await insertAuditLog({\n          authn_user_id: res.locals.authn_user.user_id,\n          table_name: 'lti13_course_instances',\n          action: 'delete',\n          institution_id: res.locals.institution.id,\n          course_id: res.locals.course.id,\n          course_instance_id: deleted_lti13_course_instance.course_instance_id,\n          row_id: deleted_lti13_course_instance.id,\n          old_state: deleted_lti13_course_instance,\n        });\n      });\n\n      // Redirect away so they don't get an error page\n      res.redirect(\n        `/pl/course_instance/${res.locals.course_instance.id}/instructor/instance_admin/assessments`,\n      );\n    } else if (req.body.__action === 'poll_lti13_assessments') {\n      serverJobOptions.description = 'Synchronize assignment metadata from LMS';\n      const serverJob = await createServerJob(serverJobOptions);\n\n      serverJob.executeInBackground(async (job) => {\n        await syncLineitems(instance, job);\n      });\n      return res.redirect(res.locals.urlPrefix + '/jobSequence/' + serverJob.jobSequenceId);\n    } else if (req.body.__action === 'unlink_assessment') {\n      await unlinkAssessment(instance.lti13_course_instance.id, req.body.unsafe_assessment_id);\n      return res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'create_link_assessment') {\n      serverJobOptions.description = 'create lineitem from PL assessment';\n      const serverJob = await createServerJob(serverJobOptions);\n\n      serverJob.executeInBackground(async (job) => {\n        const assessment = await queryRow(\n          sql.select_assessment_to_create,\n          {\n            unsafe_assessment_id: req.body.unsafe_assessment_id,\n            course_instance_id: instance.lti13_course_instance.course_instance_id,\n          },\n          AssessmentSchema.extend({\n            label: z.string(),\n          }),\n        );\n\n        const assessment_metadata = {\n          label: `${assessment.label}: ${assessment.title}`,\n          id: assessment.id,\n          url: `${getCanonicalHost(req)}/pl/course_instance/${assessment.course_instance_id}/assessment/${assessment.id}`,\n        };\n\n        await createAndLinkLineitem(instance, job, assessment_metadata);\n      });\n      return res.redirect(res.locals.urlPrefix + '/jobSequence/' + serverJob.jobSequenceId);\n    } else if (req.body.__action === 'link_assessment') {\n      await queryAndLinkLineitem(instance, req.body.lineitem_id, req.body.unsafe_assessment_id);\n      return res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'bulk_unlink_assessments') {\n      const group_id =\n        res.locals.course_instance.assessments_group_by === 'Set'\n          ? req.body.assessment_set_id || null\n          : req.body.assessment_module_id || null;\n\n      const lineitems = await queryRows(\n        sql.delete_lti13_assessments,\n        {\n          lti13_course_instance_id: instance.lti13_course_instance.id,\n          course_instance_id: instance.lti13_course_instance.course_instance_id,\n          group_id,\n          assessments_group_by: res.locals.course_instance.assessments_group_by,\n        },\n        Lti13AssessmentsSchema,\n      );\n\n      flash(\n        'success',\n        `${lineitems.length} assessment${lineitems.length === 1 ? '' : 's'} unlinked.`,\n      );\n      return res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'bulk_create_assessments') {\n      const group_id =\n        res.locals.course_instance.assessments_group_by === 'Set'\n          ? req.body.assessment_set_id || null\n          : req.body.assessment_module_id || null;\n\n      const assessments = await queryRows(\n        sql.select_assessments_to_create,\n        {\n          course_instance_id: instance.lti13_course_instance.course_instance_id,\n          group_id,\n          assessments_group_by: res.locals.course_instance.assessments_group_by,\n        },\n        AssessmentSchema.extend({\n          label: z.string(),\n        }),\n      );\n\n      if (assessments.length === 0) {\n        flash('warning', 'No unlinked assessments to create');\n        return res.redirect(req.originalUrl);\n      }\n\n      serverJobOptions.description = 'create lineitems from PL assessments';\n      const serverJob = await createServerJob(serverJobOptions);\n\n      serverJob.executeInBackground(async (job) => {\n        for (const assessment of assessments) {\n          const assessment_metadata = {\n            label: `${assessment.label}: ${assessment.title}`,\n            id: assessment.id,\n            url: `${getCanonicalHost(req)}/pl/course_instance/${assessment.course_instance_id}/assessment/${assessment.id}`,\n          };\n\n          await createAndLinkLineitem(instance, job, assessment_metadata);\n        }\n      });\n      return res.redirect(res.locals.urlPrefix + '/jobSequence/' + serverJob.jobSequenceId);\n    } else if (req.body.__action === 'send_grades') {\n      const assessment = await queryRow(\n        sql.select_assessment_in_course_instance,\n        {\n          unsafe_assessment_id: req.body.unsafe_assessment_id,\n          course_instance_id: res.locals.course_instance.id,\n        },\n        AssessmentSchema,\n      );\n      if (assessment === null) {\n        throw new error.HttpStatusError(403, 'Invalid assessment.id');\n      }\n\n      serverJobOptions.description = 'LTI 1.3 send assessment grades to LMS';\n      const serverJob = await createServerJob(serverJobOptions);\n\n      serverJob.executeInBackground(async (job) => {\n        await updateLti13Scores(assessment.id, instance, job);\n\n        await queryAsync(sql.update_lti13_assessment_last_activity, {\n          assessment_id: assessment.id,\n        });\n        job.info('Done.');\n      });\n      return res.redirect(res.locals.urlPrefix + '/jobSequence/' + serverJob.jobSequenceId);\n    } else {\n      throw error.make(400, `Unknown action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}