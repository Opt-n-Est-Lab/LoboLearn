{"version":3,"file":"lti13CourseNavigation.js","sourceRoot":"","sources":["../../../../src/ee/pages/lti13CourseNavigation/lti13CourseNavigation.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAuB,IAAI,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AACzE,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAEpF,OAAO,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,MAAM,0BAA0B,CAAC;AAC3F,OAAO,EAAE,oCAAoC,EAAE,MAAM,qCAAqC,CAAC;AAC3F,OAAO,EAAE,2BAA2B,EAAE,MAAM,2BAA2B,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAEhD,OAAO,EACL,yBAAyB,EACzB,+BAA+B,EAC/B,6BAA6B,GAC9B,MAAM,iCAAiC,CAAC;AAEzC,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAE7C,SAAS,gBAAgB,CAAC,QAAQ;IAChC,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IAEjC,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QACnC,OAAO,GAAG,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,KAAK,EAAE,CAAC;IAC9C,CAAC;SAAM,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QACzB,OAAO,OAAO,CAAC,KAAK,CAAC;IACvB,CAAC;SAAM,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;QACzB,OAAO,OAAO,CAAC,KAAK,CAAC;IACvB,CAAC;SAAM,CAAC;QACN,OAAO,aAAa,CAAC;IACvB,CAAC;AACH,CAAC;AAED,KAAK,UAAU,4BAA4B,CAAC,EAC1C,SAAS,EACT,OAAO,EACP,aAAa,EACb,gBAAgB,EAChB,sBAAsB,GAOvB;IACC,MAAM,gBAAgB,GAAG,MAAM,oCAAoC,CAAC;QAClE,SAAS;QACT,OAAO;QACP,aAAa;QACb,gBAAgB;QAChB,sBAAsB;KACvB,CAAC,CAAC;IAEH,OAAO,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,mCAAmC,CAAC,CAAC;AACjF,CAAC;AAED,KAAK,UAAU,oBAAoB,CAAC,EAClC,OAAO,EACP,gBAAgB,GAIjB;IACC,MAAM,OAAO,GAAG,MAAM,2BAA2B,CAAC;QAChD,OAAO;QACP,gBAAgB;KACjB,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,0BAA0B,CAAC,CAAC;AAChF,CAAC;AAED,MAAM,CAAC,GAAG,CACR,mBAAmB,EACnB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,OAAO,GAAG,MAAM,oBAAoB,CAAC;QACzC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;QACtC,gBAAgB,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;KAC9C,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;IACxE,IAAI,CAAC,MAAM,EAAE,CAAC;QACZ,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,gBAAgB,GAAG,MAAM,4BAA4B,CAAC;QAC1D,SAAS,EAAE,MAAM,CAAC,EAAE;QACpB,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;QACtC,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;QAC5C,gBAAgB,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;QAC7C,sBAAsB,EAAE,GAAG,CAAC,MAAM,CAAC,sBAAsB;KAC1D,CAAC,CAAC;IAEH,IAAI,OAAuB,CAAC;IAE5B,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAClC,OAAO,GAAG,IAAI,CAAA;;gBAEJ,CAAC;IACb,CAAC;SAAM,CAAC;QACN,OAAO,GAAG,QAAQ,CAChB,gBAAgB,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE;YAC1B,OAAO,IAAI,CAAA,kBAAkB,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,UAAU,KAAK,EAAE,CAAC,SAAS,WAAW,CAAC;QACnF,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,IAAI,MAAM,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC;QACxB,GAAG,CAAC,IAAI,CACN,yBAAyB,CAAC;YACxB,SAAS,EAAE,GAAG,CAAC,MAAM;YACrB,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB;SAChD,CAAC,CACH,CAAC;QACF,OAAO;IACT,CAAC;IAED,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IACrC,MAAM,UAAU,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IAC9C,MAAM,eAAe,GAAG,QAAQ,CAAC,gBAAgB,EAAE,CAAC;IAEpD,6CAA6C;IAC7C,MAAM,qBAAqB,GAAG,MAAM,gBAAgB,CAClD,GAAG,CAAC,4BAA4B,EAChC;QACE,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB;QAC/C,aAAa,EAAE,QAAQ,CAAC,aAAa;QACrC,UAAU,EAAE,QAAQ,CAAC,OAAO,EAAE,EAAE;KACjC,EACD,yBAAyB,CAC1B,CAAC;IAEF,IAAI,qBAAqB,EAAE,CAAC;QAC1B,mDAAmD;QACnD,4CAA4C;QAC5C,IAAI,eAAe,EAAE,CAAC;YACpB,MAAM,UAAU,CAAC,GAAG,CAAC,4BAA4B,EAAE;gBACjD,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB;gBAC/C,kBAAkB,EAAE,qBAAqB,CAAC,kBAAkB;gBAC5D,aAAa,EAAE,QAAQ,CAAC,aAAa;gBACrC,UAAU,EAAE,QAAQ,CAAC,OAAO,EAAE,EAAE;gBAChC,aAAa,EAAE,QAAQ,CAAC,OAAO,EAAE,KAAK;gBACtC,aAAa,EAAE,QAAQ,CAAC,OAAO,EAAE,KAAK;gBACtC,aAAa,EAAE,QAAQ,CAAC,SAAS;gBACjC,uBAAuB,EAAE,QAAQ,CAAC,uBAAuB;aAC1D,CAAC,CAAC;YAEH,yEAAyE;QAC3E,CAAC;QAED,0EAA0E;QAC1E,QAAQ,CAAC,MAAM,EAAE,CAAC;QAElB,qCAAqC;QACrC,GAAG,CAAC,QAAQ,CACV,uBAAuB,qBAAqB,CAAC,kBAAkB,IAC7D,eAAe,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EACpC,EAAE,CACH,CAAC;QACF,OAAO;IACT,CAAC;IAED,2CAA2C;IAC3C,IAAI,CAAC,eAAe,EAAE,CAAC;QACrB,GAAG,CAAC,IAAI,CACN,6BAA6B,CAAC;YAC5B,SAAS,EAAE,GAAG,CAAC,MAAM;YACrB,UAAU;YACV,QAAQ,EAAE,QAAQ,CAAC,KAAK;SACzB,CAAC,CACH,CAAC;QACF,OAAO;IACT,CAAC;IAED,uCAAuC;IACvC,GAAG,CAAC,IAAI,CACN,+BAA+B,CAAC;QAC9B,SAAS,EAAE,GAAG,CAAC,MAAM;QACrB,UAAU;QACV,OAAO,EAAE,MAAM,oBAAoB,CAAC;YAClC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;YACtC,gBAAgB,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;SAC9C,CAAC;QACF,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB;KAChD,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;IAErC,wFAAwF;IACxF,MAAM,eAAe,GAAG,MAAM,gBAAgB,CAC5C,GAAG,CAAC,wCAAwC,EAC5C;QACE,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,yBAAyB;QACtD,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB;QAC/C,uBAAuB,EAAE,GAAG,CAAC,OAAO,CAAC,uBAAuB;KAC7D,EACD,oBAAoB,CACrB,CAAC;IAEF,IAAI,eAAe,IAAI,IAAI,EAAE,CAAC;QAC5B,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IAClD,CAAC;IAED,MAAM,sBAAsB,GAAG,MAAM,4BAA4B,CAAC;QAChE,SAAS,EAAE,eAAe,CAAC,SAAS;QACpC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;QACtC,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;QAC5C,gBAAgB,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;QAC7C,sBAAsB,EAAE,GAAG,CAAC,MAAM,CAAC,sBAAsB;KAC1D,CAAC,CAAC;IACH,MAAM,wBAAwB,GAAG,sBAAsB,CAAC,IAAI,CAC1D,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,eAAe,CAAC,EAAE,CACrC,CAAC;IAEF,MAAM,cAAc,GAAG,MAAM,oBAAoB,CAAC;QAChD,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;QACtC,gBAAgB,EAAE,GAAG,CAAC,MAAM,CAAC,gBAAgB;KAC9C,CAAC,CAAC;IACH,MAAM,gBAAgB,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,eAAe,CAAC,SAAS,CAAC,CAAC;IAExF,IAAI,QAAQ,CAAC,gBAAgB,EAAE,IAAI,gBAAgB,IAAI,wBAAwB,EAAE,CAAC;QAChF,MAAM,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE;YAC/B,iBAAiB,EAAE,GAAG,CAAC,MAAM,CAAC,iBAAiB;YAC/C,aAAa,EAAE,QAAQ,CAAC,aAAa;YACrC,UAAU,EAAE,QAAQ,CAAC,OAAO,EAAE,EAAE;YAChC,aAAa,EAAE,QAAQ,CAAC,OAAO,EAAE,KAAK;YACtC,aAAa,EAAE,QAAQ,CAAC,OAAO,EAAE,KAAK;YACtC,kBAAkB,EAAE,eAAe,CAAC,EAAE;SACvC,CAAC,CAAC;QAEH,GAAG,CAAC,QAAQ,CAAC,sBAAsB,GAAG,CAAC,MAAM,CAAC,iBAAiB,yBAAyB,CAAC,CAAC;IAC5F,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;IAClD,CAAC;AACH,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport { type HtmlSafeString, html, joinHtml } from '@prairielearn/html';\nimport { loadSqlEquiv, queryAsync, queryOptionalRow } from '@prairielearn/postgres';\n\nimport { CourseInstanceSchema, Lti13CourseInstanceSchema } from '../../../lib/db-types.js';\nimport { selectCourseInstancesWithStaffAccess } from '../../../models/course-instances.js';\nimport { selectCoursesWithEditAccess } from '../../../models/course.js';\nimport { Lti13Claim } from '../../lib/lti13.js';\n\nimport {\n  Lti13CourseNavigationDone,\n  Lti13CourseNavigationInstructor,\n  Lti13CourseNavigationNotReady,\n} from './lti13CourseNavigation.html.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\nconst router = Router({ mergeParams: true });\n\nfunction prettyCourseName(ltiClaim) {\n  const context = ltiClaim.context;\n\n  if (context.label && context.title) {\n    return `${context.label}: ${context.title}`;\n  } else if (context.label) {\n    return context.label;\n  } else if (context.title) {\n    return context.title;\n  } else {\n    return 'your course';\n  }\n}\n\nasync function courseInstancesAllowedToLink({\n  course_id,\n  user_id,\n  authn_user_id,\n  is_administrator,\n  authn_is_administrator,\n}: {\n  course_id: string;\n  user_id: string;\n  authn_user_id: string;\n  is_administrator: boolean;\n  authn_is_administrator: boolean;\n}) {\n  const course_instances = await selectCourseInstancesWithStaffAccess({\n    course_id,\n    user_id,\n    authn_user_id,\n    is_administrator,\n    authn_is_administrator,\n  });\n\n  return course_instances.filter((ci) => ci.has_course_instance_permission_edit);\n}\n\nasync function coursesAllowedToLink({\n  user_id,\n  is_administrator,\n}: {\n  user_id: string;\n  is_administrator: boolean;\n}) {\n  const courses = await selectCoursesWithEditAccess({\n    user_id,\n    is_administrator,\n  });\n\n  return courses.filter((c) => c.permissions_course.has_course_permission_edit);\n}\n\nrouter.get(\n  '/course_instances',\n  asyncHandler(async (req, res) => {\n    const courses = await coursesAllowedToLink({\n      user_id: res.locals.authn_user.user_id,\n      is_administrator: res.locals.is_administrator,\n    });\n\n    const course = courses.find((c) => c.id === req.query.unsafe_course_id);\n    if (!course) {\n      throw new HttpStatusError(403, 'Access denied');\n    }\n\n    const course_instances = await courseInstancesAllowedToLink({\n      course_id: course.id,\n      user_id: res.locals.authn_user.user_id,\n      authn_user_id: res.locals.authn_user.user_id,\n      is_administrator: res.locals.is_administrator,\n      authn_is_administrator: res.locals.authn_is_administrator,\n    });\n\n    let options: HtmlSafeString;\n\n    if (course_instances.length === 0) {\n      options = html`<option disabled selected value=\"\">\n        No course instances found where you have student data editor permissions.\n      </option>`;\n    } else {\n      options = joinHtml(\n        course_instances.map((ci) => {\n          return html`<option value=\"${ci.id}\">${ci.short_name}: ${ci.long_name}</option>`;\n        }),\n      );\n    }\n\n    res.send(options.toString());\n  }),\n);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    if ('done' in req.query) {\n      res.send(\n        Lti13CourseNavigationDone({\n          resLocals: res.locals,\n          lti13_instance_id: req.params.lti13_instance_id,\n        }),\n      );\n      return;\n    }\n\n    const ltiClaim = new Lti13Claim(req);\n    const courseName = prettyCourseName(ltiClaim);\n    const role_instructor = ltiClaim.isRoleInstructor();\n\n    // Get lti13_course_instance info, if present\n    const lti13_course_instance = await queryOptionalRow(\n      sql.select_lti13_course_instance,\n      {\n        lti13_instance_id: req.params.lti13_instance_id,\n        deployment_id: ltiClaim.deployment_id,\n        context_id: ltiClaim.context?.id,\n      },\n      Lti13CourseInstanceSchema,\n    );\n\n    if (lti13_course_instance) {\n      // Update lti13_course_instance on instructor login\n      // helpful as LMS updates or we add features\n      if (role_instructor) {\n        await queryAsync(sql.update_lti13_course_instance, {\n          lti13_instance_id: req.params.lti13_instance_id,\n          course_instance_id: lti13_course_instance.course_instance_id,\n          deployment_id: ltiClaim.deployment_id,\n          context_id: ltiClaim.context?.id,\n          context_label: ltiClaim.context?.label,\n          context_title: ltiClaim.context?.title,\n          lineitems_url: ltiClaim.lineitems,\n          context_memberships_url: ltiClaim.context_memberships_url,\n        });\n\n        // TODO: Set course/instance staff permissions for LMS course staff here?\n      }\n\n      // LTI claims are not used after this page so remove them from the session\n      ltiClaim.remove();\n\n      // Redirect to linked course instance\n      res.redirect(\n        `/pl/course_instance/${lti13_course_instance.course_instance_id}/${\n          role_instructor ? 'instructor/' : ''\n        }`,\n      );\n      return;\n    }\n\n    // Students get a \"come back later\" message\n    if (!role_instructor) {\n      res.send(\n        Lti13CourseNavigationNotReady({\n          resLocals: res.locals,\n          courseName,\n          ltiRoles: ltiClaim.roles,\n        }),\n      );\n      return;\n    }\n\n    // Instructors get a prompt for linking\n    res.send(\n      Lti13CourseNavigationInstructor({\n        resLocals: res.locals,\n        courseName,\n        courses: await coursesAllowedToLink({\n          user_id: res.locals.authn_user.user_id,\n          is_administrator: res.locals.is_administrator,\n        }),\n        lti13_instance_id: req.params.lti13_instance_id,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    const ltiClaim = new Lti13Claim(req);\n\n    // Map passed and auth lti13_instance_id through institution to course instance, or fail\n    const course_instance = await queryOptionalRow(\n      sql.select_lti13_institution_course_instance,\n      {\n        course_instance_id: req.body.unsafe_course_instance_id,\n        lti13_instance_id: req.params.lti13_instance_id,\n        authn_lti13_instance_id: req.session.authn_lti13_instance_id,\n      },\n      CourseInstanceSchema,\n    );\n\n    if (course_instance == null) {\n      throw new HttpStatusError(403, 'Access denied');\n    }\n\n    const courseInstancesAllowed = await courseInstancesAllowedToLink({\n      course_id: course_instance.course_id,\n      user_id: res.locals.authn_user.user_id,\n      authn_user_id: res.locals.authn_user.user_id,\n      is_administrator: res.locals.is_administrator,\n      authn_is_administrator: res.locals.authn_is_administrator,\n    });\n    const hasCourseInstanceAllowed = courseInstancesAllowed.some(\n      (ci) => ci.id === course_instance.id,\n    );\n\n    const coursesAllowed = await coursesAllowedToLink({\n      user_id: res.locals.authn_user.user_id,\n      is_administrator: res.locals.is_administrator,\n    });\n    const hasCourseAllowed = coursesAllowed.some((c) => c.id === course_instance.course_id);\n\n    if (ltiClaim.isRoleInstructor() && hasCourseAllowed && hasCourseInstanceAllowed) {\n      await queryAsync(sql.insert_lci, {\n        lti13_instance_id: req.params.lti13_instance_id,\n        deployment_id: ltiClaim.deployment_id,\n        context_id: ltiClaim.context?.id,\n        context_label: ltiClaim.context?.label,\n        context_title: ltiClaim.context?.title,\n        course_instance_id: course_instance.id,\n      });\n\n      res.redirect(`/pl/lti13_instance/${req.params.lti13_instance_id}/course_navigation?done`);\n    } else {\n      throw new HttpStatusError(403, 'Access denied');\n    }\n  }),\n);\n\nexport default router;\n"]}