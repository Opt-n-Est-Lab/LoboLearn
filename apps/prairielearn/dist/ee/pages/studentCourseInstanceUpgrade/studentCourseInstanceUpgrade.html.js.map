{"version":3,"file":"studentCourseInstanceUpgrade.html.js","sourceRoot":"","sources":["../../../../src/ee/pages/studentCourseInstanceUpgrade/studentCourseInstanceUpgrade.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport { HeadContents } from '../../../components/HeadContents.html.js';\nimport { Navbar } from '../../../components/Navbar.html.js';\nimport { compiledScriptTag } from '../../../lib/assets.js';\nimport { type Course, type CourseInstance } from '../../../lib/db-types.js';\nimport { type PlanName } from '../../lib/billing/plans-types.js';\nimport { formatStripePrice } from '../../lib/billing/stripe.js';\n\nexport function StudentCourseInstanceUpgrade({\n  course,\n  course_instance,\n  missingPlans,\n  planPrices,\n  resLocals,\n}: {\n  course: Course;\n  course_instance: CourseInstance;\n  missingPlans: PlanName[];\n  /**\n   * `null` here will indicate that we aren't configured with Stripe credentials\n   * and thus that we can't show prices of the upgrade button\n   */\n  planPrices: Record<string, number> | null;\n  resLocals: Record<string, any>;\n}) {\n  return html`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        ${HeadContents({ resLocals })} ${compiledScriptTag('studentCourseInstanceUpgradeClient.ts')}\n      </head>\n      <body>\n        ${Navbar({ resLocals })}\n        <main id=\"content\" class=\"container mb-4\">\n          <h1>\n            <i class=\"fa-solid fa-lock\"></i>\n            Upgrade required\n          </h1>\n          <p>\n            <strong>${course.short_name}: ${course.title}, ${course_instance.long_name}</strong>\n            requires an upgrade to support certain features selected by your instructor.\n          </p>\n\n          ${planPrices == null\n            ? html`<p>Please contact your instructor for more information.</p>`\n            : html`\n                ${PriceTable({ planNames: missingPlans, planPrices })}\n\n                <form method=\"POST\">\n                  <div class=\"custom-control custom-checkbox mb-3\">\n                    <input\n                      type=\"checkbox\"\n                      class=\"custom-control-input\"\n                      id=\"js-terms-agreement\"\n                      name=\"terms_agreement\"\n                      value=\"1\"\n                    />\n                    <label class=\"custom-control-label\" for=\"js-terms-agreement\">\n                      I agree to the PrairieLearn\n                      <a href=\"https://www.prairielearn.com/legal/terms\">Terms of Service</a> and\n                      <a href=\"https://www.prairielearn.com/legal/privacy\">Privacy Policy</a>.\n                    </label>\n                  </div>\n\n                  <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n                  ${missingPlans.map(\n                    (plan) => html`\n                      <input type=\"hidden\" name=\"unsafe_plan_names\" value=\"${plan}\" />\n                    `,\n                  )}\n                  <button\n                    id=\"js-upgrade\"\n                    type=\"submit\"\n                    name=\"__action\"\n                    value=\"upgrade\"\n                    class=\"btn btn-primary d-block w-100\"\n                    disabled\n                  >\n                    Upgrade\n                  </button>\n                </form>\n              `}\n        </main>\n      </body>\n    </html>\n  `.toString();\n}\n\nexport function CourseInstanceStudentUpdateSuccess({\n  course,\n  course_instance,\n  paid,\n  resLocals,\n}: {\n  course: Course;\n  course_instance: CourseInstance;\n  paid: boolean;\n  resLocals: Record<string, any>;\n}) {\n  return html`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        ${HeadContents({ resLocals })}\n      </head>\n      <body>\n        ${Navbar({ resLocals })}\n        <main id=\"content\" class=\"container mb-4\">\n          <h1>Thanks!</h1>\n\n          ${paid\n            ? html`\n                <p>Your payment was successfully processed. You may now access the course.</p>\n\n                <a href=\"/pl/course_instance/${course_instance.id}\" class=\"btn btn-primary\">\n                  Continue to ${course.short_name}\n                </a>\n              `\n            : html`\n                <p>\n                  Once your payment has been fully processed, check back for access to the course.\n                </p>\n              `}\n        </main>\n      </body>\n    </html>\n  `.toString();\n}\n\nfunction getPlanDetails(planName: PlanName) {\n  switch (planName) {\n    case 'basic':\n      return {\n        name: 'Course access',\n        description: 'Provides access to this course.',\n      };\n    case 'compute':\n      return {\n        name: 'Compute',\n        description: 'Enables features like in-browser IDEs and code autograding.',\n      };\n    default:\n      throw new Error(`Unknown plan name: ${planName}`);\n  }\n}\n\nfunction BillingLineItem({ planName, planPrice }: { planName: PlanName; planPrice: number }) {\n  const { name, description } = getPlanDetails(planName);\n\n  const formattedPrice = formatStripePrice(planPrice);\n\n  return html`\n    <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n      <div class=\"d-flex flex-column\">\n        ${name}\n        <small class=\"text-muted text-small\">${description}</small>\n      </div>\n      <div>\n        <strong class=\"text-nowrap\">${formattedPrice} USD</strong>\n      </div>\n    </li>\n  `;\n}\n\nfunction PriceTable({\n  planNames,\n  planPrices,\n}: {\n  planNames: PlanName[];\n  planPrices: Record<string, number>;\n}) {\n  const totalPrice = planNames.reduce((total, planName) => total + planPrices[planName], 0);\n  const formattedTotalPrice = formatStripePrice(totalPrice);\n\n  return html`\n    <ul class=\"list-group mb-3\">\n      ${planNames.map((planName) => BillingLineItem({ planName, planPrice: planPrices[planName] }))}\n      <li class=\"list-group-item d-flex justify-content-between align-items-center bg-light\">\n        <strong>Total</strong>\n        <strong class=\"text-nowrap\">${formattedTotalPrice} USD</strong>\n      </li>\n    </ul>\n  `;\n}\n"]}