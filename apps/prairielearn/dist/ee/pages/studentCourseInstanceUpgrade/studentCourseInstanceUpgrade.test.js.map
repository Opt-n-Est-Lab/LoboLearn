{"version":3,"file":"studentCourseInstanceUpgrade.test.js","sourceRoot":"","sources":["../../../../src/ee/pages/studentCourseInstanceUpgrade/studentCourseInstanceUpgrade.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport fetch from 'node-fetch';\n\nimport { config } from '../../../lib/config.js';\nimport { ensureEnrollment } from '../../../models/enrollment.js';\nimport * as helperServer from '../../../tests/helperServer.js';\nimport {\n  type AuthUser,\n  getConfiguredUser,\n  getOrCreateUser,\n  withUser,\n} from '../../../tests/utils/auth.js';\nimport {\n  reconcilePlanGrantsForCourseInstance,\n  reconcilePlanGrantsForCourseInstanceUser,\n  updateRequiredPlansForCourseInstance,\n} from '../../lib/billing/plans.js';\nimport { enableEnterpriseEdition } from '../../tests/ee-helpers.js';\n\nconst siteUrl = `http://localhost:${config.serverPort}`;\nconst assessmentsUrl = `${siteUrl}/pl/course_instance/1/assessments`;\nconst upgradeUrl = `${siteUrl}/pl/course_instance/1/upgrade`;\nconst studentUser: AuthUser = {\n  uid: 'student@example.com',\n  name: 'Example Student',\n  uin: 'student',\n  email: 'student@example.com',\n};\n\ndescribe('studentCourseInstanceUpgrade', () => {\n  enableEnterpriseEdition();\n\n  beforeEach(helperServer.before());\n  afterEach(helperServer.after);\n\n  it('is not displayed if there are no required features', async () => {\n    await withUser(studentUser, async () => {\n      const res = await fetch(assessmentsUrl);\n      assert.isOk(res.ok);\n      assert.equal(res.url, assessmentsUrl);\n    });\n  });\n\n  it('is not displayed if there are no unsatisfied required plans', async () => {\n    await withUser(studentUser, async () => {\n      await updateRequiredPlansForCourseInstance('1', ['basic', 'compute'], '1');\n\n      // Grant `compute` to course instance.\n      await reconcilePlanGrantsForCourseInstance(\n        '1',\n        [{ plan: 'compute', grantType: 'invoice' }],\n        '1',\n      );\n\n      // Grant `basic` to student in course instance.\n      const user = await getConfiguredUser();\n      await reconcilePlanGrantsForCourseInstanceUser(\n        { institution_id: '1', course_instance_id: '1', user_id: user.user_id },\n        [{ plan: 'basic', grantType: 'stripe' }],\n        '1',\n      );\n\n      const res = await fetch(assessmentsUrl);\n      assert.isOk(res.ok);\n      assert.equal(res.url, assessmentsUrl);\n    });\n  });\n\n  it('is displayed if there are unsatisfied required plans', async () => {\n    await withUser(studentUser, async () => {\n      await updateRequiredPlansForCourseInstance('1', ['basic', 'compute'], '1');\n\n      const res = await fetch(assessmentsUrl);\n      assert.isOk(res.ok);\n      assert.equal(res.url, upgradeUrl);\n    });\n  });\n\n  it('respects user overrides without access overrides', async () => {\n    await updateRequiredPlansForCourseInstance('1', ['basic', 'compute'], '1');\n\n    const user = await getOrCreateUser(studentUser);\n    await ensureEnrollment({ user_id: user.user_id, course_instance_id: '1' });\n\n    const res = await fetch(assessmentsUrl, {\n      headers: {\n        cookie:\n          'pl2_requested_uid=student@example.com; pl2_requested_course_role=None; pl2_requested_course_instance_role=None',\n      },\n    });\n    assert.isOk(res.ok);\n    assert.equal(res.url, upgradeUrl);\n  });\n\n  it('respects user overrides with access overrides', async () => {\n    await updateRequiredPlansForCourseInstance('1', ['basic', 'compute'], '1');\n\n    const user = await getOrCreateUser(studentUser);\n    await ensureEnrollment({ user_id: user.user_id, course_instance_id: '1' });\n\n    const res = await fetch(assessmentsUrl, {\n      headers: {\n        cookie:\n          'pl2_requested_uid=student@example.com; pl2_requested_course_role=Owner; pl2_requested_course_instance_role=Student Data Editor',\n      },\n    });\n    assert.isOk(res.ok);\n    assert.equal(res.url, assessmentsUrl);\n  });\n});\n"]}