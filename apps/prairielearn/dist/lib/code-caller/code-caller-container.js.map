{"version":3,"file":"code-caller-container.js","sourceRoot":"","sources":["../../../src/lib/code-caller/code-caller-container.ts"],"names":[],"mappings":"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","sourcesContent":["import * as os from 'node:os';\nimport * as path from 'node:path';\n\nimport { ECRClient } from '@aws-sdk/client-ecr';\nimport debugfn from 'debug';\nimport Docker, { type Container } from 'dockerode';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport MemoryStream from 'memorystream';\nimport * as tmp from 'tmp-promise';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport * as bindMount from '@prairielearn/bind-mount';\nimport { setupDockerAuth } from '@prairielearn/docker-utils';\nimport { logger } from '@prairielearn/logger';\nimport { instrumented } from '@prairielearn/opentelemetry';\n\nimport { makeAwsClientConfig } from '../aws.js';\nimport { config } from '../config.js';\nimport { deferredPromise } from '../deferred.js';\n\nimport {\n  type CallType,\n  type CodeCaller,\n  type CodeCallerResult,\n  FunctionMissingError,\n  type PrepareForCourseOptions,\n} from './code-caller-shared.js';\n\nconst CREATED = Symbol('CREATED');\nconst WAITING = Symbol('WAITING');\nconst IN_CALL = Symbol('IN_CALL');\nconst EXITING = Symbol('EXITING');\nconst EXITED = Symbol('EXITED');\n\ntype CallerState =\n  | typeof CREATED\n  | typeof WAITING\n  | typeof IN_CALL\n  | typeof EXITING\n  | typeof EXITED;\n\ninterface CodeCallerContainerOptions {\n  questionTimeoutMilliseconds: number;\n  pingTimeoutMilliseconds: number;\n}\n\nconst MOUNT_DIRECTORY_PREFIX = 'prairielearn-worker-';\n\nconst debug = debugfn('prairielearn:code-caller-container');\nconst docker = new Docker();\n\nlet executorImageTag = 'latest';\nasync function updateExecutorImageTag() {\n  if (config.workerExecutorImageTag) {\n    // Give precedence to any value provided by config.\n    executorImageTag = config.workerExecutorImageTag;\n    return;\n  }\n\n  const env = process.env.NODE_ENV || 'development';\n  if (env === 'development') {\n    // In local dev mode, always use `latest` tag, as there isn't guaranteed\n    // to be a version tagged with the current commit hash.\n    executorImageTag = 'latest';\n    return;\n  }\n\n  executorImageTag = (await execa('git', ['rev-parse', 'HEAD'])).stdout.trim();\n}\n\nfunction getExecutorImageName(): string {\n  if (config.workerExecutorImageRepository) {\n    // Give precedence to any value provided by config. Note that we do not\n    // prepend `cacheImageRegistry` here - we assume that the user has included\n    // a registry in the repository name if they want to use a custom registry.\n    return `${config.workerExecutorImageRepository}:${executorImageTag}`;\n  }\n\n  const imageName = `prairielearn/executor:${executorImageTag}`;\n  const { cacheImageRegistry } = config;\n  if (cacheImageRegistry) {\n    return `${cacheImageRegistry}/${imageName}`;\n  }\n  return imageName;\n}\n\n/**\n * Ensures that the required Docker image is present on this machine.\n */\nasync function ensureImage() {\n  const imageName = getExecutorImageName();\n  const image = docker.getImage(imageName);\n  try {\n    logger.info(`Checking for executor image ${imageName}`);\n    await image.inspect();\n    logger.info(`Executor image ${imageName} found`);\n  } catch (e) {\n    if (e.statusCode === 404) {\n      logger.info('Image not found, pulling from registry');\n      const start = performance.now();\n      const ecr = new ECRClient(makeAwsClientConfig());\n      const dockerAuth = config.cacheImageRegistry ? await setupDockerAuth(ecr) : null;\n      const stream = await docker.createImage(dockerAuth, { fromImage: imageName });\n      await new Promise((resolve, reject) => {\n        docker.modem.followProgress(\n          stream,\n          (err) => {\n            const elapsed = Math.round((performance.now() - start) / 1000);\n            if (err) {\n              logger.error(`Error pulling image after ${elapsed} seconds`, err);\n              reject(err);\n            } else {\n              logger.info(`Executor image loaded successfully in ${elapsed} seconds`);\n              resolve(null);\n            }\n          },\n          (output) => {\n            logger.info('Docker output', output);\n          },\n        );\n      });\n    } else {\n      throw e;\n    }\n  }\n}\n\nexport class CodeCallerContainer implements CodeCaller {\n  state: CallerState;\n  uuid: string;\n  container: Container | null;\n  callback: ((err: Error | null, data?: any, output?: string) => void) | null;\n  timeoutID: NodeJS.Timeout | null;\n  callCount: number;\n  hasBindMount: boolean;\n  options: { questionTimeoutMilliseconds: number; pingTimeoutMilliseconds: number };\n  stdinStream: MemoryStream | null;\n  stdoutStream: MemoryStream | null;\n  stderrStream: MemoryStream | null;\n  outputStdout: string[];\n  outputStderr: string[];\n  outputBoth: string;\n  lastCallData: any;\n  coursePath: string | null;\n  forbiddenModules: string[];\n  hostDirectory: tmp.DirectoryResult | null;\n\n  /**\n   * Creating a new {@link CodeCallerContainer} instance requires some async work,\n   * so we use this static method to create a new instance since a constructor\n   * cannot be async.\n   */\n  static async create(options: CodeCallerContainerOptions): Promise<CodeCallerContainer> {\n    const codeCaller = new CodeCallerContainer(options);\n    await codeCaller.ensureChild();\n    return codeCaller;\n  }\n\n  private constructor(options: CodeCallerContainerOptions) {\n    this.state = CREATED;\n    this.uuid = uuidv4();\n\n    this.debug('enter constructor()');\n\n    this.container = null;\n    this.callback = null;\n    this.timeoutID = null;\n    this.callCount = 0;\n    this.hasBindMount = false;\n\n    this.options = options;\n\n    // These will accumulate output from the container.\n    this.outputStdout = [];\n    this.outputStderr = [];\n    this.outputBoth = '';\n\n    // for error logging\n    this.lastCallData = null;\n\n    this.coursePath = null;\n    this.forbiddenModules = [];\n\n    this._checkState();\n\n    this.debug(`exit constructor(), state: ${String(this.state)}, uuid: ${this.uuid}`);\n  }\n\n  getCoursePath() {\n    return this.coursePath;\n  }\n\n  /**\n   * Wrapper around `debug` that automatically includes UUID and the caller state.\n   */\n  debug(message: string) {\n    const paddedState = this.state.toString().padEnd(15);\n    debug(`[${this.uuid} ${paddedState}] ${message}`);\n  }\n\n  async createBindMount(directory: string, mountpoint: string) {\n    this.debug(`creating bind mount for ${directory} at ${mountpoint}`);\n    await instrumented('createBindMount', async (span) => {\n      span.setAttribute('mountpoint', mountpoint);\n      span.setAttribute('directory', directory);\n      await bindMount.mount(directory, mountpoint);\n      this.hasBindMount = true;\n    });\n    this.debug(`created bind mount for ${directory} at ${mountpoint}`);\n  }\n\n  /**\n   * Wrapper around `removeBindMount` that includes instance-specific logs.\n   *\n   */\n  async removeBindMountIfNeeded(mountpoint: string) {\n    if (!this.hasBindMount) return;\n\n    this.debug(`removing bind mount at ${mountpoint}`);\n    await instrumented('removeBindMount', async (span) => {\n      span.setAttribute('mountpoint', mountpoint);\n      await bindMount.umount(mountpoint);\n      this.hasBindMount = false;\n    });\n    this.debug(`removed bind mount at ${mountpoint}`);\n  }\n\n  /**\n   * Allows this caller to prepare for execution of code from a particular\n   * course.\n   */\n  async prepareForCourse({ coursePath, forbiddenModules }: PrepareForCourseOptions) {\n    this.forbiddenModules = forbiddenModules;\n\n    if (this.coursePath && this.coursePath === coursePath) {\n      // Same course as before; we can reuse the existing setup\n      return;\n    }\n\n    if (!this.hostDirectory) {\n      throw new Error('No hostDirectory set');\n    }\n\n    this.coursePath = coursePath;\n\n    await this.removeBindMountIfNeeded(this.hostDirectory.path);\n    await this.createBindMount(coursePath, this.hostDirectory.path);\n  }\n\n  async call(\n    type: CallType,\n    directory: string | null,\n    file: string | null,\n    fcn: string,\n    args: any[],\n  ): Promise<CodeCallerResult> {\n    this.debug(`enter call(${type}, ${directory}, ${file}, ${fcn})`);\n    this.callCount += 1;\n\n    // Reset this so that we don't include old data if the checks below fail.\n    this.lastCallData = null;\n\n    if (!this._checkState([WAITING])) {\n      throw new Error('invalid CodeCallerContainer state');\n    }\n\n    if (!this._checkReadyForCall(fcn)) {\n      throw new Error('not ready for call');\n    }\n\n    const callData = { type, directory, file, fcn, args, forbidden_modules: this.forbiddenModules };\n    const callDataString = JSON.stringify(callData);\n\n    // Reset output accumulators.\n    this.outputStdout = [];\n    this.outputStderr = [];\n    this.outputBoth = '';\n\n    const deferred = deferredPromise<CodeCallerResult>();\n    this.callback = (err, result, output) => {\n      if (err) {\n        deferred.reject(err);\n      } else {\n        deferred.resolve({ result, output: output ?? '' });\n      }\n    };\n\n    // Starting Python processes is cheap, but starting a new Docker container is\n    // relatively expensive. We'll add 5 seconds to whatever the question timeout\n    // is and use that as the timeout for the Docker container to minimize the\n    // likelihood of the container being killed when user code times out. This\n    // should still ensure the container is killed when it's truly unresponsive.\n    const containerTimeout =\n      type === 'ping'\n        ? this.options.pingTimeoutMilliseconds\n        : this.options.questionTimeoutMilliseconds;\n    this.timeoutID = setTimeout(this._handleTimeout.bind(this), containerTimeout + 5000);\n\n    this.lastCallData = callData;\n\n    this.stdinStream?.write(callDataString);\n    this.stdinStream?.write('\\n');\n\n    this.state = IN_CALL;\n    this._checkState();\n    this.debug('exit call()');\n\n    return deferred.promise;\n  }\n\n  async restart() {\n    this.debug('enter restart()');\n    if (!this._checkState([CREATED, WAITING, EXITING, EXITED])) {\n      throw new Error('Unexpected CodeCallerContainer state');\n    }\n\n    if (this.callCount === 0) {\n      // If there weren't any calls since the last time this code caller\n      // was restarted, we can slightly optimize things by skipping the\n      // restart. This is safe, as no user-provided code will have been\n      // loaded into the Python interpreter.\n      this.debug('exit restart() - skipping since no calls recorded since last restart');\n      return true;\n    } else if (this.state === CREATED) {\n      // no need to restart if we don't have a worker\n      this.debug('exit restart()');\n      return true;\n    } else if (this.state === WAITING) {\n      const { result } = await this.call('restart', null, null, 'restart', []);\n      this.forbiddenModules = [];\n      this.coursePath = null;\n      this.callCount = 0;\n      if (result !== 'success') throw new Error(`Error while restarting: ${result}`);\n      this.debug('exit restart()');\n      return true;\n    } else if (this.state === EXITING || this.state === EXITED) {\n      this.debug('exit restart()');\n      return false;\n    } else {\n      throw new Error(`Invalid CodeCallerContainer state: ${String(this.state)}`);\n    }\n  }\n\n  done() {\n    this.debug('enter done()');\n    this._checkState([CREATED, WAITING, EXITING, EXITED]);\n\n    if (this.state === CREATED) {\n      this.state = EXITED;\n    } else if (this.state === WAITING) {\n      this._cleanup();\n      this.state = EXITING;\n    }\n    this._checkState();\n    this.debug('exit done()');\n  }\n\n  private async ensureChild() {\n    this.debug('enter ensureChild()');\n    this._checkState();\n\n    if (this.container) {\n      this.debug('exit ensureChild() - existing container');\n      return;\n    }\n\n    this.hostDirectory = await tmp.dir({ unsafeCleanup: true, prefix: MOUNT_DIRECTORY_PREFIX });\n    await ensureImage();\n    await this._createAndAttachContainer(this.hostDirectory.path);\n\n    // Transition to the WAITING state before pinging the container, as we\n    // need to be in that state in order to make a call.\n    this.state = WAITING;\n\n    await this.call('ping', null, null, 'ping', []);\n\n    this._checkState();\n    this.debug('exit ensureChild()');\n  }\n\n  /**\n   * Creates a container and attaches its stdin/stdout/stderr to streams\n   * we can write to and read from.\n   */\n  async _createAndAttachContainer(hostDirectory: string) {\n    this.debug('enter _createAndAttachContainer');\n    this.debug('_createAndAttachContainer(): creating container');\n    let bindMount = `${hostDirectory}:/course:ro`;\n    if (process.platform === 'linux') {\n      // See https://docs.docker.com/storage/bind-mounts/#configure-bind-propagation\n      // `bind-propagation-slave` is what allows the container to see the bind mount\n      // we made on the host.\n      //\n      // We only apply this on Linux platforms, as it is unnecessary and actually\n      // causes problems when running on macOS.\n      bindMount += ',slave';\n    }\n    this.container = await docker.createContainer({\n      name: `prairielearn.worker.${this.uuid}`,\n      Image: getExecutorImageName(),\n      OpenStdin: true,\n      // This will close stdin once we disconnect, which will let\n      // the worker know that they should die. Once the worker dies,\n      // `AutoRemove: true` below will ensure the worker container\n      // is removed.\n      StdinOnce: true,\n      AttachStdin: true,\n      AttachStdout: true,\n      AttachStderr: true,\n      HostConfig: {\n        Binds: [bindMount],\n        AutoRemove: true,\n        // Prevent forkbombs\n        PidsLimit: 64,\n      },\n      Env: [\n        // Proxy the `DEBUG` environment variable to the container so we can\n        // turn on debug logging for it\n        `DEBUG=${process.env.DEBUG}`,\n        // Inform the container of its timeouts; these get picked up by\n        // `executor.js` and passed on to the PythonCodeCaller constructor.\n        `QUESTION_TIMEOUT_MILLISECONDS=${this.options.questionTimeoutMilliseconds}`,\n        `PING_TIMEOUT_MILLISECONDS=${this.options.pingTimeoutMilliseconds}`,\n      ],\n    });\n    this.debug('_createAndAttachContainer(): created container');\n\n    const stream = await this.container.attach({\n      stream: true,\n      stdin: true,\n      stdout: true,\n      stderr: true,\n    });\n    this.stdinStream = new MemoryStream();\n    this.stdoutStream = new MemoryStream();\n    this.stderrStream = new MemoryStream();\n    this.stdinStream.pipe(stream);\n    this.container.modem.demuxStream(stream, this.stdoutStream, this.stderrStream);\n    this.stdoutStream.setEncoding('utf8');\n    this.stderrStream.setEncoding('utf8');\n    this.stdoutStream.on('data', (data) => this._handleStdout(data));\n    this.stderrStream.on('data', (data) => this._handleStderr(data));\n\n    this.debug('_createAndAttachContainer(): starting container');\n    await this.container.start();\n    this.debug('_createAndAttachContainer(): container started');\n\n    // This will passively (non-blocking) wait for the container to exit or be killed, while allowing other code to keep executing\n    this.container\n      .wait()\n      .then((status) => this._handleContainerExit(null, status))\n      .catch((err) => this._handleContainerExit(err));\n    this.debug('exit _createAndAttachContainer');\n  }\n\n  _handleStdout(data: string) {\n    this.debug('enter _handleStdout()');\n    this.outputStdout.push(data);\n    if (data.indexOf('\\n') >= 0) {\n      this._callIsFinished();\n    }\n    this.debug('exit _handleStdout()');\n  }\n\n  _handleStderr(data: string) {\n    this.debug('enter _handleStderr()');\n    this.outputStderr.push(data);\n    this.debug('exit _handleStderr()');\n  }\n\n  _handleTimeout() {\n    this.debug('enter _timeout()');\n    this._checkState([IN_CALL]);\n    this.timeoutID = null;\n    this._cleanup();\n    this.state = EXITING;\n    this._callCallback(new Error('timeout exceeded, killing CodeCallerContainer container'));\n    this.debug('exit _timeout()');\n  }\n\n  _clearTimeout() {\n    this.debug('enter _clearTimeout()');\n    clearTimeout(this.timeoutID ?? undefined);\n    this.timeoutID = null;\n    this.debug('exit _clearTimeout()');\n  }\n\n  /**\n   * Can be called asynchronously at any time if the container exits.\n   *\n   * @param err An error that occurred while waiting for the container to exit.\n   * @param code The status code that the container exited with\n   */\n  async _handleContainerExit(err: Error | null | undefined, code?: number) {\n    this.debug('enter _handleContainerExit()');\n    this._checkState([WAITING, IN_CALL, EXITING]);\n    if (this.state === WAITING) {\n      this._logError(\n        `CodeCallerContainer container exited while in state = WAITING, code = ${JSON.stringify(\n          code,\n        )}, err = ${err}`,\n      );\n      this.container = null;\n      this.state = EXITED;\n    } else if (this.state === IN_CALL) {\n      this._clearTimeout();\n      this.container = null;\n      this.state = EXITED;\n      this._callCallback(\n        new Error(\n          `CodeCallerContainer container exited unexpectedly, code = ${JSON.stringify(\n            code,\n          )}, err = ${err}`,\n        ),\n      );\n    } else if (this.state === EXITING) {\n      // no error, this is the good case\n      this.container = null;\n      this.state = EXITED;\n    }\n    this.debug('exit _handleContainerExit()');\n  }\n\n  _callCallback(err: (Error & { data?: any }) | null, data?: any, output?: string) {\n    this.debug('enter _callCallback()');\n    if (err) err.data = this._errorData();\n    const c = this.callback;\n    this.callback = null;\n    c?.(err, data, output);\n    this.debug('exit _callCallback()');\n  }\n\n  _callIsFinished() {\n    this.debug('enter _callIsFinished()');\n    if (!this._checkState([IN_CALL])) return;\n    this._clearTimeout();\n    let data: {\n      error?: string;\n      errorData?: { outputBoth: string };\n      functionMissing?: boolean;\n      data: any;\n      output: string;\n    } | null = null;\n    let err: Error | null = null;\n    try {\n      data = JSON.parse(this.outputStdout.join(''));\n      if (data && data.error) {\n        err = new Error(data.error);\n        if (data.errorData && data.errorData.outputBoth) {\n          this.outputBoth = data.errorData.outputBoth;\n        }\n      }\n    } catch (e) {\n      err = new Error('Error decoding CodeCallerContainer JSON: ' + e.message);\n    }\n    this.state = WAITING;\n    if (err) {\n      this._callCallback(err);\n    } else {\n      if (data?.functionMissing) {\n        this._callCallback(new FunctionMissingError('Function not found in module'));\n      } else {\n        this._callCallback(null, data?.data, data?.output || '');\n      }\n    }\n\n    // This is potentially quite a large object. Drop our reference to it to\n    // allow this memory to be quickly garbage collected.\n    this.lastCallData = null;\n\n    this.debug('exit _callIsFinished()');\n  }\n\n  /**\n   * Will prepare this worker to be completely disposed of. This will kill\n   * the Docker container, clear the timeout, unmount the mounted directory\n   * if needed, and finally remove the mounted directory.\n   *\n   * This function SHOULD NOT THROW as we're not guaranteed that anyone will be\n   * able to catch the error. This makes a best-effort attempt to clean up all\n   * the resources used by this caller, but it'll simply ignore any errors it\n   * encounters.\n   */\n  async _cleanup() {\n    this.debug('enter _cleanup()');\n    if (this.timeoutID) {\n      this._clearTimeout();\n    }\n    if (this.container) {\n      try {\n        await this.container.kill();\n      } catch (e) {\n        logger.error(`Error killing Docker container ${this.container.id}`, e);\n      }\n    }\n    // Note that we can't safely do any of this until the container is actually dead\n    if (this.hostDirectory) {\n      try {\n        await this.removeBindMountIfNeeded(this.hostDirectory.path);\n      } catch (e) {\n        logger.error('Error unmounting host directory', e);\n      }\n      try {\n        await this.hostDirectory.cleanup();\n      } catch (e) {\n        logger.error(`Error removing host directory ${this.hostDirectory.path}`, e);\n      }\n    }\n    this.debug('exit _cleanup()');\n  }\n\n  _errorData() {\n    const errForStack = new Error();\n    return {\n      state: this.state,\n      containerIsNull: this.container == null,\n      callbackIsNull: this.callback == null,\n      timeoutIDIsNull: this.timeoutID == null,\n      outputBoth: this.outputBoth,\n      stack: errForStack.stack,\n      lastCallData: this.lastCallData,\n    };\n  }\n\n  /**\n   * @param msg The message to log\n   */\n  _logError(msg: string): boolean {\n    this.debug('enter _logError()');\n    const errData = this._errorData();\n    logger.error(msg, errData);\n    this.debug('exit _logError()');\n    return false;\n  }\n\n  /**\n   * Checks if the caller is ready for a call to call().\n   */\n  _checkReadyForCall(fcn: string): boolean {\n    if (!this.container) {\n      return this._logError(\n        `Not ready for call, container is not created (state: ${String(this.state)})`,\n      );\n    }\n    if (fcn !== 'ping' && fcn !== 'restart') {\n      // 'ping' and 'restart' are fake functions that don't need a course path\n      if (!this.coursePath) {\n        return this._logError(\n          `Not ready for call, course was not set (state: ${String(this.state)})`,\n        );\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Checks that the caller is in a good state.\n   */\n  _checkState(allowedStates?: CallerState[]) {\n    if (allowedStates && !allowedStates.includes(this.state)) {\n      const allowedStatesList = allowedStates.map(String).join(', ');\n      return this._logError(\n        `Expected CodeCallerContainer to be in states [${allowedStatesList}] but actually have state ${String(\n          this.state,\n        )}`,\n      );\n    }\n\n    let containerNull: boolean, callbackNull: boolean, timeoutIDNull: boolean;\n    if (this.state === CREATED) {\n      containerNull = true;\n      callbackNull = true;\n      timeoutIDNull = true;\n    } else if (this.state === WAITING) {\n      containerNull = false;\n      callbackNull = true;\n      timeoutIDNull = true;\n    } else if (this.state === IN_CALL) {\n      containerNull = false;\n      callbackNull = false;\n      timeoutIDNull = false;\n    } else if (this.state === EXITING) {\n      containerNull = false;\n      callbackNull = true;\n      timeoutIDNull = true;\n    } else if (this.state === EXITED) {\n      containerNull = true;\n      callbackNull = true;\n      timeoutIDNull = true;\n    } else {\n      return this._logError(`Invalid CodeCallerContainer state: ${String(this.state)}`);\n    }\n\n    if (containerNull != null) {\n      if (containerNull && this.container != null) {\n        return this._logError(\n          `CodeCallerContainer state ${String(this.state)}: container should be null`,\n        );\n      }\n      if (!containerNull && this.container == null) {\n        return this._logError(\n          `CodeCallerContainer state ${String(this.state)}: container should not be null`,\n        );\n      }\n    }\n    if (callbackNull != null) {\n      if (callbackNull && this.callback != null) {\n        return this._logError(\n          `CodeCallerContainer state ${String(this.state)}: callback should be null`,\n        );\n      }\n      if (!callbackNull && this.callback == null) {\n        return this._logError(\n          `CodeCallerContainer state ${String(this.state)}: callback should not be null`,\n        );\n      }\n    }\n    if (timeoutIDNull != null) {\n      if (timeoutIDNull && this.timeoutID != null) {\n        return this._logError(\n          `CodeCallerContainer state ${String(this.state)}: timeoutID should be null`,\n        );\n      }\n      if (!timeoutIDNull && this.timeoutID == null) {\n        return this._logError(\n          `CodeCallerContainer state ${String(this.state)}: timeoutID should not be null`,\n        );\n      }\n    }\n\n    return true;\n  }\n}\n\n/**\n * If PrairieLearn dies unexpectedly, we may leave around temporary directories\n * that should have been removed. This function will perform a best-effort\n * attempt to clean them up, but will allow execution to continue if something\n * fails. It'll check for any directories in the OS tmp directory that match the\n * pattern of our tmp directory names, try to unmount them, and then remove the\n * directories.\n *\n * This function is run on startup in the `init()` function below.\n */\nasync function cleanupMountDirectories() {\n  try {\n    const tmpDir = os.tmpdir();\n    // Enumerate all directories in the OS tmp directory and remove\n    // any old ones\n    const dirs = await fs.readdir(tmpDir);\n    const outDirs = dirs.filter((d) => d.indexOf(MOUNT_DIRECTORY_PREFIX) === 0);\n    await Promise.all(\n      outDirs.map(async (dir) => {\n        const absolutePath = path.join(tmpDir, dir);\n\n        try {\n          debug(`removing bind mount at ${absolutePath}`);\n          await bindMount.umount(absolutePath);\n        } catch {\n          // Ignore this, it was hopefully unmounted successfully before\n        }\n\n        try {\n          await fs.rmdir(absolutePath);\n        } catch (e) {\n          logger.error(`Failed to remove temporary directory ${absolutePath}`);\n          logger.error(e);\n        }\n      }),\n    );\n  } catch (e) {\n    logger.error(e);\n  }\n}\n\nexport async function init() {\n  await cleanupMountDirectories();\n  await updateExecutorImageTag();\n  if (config.ensureExecutorImageAtStartup) {\n    await ensureImage();\n  }\n}\n"]}