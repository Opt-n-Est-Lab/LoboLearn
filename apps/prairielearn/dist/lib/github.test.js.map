{"version":3,"file":"github.test.js","sourceRoot":"","sources":["../../src/lib/github.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAE9B,OAAO,EAAE,uBAAuB,EAAE,MAAM,aAAa,CAAC;AAEtD,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACvC,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;YACpE,MAAM,CAAC,KAAK,CACV,uBAAuB,CAAC,kCAAkC,CAAC,EAC3D,kCAAkC,CACnC,CAAC;YACF,MAAM,CAAC,KAAK,CACV,uBAAuB,CAAC,yCAAyC,CAAC,EAClE,yCAAyC,CAC1C,CAAC;YACF,MAAM,CAAC,KAAK,CACV,uBAAuB,CAAC,2CAA2C,CAAC,EACpE,+CAA+C,CAChD,CAAC;YACF,MAAM,CAAC,KAAK,CACV,uBAAuB,CAAC,wCAAwC,CAAC,EACjE,uCAAuC,CACxC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,sCAAsC,CAAC,CAAC,CAAC;YAC/E,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,0CAA0C,CAAC,CAAC,CAAC;YACnF,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,kCAAkC,CAAC,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from 'chai';\n\nimport { httpPrefixForCourseRepo } from './github.js';\n\ndescribe('Github library', () => {\n  describe('httpPrefixforCourseRepo', () => {\n    it('Converts to HTTPS prefix when repo has proper format', async () => {\n      assert.equal(\n        httpPrefixForCourseRepo('git@github.com:username/repo.git'),\n        'https://github.com/username/repo',\n      );\n      assert.equal(\n        httpPrefixForCourseRepo('git@github.com:username2/repo-other.git'),\n        'https://github.com/username2/repo-other',\n      );\n      assert.equal(\n        httpPrefixForCourseRepo('git@github.com:username3/repo-yet-another'),\n        'https://github.com/username3/repo-yet-another',\n      );\n      assert.equal(\n        httpPrefixForCourseRepo('git@github.com:onemore/repository.git/'),\n        'https://github.com/onemore/repository',\n      );\n    });\n\n    it('Returns null if repo uses a different format', async () => {\n      assert.isNull(httpPrefixForCourseRepo('https://github.com/username/repo.git'));\n      assert.isNull(httpPrefixForCourseRepo('https://www.github.com/username/repo.git'));\n      assert.isNull(httpPrefixForCourseRepo('git@gitlab.com:username/repo.git'));\n    });\n\n    it('Returns null if repo is not provided', async () => {\n      assert.isNull(httpPrefixForCourseRepo(''));\n      assert.isNull(httpPrefixForCourseRepo(null));\n    });\n  });\n});\n"]}