{"version":3,"file":"issues.js","sourceRoot":"","sources":["../../src/lib/issues.ts"],"names":[],"mappings":"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","sourcesContent":["import * as async from 'async';\nimport { type Request, type Response } from 'express';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\nimport { recursivelyTruncateStrings } from '@prairielearn/sanitize';\n\nimport { selectAndAuthzVariant } from '../models/variant.js';\n\nimport { type Variant } from './db-types.js';\n\ninterface IssueForErrorData {\n  variantId: string;\n  studentMessage: string | null;\n  courseData: Record<string, any>;\n  userId: string | null;\n  authnUserId: string | null;\n}\n\ninterface IssueData extends IssueForErrorData {\n  instructorMessage: string | null;\n  manuallyReported: boolean;\n  courseCaused: boolean;\n  systemData: Record<string, any>;\n}\n\ninterface ErrorMaybeWithData extends Error {\n  data?: any;\n}\n\n/**\n * Inserts an issue.\n */\nexport async function insertIssue({\n  variantId,\n  studentMessage,\n  instructorMessage,\n  manuallyReported,\n  courseCaused,\n  courseData,\n  systemData,\n  userId,\n  authnUserId,\n}: IssueData): Promise<void> {\n  // Truncate all strings in the data objects to 1000 characters. This ensures\n  // that we don't store too much unnecessary data. This data is here for\n  // convenience, but it's not the source of truth: pretty much all of it\n  // is also stored elsewhere in the database, so we can always retrieve it\n  // if needed. The worst data is submission data, which can be very large;\n  // this is stored on each individual submission.\n  const truncatedCourseData = recursivelyTruncateStrings(courseData, 1000);\n  // Allow for a higher limit on the system data. This object contains output\n  // from the Python subprocess, which can be especially useful for debugging.\n  const truncatedSystemData = recursivelyTruncateStrings(systemData, 10000);\n  await sqldb.callAsync('issues_insert_for_variant', [\n    variantId,\n    studentMessage,\n    instructorMessage,\n    manuallyReported,\n    courseCaused,\n    truncatedCourseData,\n    truncatedSystemData,\n    userId,\n    authnUserId,\n  ]);\n}\n\n/**\n * Inserts an issue for a thrown error.\n */\nexport async function insertIssueForError(\n  err: ErrorMaybeWithData,\n  data: IssueForErrorData,\n): Promise<void> {\n  return insertIssue({\n    ...data,\n    manuallyReported: false,\n    courseCaused: true,\n    instructorMessage: err.toString(),\n    systemData: { stack: err.stack, courseErrData: err.data },\n  });\n}\n\n/**\n * Write a list of course issues for a variant.\n *\n * @param courseIssues - List of issue objects for to be written.\n * @param variant - The variant associated with the issues.\n * @param user_id - The user submitting the issues.\n * @param authn_user_id - The currently authenticated user.\n * @param studentMessage - The message to display to the student.\n * @param courseData - Arbitrary data to be associated with the issues.\n */\nexport async function writeCourseIssues(\n  courseIssues: ErrorMaybeWithData[],\n  variant: Variant,\n  user_id: string | null,\n  authn_user_id: string | null,\n  studentMessage: string | null,\n  courseData: Record<string, any>,\n) {\n  await async.eachSeries(courseIssues, async (courseErr) => {\n    await insertIssueForError(courseErr, {\n      variantId: variant.id,\n      studentMessage,\n      courseData,\n      userId: user_id,\n      authnUserId: authn_user_id,\n    });\n  });\n}\nexport async function reportIssueFromForm(\n  req: Request,\n  res: Response,\n  studentSubmission = false,\n): Promise<string> {\n  if (studentSubmission && !res.locals.assessment.allow_issue_reporting) {\n    throw new HttpStatusError(403, 'Issue reporting not permitted for this assessment');\n  }\n  const description = req.body.description;\n  if (typeof description !== 'string' || description.length === 0) {\n    throw new HttpStatusError(400, 'A description of the issue must be provided');\n  }\n\n  const variant = await selectAndAuthzVariant({\n    unsafe_variant_id: req.body.__variant_id,\n    variant_course: res.locals.course,\n    question_id: res.locals.question.id,\n    course_instance_id: res.locals.course_instance?.id,\n    instance_question_id: studentSubmission ? res.locals.instance_question?.id : null,\n    authz_data: res.locals.authz_data,\n    authn_user: res.locals.authn_user,\n    user: res.locals.user,\n    is_administrator: res.locals.is_administrator,\n  });\n  await insertIssue({\n    variantId: variant.id,\n    studentMessage: description,\n    instructorMessage: `${studentSubmission ? 'student' : 'instructor'}-reported issue`,\n    manuallyReported: true,\n    courseCaused: true,\n    courseData: {\n      variant,\n      question: res.locals.question,\n      course_instance: res.locals.course_instance,\n      course: res.locals.course,\n      ...(studentSubmission\n        ? {\n            instance_question: res.locals.instance_question,\n            assessment_instance: res.locals.assessment_instance,\n            assessment: res.locals.assessment,\n          }\n        : {}),\n    },\n    systemData: {},\n    userId: res.locals.user.user_id,\n    authnUserId: res.locals.authn_user.user_id,\n  });\n  return variant.id;\n}\n"]}