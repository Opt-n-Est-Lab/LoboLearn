{"version":3,"file":"question-submission.js","sourceRoot":"","sources":["../../src/lib/question-submission.ts"],"names":[],"mappings":"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","sourcesContent":["import { type Request, type Response } from 'express';\nimport _ from 'lodash';\n\nimport { HttpStatusError } from '@prairielearn/error';\n\nimport { selectAndAuthzVariant } from '../models/variant.js';\n\nimport { saveAndGradeSubmission, saveSubmission } from './grading.js';\n\nexport async function processSubmission(\n  req: Request,\n  res: Response,\n  options: {\n    /** Whether the submission is associated with a student assessment instance.  */\n    studentSubmission?: boolean;\n    /** Whether this processing is happening on a public question preview route. */\n    publicQuestionPreview?: boolean;\n  } = {},\n): Promise<string> {\n  let variant_id: string, submitted_answer: Record<string, any>;\n  if (res.locals.question.type === 'Freeform') {\n    variant_id = req.body.__variant_id;\n    submitted_answer = _.omit(req.body, ['__action', '__csrf_token', '__variant_id']);\n  } else {\n    if (!req.body.postData) {\n      throw new HttpStatusError(400, 'No postData');\n    }\n    let postData;\n    try {\n      postData = JSON.parse(req.body.postData);\n    } catch {\n      throw new HttpStatusError(400, 'JSON parse failed on body.postData');\n    }\n    variant_id = postData.variant ? postData.variant.id : null;\n    submitted_answer = postData.submittedAnswer;\n  }\n  const submission = {\n    variant_id,\n    user_id: res.locals.user.user_id,\n    auth_user_id: res.locals.authn_user.user_id,\n    submitted_answer,\n    ...(options.studentSubmission\n      ? {\n          credit: res.locals.authz_result.credit,\n          mode: res.locals.authz_data.mode,\n          client_fingerprint_id: res.locals.client_fingerprint_id,\n        }\n      : {}),\n  };\n  const variant = await selectAndAuthzVariant({\n    unsafe_variant_id: submission.variant_id,\n    variant_course: res.locals.course,\n    question_id: res.locals.question.id,\n    course_instance_id: res.locals.course_instance?.id,\n    instance_question_id: res.locals.instance_question?.id,\n    authz_data: res.locals.authz_data,\n    authn_user: res.locals.authn_user,\n    user: res.locals.user,\n    is_administrator: res.locals.is_administrator,\n  });\n\n  // This is also checked when we try to save a submission, but if that check\n  // fails, it's reported as a 500. We report with a friendlier error message\n  // and status code here, which will keep this error from contributing to 5XX\n  // monitors.\n  //\n  // We have a decent chance of hitting this code path if an instructor\n  // force-breaks variants, as we could be in a case where the variant wasn't\n  // broken when the user loaded the page but it is broken when they submit.\n  if (variant.broken_at) {\n    throw new HttpStatusError(403, 'Cannot submit to a broken variant');\n  }\n\n  if (req.body.__action === 'grade') {\n    const overrideRateLimits = !options.studentSubmission;\n    await saveAndGradeSubmission(\n      submission,\n      variant,\n      res.locals.question,\n      res.locals.course,\n      overrideRateLimits,\n    );\n    return submission.variant_id;\n  } else if (req.body.__action === 'save') {\n    await saveSubmission(submission, variant, res.locals.question, res.locals.course);\n    return submission.variant_id;\n  } else {\n    throw new HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n  }\n}\n"]}