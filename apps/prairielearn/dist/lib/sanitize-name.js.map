{"version":3,"file":"sanitize-name.js","sourceRoot":"","sources":["../../src/lib/sanitize-name.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,CAAS;IACtC,OAAO,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC;AAC1C,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,oBAAoB,CAAC,MAA8B;IACjE,MAAM,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;IACvD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,4BAA4B,CAC1C,eAEC,EACD,MAA8B;IAE9B,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;IAC/F,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;;;;GAQG;AACH,MAAM,UAAU,wBAAwB,CACtC,UAEC,EACD,cAEC,EACD,eAEC,EACD,MAEC;IAED,MAAM,MAAM,GACV,4BAA4B,CAAC,eAAe,EAAE,MAAM,CAAC;QACrD,cAAc,CAAC,cAAc,CAAC,YAAY,CAAC;QAC3C,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC;QACjC,GAAG,CAAC;IACN,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,sBAAsB,CACpC,QAEC,EACD,MAEC;IAED,MAAM,MAAM,GAAG,oBAAoB,CAAC,MAAM,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACjF,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["/**\n * Replace special characters in string with underscores.\n *\n * @param {String} s - The string to sanitize.\n * @return {String} A sanitized version of s.\n */\nexport function sanitizeString(s: string): string {\n  return s.replace(/[^a-zA-Z0-9-]/g, '_');\n}\n\n/**\n * Construct a sanitized filename prefix for a course.\n *\n * @param {Object} course - The course database object.\n * @return {String} The sanitized prefix string.\n */\nexport function courseFilenamePrefix(course: { short_name: string }): string {\n  const prefix = sanitizeString(course.short_name) + '_';\n  return prefix;\n}\n\n/**\n * Construct a sanitized filename prefix for a course instance.\n *\n * @param {Object} course_instance - The course_instance database object.\n * @param {Object} course - The course database object.\n * @return {String} The sanitized prefix string.\n */\nexport function courseInstanceFilenamePrefix(\n  course_instance: {\n    short_name: string;\n  },\n  course: { short_name: string },\n): string {\n  const prefix = courseFilenamePrefix(course) + sanitizeString(course_instance.short_name) + '_';\n  return prefix;\n}\n\n/**\n * Construct a sanitized filename prefix for an assessment.\n *\n * @param {Object} assessment - The assessment database object.\n * @param {Object} assessment_set - The assessment_set database object.\n * @param {Object} course_instance - The course_instance database object.\n * @param {Object} course - The course database object.\n * @return {String} The sanitized prefix string.\n */\nexport function assessmentFilenamePrefix(\n  assessment: {\n    number: string;\n  },\n  assessment_set: {\n    abbreviation: string;\n  },\n  course_instance: {\n    short_name: string;\n  },\n  course: {\n    short_name: string;\n  },\n): string {\n  const prefix =\n    courseInstanceFilenamePrefix(course_instance, course) +\n    sanitizeString(assessment_set.abbreviation) +\n    sanitizeString(assessment.number) +\n    '_';\n  return prefix;\n}\n\n/**\n * Construct a sanitized filename prefix for a question.\n *\n * @param {Object} question - The question database object.\n * @param {Object} course - The course database object.\n * @return {String} The sanitized prefix string.\n */\nexport function questionFilenamePrefix(\n  question: {\n    qid: string;\n  },\n  course: {\n    short_name: string;\n  },\n) {\n  const prefix = courseFilenamePrefix(course) + sanitizeString(question.qid) + '_';\n  return prefix;\n}\n"]}