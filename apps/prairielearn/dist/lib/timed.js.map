{"version":3,"file":"timed.js","sourceRoot":"","sources":["../../src/lib/timed.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,KAAK,CACnB,EAAwB,EACxB,IAAgC;IAEhC,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;IAEhC,MAAM,MAAM,GAAG,EAAE,EAAE,CAAC;IAEpB,IAAI,MAAM,YAAY,OAAO,EAAE,CAAC;QAC9B,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE;YACzB,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;SAAM,CAAC;QACN,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,CAAC;QACf,OAAO,MAAM,CAAC;IAChB,CAAC;AACH,CAAC","sourcesContent":["export function timed<T>(fn: () => T, done: (duration: number) => void): T;\nexport function timed<T>(fn: () => Promise<T>, done: (duration: number) => void): Promise<T>;\nexport function timed<T>(\n  fn: () => T | Promise<T>,\n  done: (duration: number) => void,\n): T | Promise<T> {\n  const start = performance.now();\n\n  const result = fn();\n\n  if (result instanceof Promise) {\n    return result.finally(() => {\n      const duration = performance.now() - start;\n      done(duration);\n    });\n  } else {\n    const duration = performance.now() - start;\n    done(duration);\n    return result;\n  }\n}\n"]}