{"version":3,"file":"authzCourseOrInstance.js","sourceRoot":"","sources":["../../src/middlewares/authzCourseOrInstance.ts"],"names":[],"mappings":"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","sourcesContent":["import { isValid, parseISO } from 'date-fns';\nimport debugfn from 'debug';\nimport { type Request, type Response } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { AugmentedError, HttpStatusError } from '@prairielearn/error';\nimport { html } from '@prairielearn/html';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\nimport { clearCookie } from '../lib/cookie.js';\nimport { features } from '../lib/features/index.js';\nimport { idsEqual } from '../lib/id.js';\nimport { selectCourseHasCourseInstances } from '../models/course-instances.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\nconst debug = debugfn('prairielearn:authzCourseOrInstance');\n\ninterface Override {\n  name: string;\n  value: string;\n  cookie: string;\n}\n/**\n * Removes all override cookies from the response.\n */\nfunction clearOverrideCookies(res: Response, overrides: Override[]) {\n  overrides.forEach((override) => {\n    debug(`clearing cookie: ${override.cookie}`);\n    const newName = override.cookie.replace(/^pl2_/, 'pl_');\n    clearCookie(res, [override.cookie, newName]);\n  });\n}\n\nexport async function authzCourseOrInstance(req: Request, res: Response) {\n  const isCourseInstance = Boolean(req.params.course_instance_id);\n\n  // Note that req.params.course_id and req.params.course_instance_id are strings and not\n  // numbers - this is why we can use the pattern \"id || null\" to check if they exist.\n  //\n  // We allow unit tests to override the req_mode. Unit tests may also override\n  // the user (middlewares/authn.js) and the req_date (middlewares/date.js).\n  const params = {\n    user_id: res.locals.authn_user.user_id,\n    course_id: req.params.course_id || null,\n    course_instance_id: req.params.course_instance_id || null,\n    is_administrator: res.locals.is_administrator,\n    allow_example_course_override: true,\n    ip: req.ip,\n    req_date: res.locals.req_date,\n    req_mode: config.devMode && req.cookies.pl_test_mode ? req.cookies.pl_test_mode : null,\n    req_course_role: null,\n    req_course_instance_role: null,\n  };\n\n  if (params.course_id == null && params.course_instance_id == null) {\n    throw new HttpStatusError(\n      403,\n      'Access denied (both course_id and course_instance_id are null)',\n    );\n  }\n\n  const result = await sqldb.queryZeroOrOneRowAsync(sql.select_authz_data, params);\n  if (result.rowCount === 0) {\n    throw new HttpStatusError(403, 'Access denied');\n  }\n\n  debug('authn user is authorized');\n\n  // Now that we know the user has access, parse the authz data\n  res.locals.course = result.rows[0].course;\n  res.locals.institution = result.rows[0].institution;\n\n  // The side nav is expanded by default.\n  res.locals.side_nav_expanded = req.session?.side_nav_expanded ?? true;\n\n  const permissions_course = result.rows[0].permissions_course;\n  res.locals.authz_data = {\n    authn_user: structuredClone(res.locals.authn_user),\n    authn_mode: result.rows[0].mode,\n    authn_mode_reason: result.rows[0].mode_reason,\n    authn_is_administrator: res.locals.is_administrator,\n    authn_course_role: permissions_course.course_role,\n    authn_has_course_permission_preview: permissions_course.has_course_permission_preview,\n    authn_has_course_permission_view: permissions_course.has_course_permission_view,\n    authn_has_course_permission_edit: permissions_course.has_course_permission_edit,\n    authn_has_course_permission_own: permissions_course.has_course_permission_own,\n    user: structuredClone(res.locals.authn_user),\n    mode: result.rows[0].mode,\n    mode_reason: result.rows[0].mode_reason,\n    is_administrator: res.locals.is_administrator,\n    course_role: permissions_course.course_role,\n    has_course_permission_preview: permissions_course.has_course_permission_preview,\n    has_course_permission_view: permissions_course.has_course_permission_view,\n    has_course_permission_edit: permissions_course.has_course_permission_edit,\n    has_course_permission_own: permissions_course.has_course_permission_own,\n  };\n  res.locals.user = res.locals.authz_data.user;\n  res.locals.course_has_course_instances = await selectCourseHasCourseInstances({\n    course_id: res.locals.course.id,\n  });\n\n  if (isCourseInstance) {\n    res.locals.course_instance = result.rows[0].course_instance;\n    const permissions_course_instance = result.rows[0].permissions_course_instance;\n    res.locals.authz_data.authn_course_instance_role =\n      permissions_course_instance.course_instance_role;\n    res.locals.authz_data.authn_has_course_instance_permission_view =\n      permissions_course_instance.has_course_instance_permission_view;\n    res.locals.authz_data.authn_has_course_instance_permission_edit =\n      permissions_course_instance.has_course_instance_permission_edit;\n    res.locals.authz_data.authn_has_student_access = permissions_course_instance.has_student_access;\n    res.locals.authz_data.authn_has_student_access_with_enrollment =\n      permissions_course_instance.has_student_access_with_enrollment;\n    res.locals.authz_data.course_instance_role = permissions_course_instance.course_instance_role;\n    res.locals.authz_data.has_course_instance_permission_view =\n      permissions_course_instance.has_course_instance_permission_view;\n    res.locals.authz_data.has_course_instance_permission_edit =\n      permissions_course_instance.has_course_instance_permission_edit;\n    res.locals.authz_data.has_student_access_with_enrollment =\n      permissions_course_instance.has_student_access_with_enrollment;\n    res.locals.authz_data.has_student_access = permissions_course_instance.has_student_access;\n  }\n\n  res.locals.has_enhanced_navigation = await features.enabledFromLocals(\n    'enhanced-navigation',\n    res.locals,\n  );\n  res.locals.question_sharing_enabled = await features.enabledFromLocals(\n    'question-sharing',\n    res.locals,\n  );\n\n  // Check if it is necessary to request a user data override - if not, return\n  const overrides: Override[] = [];\n  if (req.cookies.pl2_requested_uid) {\n    // If the requested uid is the same as the authn user uid, then silently clear the cookie and continue\n    if (req.cookies.pl2_requested_uid === res.locals.authn_user.uid) {\n      clearCookie(res, ['pl_requested_uid', 'pl2_requested_uid']);\n    } else {\n      overrides.push({\n        name: 'UID',\n        value: req.cookies.pl2_requested_uid,\n        cookie: 'pl2_requested_uid',\n      });\n    }\n  }\n  if (req.cookies.pl2_requested_course_role) {\n    overrides.push({\n      name: 'Course role',\n      value: req.cookies.pl2_requested_course_role,\n      cookie: 'pl2_requested_course_role',\n    });\n  }\n  if (req.cookies.pl2_requested_course_instance_role) {\n    overrides.push({\n      name: 'Course instance role',\n      value: req.cookies.pl2_requested_course_instance_role,\n      cookie: 'pl2_requested_course_instance_role',\n    });\n  }\n  if (req.cookies.pl2_requested_date) {\n    overrides.push({\n      name: 'Date',\n      value: req.cookies.pl2_requested_date,\n      cookie: 'pl2_requested_date',\n    });\n  }\n  if (overrides.length === 0) {\n    debug('no requested overrides');\n    return;\n  }\n\n  // If this is an example course, only allow overrides if the user is an administrator.\n  if (res.locals.course.example_course && !res.locals.is_administrator) {\n    clearOverrideCookies(res, overrides);\n\n    throw new AugmentedError('Access denied', {\n      status: 403,\n      info: html`\n        <p>\n          You are not allowed to request an effective user in the example course unless you are an\n          administrator or you are running PrairieLearn in development mode. All requested changes\n          to the effective user have been removed.\n        </p>\n      `,\n    });\n  }\n\n  // Cannot request a user data override without instructor permissions\n  if (\n    !(\n      res.locals.authz_data.authn_has_course_permission_preview ||\n      res.locals.authz_data.authn_has_course_instance_permission_view\n    )\n  ) {\n    debug('requested overrides, but authn user does not have instructor permissions');\n\n    // If on a student page route, silently exit and ignore effective user requests\n    if ((res.locals.viewType || 'none') === 'student') {\n      debug('on student page, so silently exit and ignore requested overrides');\n      return;\n    }\n\n    debug('not on student page, so clear all requested overrides and throw an error');\n    clearOverrideCookies(res, overrides);\n\n    throw new AugmentedError('Access denied', {\n      status: 403,\n      info: html`\n        <p>\n          You must be a member of the course staff in order to change the effective user. All\n          requested changes to the effective user have been removed.\n        </p>\n      `,\n    });\n  }\n\n  // We are trying to override the user data.\n  debug('trying to override the user data');\n  debug(req.cookies);\n\n  let user = res.locals.authz_data.user;\n  let is_administrator = res.locals.is_administrator;\n  let user_with_requested_uid_has_instructor_access_to_course_instance = false;\n\n  // Verify requested UID\n  if (req.cookies.pl2_requested_uid) {\n    const result = await sqldb.queryZeroOrOneRowAsync(sql.select_user, {\n      uid: req.cookies.pl2_requested_uid,\n      course_instance_id: isCourseInstance ? res.locals.course_instance.id : null,\n    });\n\n    // No user was found - remove all override cookies and return with error\n    if (result.rowCount === 0) {\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have tried to change the effective user to one with uid\n            <code>${req.cookies.pl2_requested_uid}</code>, when no such user exists. All requested\n            changes to the effective user have been removed.\n          </p>\n          ${config.devMode && is_administrator\n            ? html`\n                <div class=\"alert alert-warning\" role=\"alert\">\n                  In Development Mode,\n                  <a href=\"/pl/administrator/query/select_or_insert_user\">\n                    go here to add the user\n                  </a>\n                  first and then try the emulation again.\n                </div>\n                ${isCourseInstance\n                  ? html`\n                      <p>\n                        To auto-generate many users for testing, see\n                        <a href=\"/pl/administrator/query/generate_and_enroll_users\"\n                          >Generate random users and enroll them in a course instance</a\n                        >\n                        <br />\n                        (Hint your course_instance_id is\n                        <strong>${res.locals.course_instance.id}</strong>)\n                      </p>\n                    `\n                  : ''}\n              `\n            : ''}\n        `,\n      });\n    }\n\n    // The effective user is an administrator and the authn user is not - remove\n    // all override cookies and return with error\n    if (result.rows[0].is_administrator && !is_administrator) {\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have tried to change the effective user to one who is an administrator, when you are\n            not an administrator. All requested changes to the effective user have been removed.\n          </p>\n        `,\n      });\n    }\n\n    user = structuredClone(result.rows[0].user);\n    is_administrator = result.rows[0].is_administrator;\n    user_with_requested_uid_has_instructor_access_to_course_instance = result.rows[0].is_instructor;\n    debug(\n      `requested uid has instructor access: ${user_with_requested_uid_has_instructor_access_to_course_instance}`,\n    );\n\n    // FIXME: also override institution?\n  }\n\n  let req_date = res.locals.req_date;\n  if (req.cookies.pl2_requested_date) {\n    req_date = parseISO(req.cookies.pl2_requested_date);\n    if (!isValid(req_date)) {\n      debug(`requested date is invalid: ${req.cookies.pl2_requested_date}, ${req_date}`);\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have requested an invalid effective date:\n            <code>${req.cookies.pl2_requested_date}</code>. All requested changes to the effective\n            user have been removed.\n          </p>\n        `,\n      });\n    }\n\n    debug(`effective req_date = ${req_date}`);\n  }\n\n  const effectiveParams = {\n    user_id: user.user_id,\n    course_id: req.params.course_id || null,\n    course_instance_id: req.params.course_instance_id || null,\n    is_administrator,\n    allow_example_course_override: false,\n    ip: req.ip,\n    req_date,\n    req_mode: res.locals.authz_data.mode,\n    req_course_role: req.cookies.pl2_requested_course_role || null,\n    req_course_instance_role: req.cookies.pl2_requested_course_instance_role || null,\n  };\n\n  const effectiveResult = await sqldb.queryZeroOrOneRowAsync(\n    sql.select_authz_data,\n    effectiveParams,\n  );\n\n  // If the authn user were denied access, then we would return an error. Here,\n  // we simply return (without error). This allows the authn user to keep access\n  // to pages (e.g., the effective user page) for which only authn permissions\n  // are required.\n  if (effectiveResult.rowCount === 0) {\n    debug('effective user was denied access');\n\n    res.locals.authz_data.user = user;\n    res.locals.authz_data.is_administrator = false;\n\n    res.locals.authz_data.course_role = 'None';\n    res.locals.authz_data.has_course_permission_preview = false;\n    res.locals.authz_data.has_course_permission_view = false;\n    res.locals.authz_data.has_course_permission_edit = false;\n    res.locals.authz_data.has_course_permission_own = false;\n\n    if (isCourseInstance) {\n      res.locals.authz_data.course_instance_role = 'None';\n      res.locals.authz_data.has_course_instance_permission_view = false;\n      res.locals.authz_data.has_course_instance_permission_edit = false;\n      res.locals.authz_data.has_student_access = false;\n      res.locals.authz_data.has_student_access_with_enrollment = false;\n\n      if (res.locals.authz_data.user.uid !== res.locals.authz_data.authn_user.uid) {\n        res.locals.authz_data.user_with_requested_uid_has_instructor_access_to_course_instance =\n          user_with_requested_uid_has_instructor_access_to_course_instance;\n      }\n    }\n\n    res.locals.authz_data.overrides = overrides;\n\n    res.locals.user = res.locals.authz_data.user;\n    res.locals.is_administrator = res.locals.authz_data.is_administrator;\n\n    res.locals.authz_data.mode = effectiveParams.req_mode;\n    res.locals.req_date = req_date;\n    return;\n  }\n\n  // Now that we know the effective user has access, parse the authz data\n\n  // The effective user is a Previewer and the authn_user is not - remove\n  // all override cookies and return with error\n  if (\n    !res.locals.authz_data.authn_has_course_permission_preview &&\n    effectiveResult.rows[0].permissions_course.has_course_permission_preview\n  ) {\n    clearOverrideCookies(res, overrides);\n\n    throw new AugmentedError('Access denied', {\n      status: 403,\n      info: html`\n        <p>\n          You have tried to change the effective user to one who is a course previewer, when you are\n          not a course previewer. All requested changes to the effective user have been removed.\n        </p>\n      `,\n    });\n  }\n\n  // The effective user is a Viewer and the authn_user is not - remove\n  // all override cookies and return with error\n  if (\n    !res.locals.authz_data.authn_has_course_permission_view &&\n    effectiveResult.rows[0].permissions_course.has_course_permission_view\n  ) {\n    clearOverrideCookies(res, overrides);\n\n    throw new AugmentedError('Access denied', {\n      status: 403,\n      info: html`\n        <p>\n          You have tried to change the effective user to one who is a course viewer, when you are\n          not a course viewer. All requested changes to the effective user have been removed.\n        </p>\n      `,\n    });\n  }\n\n  // The effective user is an Editor and the authn_user is not - remove\n  // all override cookies and return with error\n  if (\n    !res.locals.authz_data.authn_has_course_permission_edit &&\n    effectiveResult.rows[0].permissions_course.has_course_permission_edit\n  ) {\n    clearOverrideCookies(res, overrides);\n\n    throw new AugmentedError('Access denied', {\n      status: 403,\n      info: html`\n        <p>\n          You have tried to change the effective user to one who is a course editor, when you are\n          not a course editor. All requested changes to the effective user have been removed.\n        </p>\n      `,\n    });\n  }\n\n  // The effective user is an Owner and the authn_user is not - remove\n  // all override cookies and return with error\n  if (\n    !res.locals.authz_data.authn_has_course_permission_own &&\n    effectiveResult.rows[0].permissions_course.has_course_permission_own\n  ) {\n    clearOverrideCookies(res, overrides);\n\n    throw new AugmentedError('Access denied', {\n      status: 403,\n      info: html`\n        <p>\n          You have tried to change the effective user to one who is a course owner, when you are not\n          a course owner. All requested changes to the effective user have been removed.\n        </p>\n      `,\n    });\n  }\n\n  if (isCourseInstance) {\n    // The effective user is a Student Data Viewer and the authn_user is not -\n    // remove all override cookies and return with error\n    if (\n      !res.locals.authz_data.authn_has_course_instance_permission_view &&\n      effectiveResult.rows[0].permissions_course_instance.has_course_instance_permission_view\n    ) {\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have tried to change the effective user to one who is a student data viewer in the\n            course instance <code>${res.locals.course_instance.short_name}</code>, when you are not\n            a student data viewer. All requested changes to the effective user have been removed.\n          </p>\n        `,\n      });\n    }\n\n    // The effective user is a Student Data Editor and the authn_user is not -\n    // remove all override cookies and return with error\n    if (\n      !res.locals.authz_data.authn_has_course_instance_permission_edit &&\n      effectiveResult.rows[0].permissions_course_instance.has_course_instance_permission_edit\n    ) {\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have tried to change the effective user to one who is a student data editor in the\n            course instance <code>${res.locals.course_instance.short_name}</code>, when you are not\n            a student data editor. All requested changes to the effective user have been removed.\n          </p>\n        `,\n      });\n    }\n\n    // The effective user is a student (with no course or course instance role prior to\n    // other overrides) with a different UID than the authn user (note UID is unique), and\n    // the authn user is not a Student Data Editor - remove all override cookies and return\n    // with error\n    if (\n      user.uid !== res.locals.authn_user.uid && // effective uid is not the same as authn uid\n      effectiveResult.rows[0].permissions_course_instance.has_student_access_with_enrollment && // effective user is enrolled with access\n      !user_with_requested_uid_has_instructor_access_to_course_instance && // effective user is not an instructor (i.e., is a student)\n      !res.locals.authz_data.authn_has_course_instance_permission_edit\n    ) {\n      // authn user is not a Student Data Editor\n      debug('cannot emulate student if not student data editor');\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have tried to change the effective user to one who is a student in the course\n            instance\n            <code>${res.locals.course_instance.short_name}</code>, when you do not have permission\n            to edit student data in this course instance. All requested changes to the effective\n            user have been removed.\n          </p>\n        `,\n      });\n    }\n\n    // The effective user is not enrolled in the course instance and is also not\n    // either a course instructor or a course instance instructor - remove all\n    // override cookies and return with error.\n    //\n    // Note that we skip this check if the effective user is the same as the\n    // authenticated user, since an instructor may want to view their course\n    // as a student without enrolling in their own course.\n    if (\n      !idsEqual(user.user_id, res.locals.authn_user.user_id) &&\n      !effectiveResult.rows[0].permissions_course.has_course_permission_preview &&\n      !effectiveResult.rows[0].permissions_course_instance.has_course_instance_permission_view &&\n      !effectiveResult.rows[0].permissions_course_instance.has_student_access_with_enrollment\n    ) {\n      clearOverrideCookies(res, overrides);\n\n      throw new AugmentedError('Access denied', {\n        status: 403,\n        info: html`\n          <p>\n            You have tried to change the effective user to one who is not enrolled in this course\n            instance. All required changes to the effective user have been removed.\n          </p>\n        `,\n      });\n    }\n  }\n\n  res.locals.authz_data.user = user;\n  res.locals.authz_data.is_administrator = is_administrator;\n  res.locals.authz_data.course_role = effectiveResult.rows[0].permissions_course.course_role;\n  res.locals.authz_data.has_course_permission_preview =\n    effectiveResult.rows[0].permissions_course.has_course_permission_preview;\n  res.locals.authz_data.has_course_permission_view =\n    effectiveResult.rows[0].permissions_course.has_course_permission_view;\n  res.locals.authz_data.has_course_permission_edit =\n    effectiveResult.rows[0].permissions_course.has_course_permission_edit;\n  res.locals.authz_data.has_course_permission_own =\n    effectiveResult.rows[0].permissions_course.has_course_permission_own;\n\n  if (isCourseInstance) {\n    res.locals.authz_data.course_instance_role =\n      effectiveResult.rows[0].permissions_course_instance.course_instance_role;\n    res.locals.authz_data.has_course_instance_permission_view =\n      effectiveResult.rows[0].permissions_course_instance.has_course_instance_permission_view;\n    res.locals.authz_data.has_course_instance_permission_edit =\n      effectiveResult.rows[0].permissions_course_instance.has_course_instance_permission_edit;\n    res.locals.authz_data.has_student_access =\n      effectiveResult.rows[0].permissions_course_instance.has_student_access;\n    res.locals.authz_data.has_student_access_with_enrollment =\n      effectiveResult.rows[0].permissions_course_instance.has_student_access_with_enrollment;\n\n    if (!idsEqual(user.user_id, res.locals.authn_user.user_id)) {\n      res.locals.authz_data.user_with_requested_uid_has_instructor_access_to_course_instance =\n        user_with_requested_uid_has_instructor_access_to_course_instance;\n    }\n\n    // If the effective user is the same as the authenticated user and the\n    // effective user has not requested any specific role, we'll treat them\n    // as though they're enrolled in the course instance as a student. This is\n    // important because we no longer automatically enroll instructors in their\n    // own course instances when they view them.\n    if (\n      idsEqual(user.user_id, res.locals.authn_user.user_id) &&\n      !res.locals.authz_data.has_course_instance_permission_view &&\n      !res.locals.authz_data.has_course_permission_view\n    ) {\n      res.locals.authz_data.has_student_access_with_enrollment = true;\n    }\n  }\n\n  res.locals.authz_data.overrides = overrides;\n\n  res.locals.user = res.locals.authz_data.user;\n  res.locals.is_administrator = res.locals.authz_data.is_administrator;\n\n  res.locals.authz_data.mode = effectiveResult.rows[0].mode;\n  res.locals.authz_data.mode_reason = effectiveResult.rows[0].mode_reason;\n  res.locals.req_date = req_date;\n}\n\nexport default asyncHandler(async (req, res, next) => {\n  await authzCourseOrInstance(req, res);\n  next();\n});\n"]}