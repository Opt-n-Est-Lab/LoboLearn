{"version":3,"file":"authzWorkspace.js","sourceRoot":"","sources":["../../src/middlewares/authzWorkspace.ts"],"names":[],"mappings":"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","sourcesContent":["import asyncHandler from 'express-async-handler';\nimport { z } from 'zod';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\nimport { IdSchema } from '@prairielearn/zod';\n\nimport { getModeForRequest } from '../lib/exam-mode.js';\nimport { isEnterprise } from '../lib/license.js';\nimport { selectAndAuthzVariant } from '../models/variant.js';\n\nimport { authzCourseOrInstance } from './authzCourseOrInstance.js';\nimport { authzHasCoursePreviewOrInstanceView } from './authzHasCoursePreviewOrInstanceView.js';\nimport { selectAndAuthzInstanceQuestion } from './selectAndAuthzInstanceQuestion.js';\nimport { selectAndAuthzInstructorQuestion } from './selectAndAuthzInstructorQuestion.js';\nimport { checkStudentAssessmentAccess } from './studentAssessmentAccess.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nexport default asyncHandler(async (req, res, next) => {\n  // We rely on having res.locals.workspace_id already set to the correct value here\n  const result = await sqldb.queryOptionalRow(\n    sql.select_auth_data_from_workspace,\n    { workspace_id: res.locals.workspace_id },\n    z.object({\n      variant_id: IdSchema,\n      question_id: IdSchema,\n      instance_question_id: IdSchema.nullable(),\n      course_instance_id: IdSchema.nullable(),\n      course_id: IdSchema,\n    }),\n  );\n\n  if (!result) {\n    // We couldn't find the workspace. Someone could have put in a bad workspace ID,\n    // or there could be a dangling workspace after a variant was deleted. Either way,\n    // translate this to a 403 the error out of our monitoring.\n    //\n    // We use a 403 instead of a 404 to avoid leaking information about the existence\n    // of particular workspace IDs.\n    throw new HttpStatusError(403, 'Access denied');\n  }\n\n  Object.assign(res.locals, result);\n\n  if (result.course_instance_id) {\n    req.params.course_instance_id = result.course_instance_id;\n    await authzCourseOrInstance(req, res);\n\n    if (isEnterprise()) {\n      const { checkPlanGrantsForLocals } = await import('../ee/lib/billing/plan-grants.js');\n      const hasPlanGrants = await checkPlanGrantsForLocals(res.locals);\n      if (!hasPlanGrants) {\n        // TODO: Show a fancier error page explaining what happened and prompting\n        // the user to contact their instructor.\n        throw new HttpStatusError(403, 'Access denied');\n      }\n    }\n\n    if (result.instance_question_id) {\n      req.params.instance_question_id = result.instance_question_id;\n      await selectAndAuthzInstanceQuestion(req, res);\n      if (!checkStudentAssessmentAccess(req, res)) {\n        // We've already sent a response, just bail.\n        return;\n      }\n    }\n  } else if (res.locals.course_id) {\n    req.params.course_id = res.locals.course_id;\n    await authzCourseOrInstance(req, res);\n  } else {\n    throw new Error('Workspace has no course and no course instance!');\n  }\n\n  if (!result.instance_question_id) {\n    // If we don't have an associated instance question, the variant was created\n    // from the instructor question preview and we should authorize for that.\n    req.params.question_id = result.question_id;\n    await authzHasCoursePreviewOrInstanceView(req, res);\n    await selectAndAuthzInstructorQuestion(req, res);\n\n    // We'll deny access to such variants if the user is in Exam mode to prevent\n    // a student from using a workspace for a course in which they're an\n    // instructor to infiltrate or exfiltrate exam data.\n    const { mode } = await getModeForRequest(req, res);\n    if (mode !== 'Public') {\n      throw new HttpStatusError(403, 'Access denied');\n    }\n  }\n\n  await selectAndAuthzVariant({\n    unsafe_variant_id: result.variant_id,\n    variant_course: res.locals.course,\n    question_id: result.question_id,\n    course_instance_id: res.locals.course_instance?.id,\n    instance_question_id: res.locals.instance_question?.id,\n    authz_data: res.locals.authz_data,\n    authn_user: res.locals.authn_user,\n    user: res.locals.user,\n    is_administrator: res.locals.is_administrator,\n  });\n\n  next();\n});\n"]}