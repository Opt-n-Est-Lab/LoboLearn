{"version":3,"file":"authzWorkspaceCookieSet.js","sourceRoot":"","sources":["../../src/middlewares/authzWorkspaceCookieSet.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AAEjE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,OAAO,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,kBAAkB,CAAC;AAEjE,eAAe,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACnD,gEAAgE;IAChE,kEAAkE;IAClE,iEAAiE;IACjE,gEAAgE;IAChE,2CAA2C;IAE3C,MAAM,YAAY,GAAG,GAAG,CAAC,MAAM,CAAC,YAAY,CAAC;IAC7C,MAAM,aAAa,GAAG,sBAAsB,YAAY,EAAE,CAAC;IAC3D,MAAM,aAAa,GAAG,uBAAuB,YAAY,EAAE,CAAC;IAC5D,MAAM,SAAS,GAAG;QAChB,YAAY,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY;KACtC,CAAC;IACF,MAAM,UAAU,GAAG,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IACpE,SAAS,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,aAAa,CAAC,EAAE,UAAU,EAAE;QACzD,MAAM,EAAE,MAAM,CAAC,sCAAsC;QACrD,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,kBAAkB,CAAC,GAAG,CAAC;KAChC,CAAC,CAAC;IACH,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC","sourcesContent":["import asyncHandler from 'express-async-handler';\n\nimport { generateSignedToken } from '@prairielearn/signed-token';\n\nimport { config } from '../lib/config.js';\nimport { setCookie, shouldSecureCookie } from '../lib/cookie.js';\n\nexport default asyncHandler(async (req, res, next) => {\n  // We should only have arrived here if we passed authn/authz and\n  // are authorized to access res.locals.workspace_id. We will set a\n  // short-lived cookie specific to this workspace_id that will let\n  // us bypass authn/authz in the future. This checking is done by\n  // middlewares/authzWorkspaceCookieCheck.js\n\n  const workspace_id = res.locals.workspace_id;\n  const oldCookieName = `pl_authz_workspace_${workspace_id}`;\n  const newCookieName = `pl2_authz_workspace_${workspace_id}`;\n  const tokenData = {\n    workspace_id: res.locals.workspace_id,\n  };\n  const cookieData = generateSignedToken(tokenData, config.secretKey);\n  setCookie(res, [oldCookieName, newCookieName], cookieData, {\n    maxAge: config.workspaceAuthzCookieMaxAgeMilliseconds,\n    httpOnly: true,\n    secure: shouldSecureCookie(req),\n  });\n  next();\n});\n"]}