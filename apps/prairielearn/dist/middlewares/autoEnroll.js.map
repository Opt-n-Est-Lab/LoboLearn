{"version":3,"file":"autoEnroll.js","sourceRoot":"","sources":["../../src/middlewares/autoEnroll.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AACxC,OAAO,EAAE,uBAAuB,EAAE,MAAM,yBAAyB,CAAC;AAElE,eAAe,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACnD,yEAAyE;IACzE,sEAAsE;IACtE,0EAA0E;IAC1E,mEAAmE;IACnE,8BAA8B;IAC9B,IACE,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;QAChE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,KAAK,MAAM;QAClD,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,0BAA0B,KAAK,MAAM;QAC3D,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,wBAAwB;QAC9C,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,wCAAwC,EAC/D,CAAC;QACD,MAAM,uBAAuB,CAAC;YAC5B,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,WAAW;YACnC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM;YACzB,eAAe,EAAE,GAAG,CAAC,MAAM,CAAC,eAAe;YAC3C,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU;SAClC,CAAC,CAAC;QAEH,mEAAmE;QACnE,gEAAgE;QAChE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,kCAAkC,GAAG,IAAI,CAAC;IAClE,CAAC;IAED,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC","sourcesContent":["import asyncHandler from 'express-async-handler';\n\nimport { idsEqual } from '../lib/id.js';\nimport { ensureCheckedEnrollment } from '../models/enrollment.js';\n\nexport default asyncHandler(async (req, res, next) => {\n  // If the user does not currently have access to the course, but could if\n  // they were enrolled, automatically enroll them. However, we will not\n  // attempt to enroll them if they are an instructor (that is, if they have\n  // a specific role in the course or course instance) or if they are\n  // impersonating another user.\n  if (\n    idsEqual(res.locals.user.user_id, res.locals.authn_user.user_id) &&\n    res.locals.authz_data.authn_course_role === 'None' &&\n    res.locals.authz_data.authn_course_instance_role === 'None' &&\n    res.locals.authz_data.authn_has_student_access &&\n    !res.locals.authz_data.authn_has_student_access_with_enrollment\n  ) {\n    await ensureCheckedEnrollment({\n      institution: res.locals.institution,\n      course: res.locals.course,\n      course_instance: res.locals.course_instance,\n      authz_data: res.locals.authz_data,\n    });\n\n    // This is the only part of the `authz_data` that would change as a\n    // result of this enrollment, so we can just update it directly.\n    res.locals.authz_data.has_student_access_with_enrollment = true;\n  }\n\n  next();\n});\n"]}