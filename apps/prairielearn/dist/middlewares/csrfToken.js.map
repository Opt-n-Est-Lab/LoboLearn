{"version":3,"file":"csrfToken.js","sourceRoot":"","sources":["../../src/middlewares/csrfToken.ts"],"names":[],"mappings":"AAAA,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AAEnF,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,eAAe,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACnD,MAAM,SAAS,GAAG;QAChB,GAAG,EAAE,GAAG,CAAC,WAAW;QACpB,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO;KAC9C,CAAC;IAEF,GAAG,CAAC,MAAM,CAAC,YAAY,GAAG,mBAAmB,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IAE3E,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE,CAAC;QAC1B,qEAAqE;QACrE,uEAAuE;QACvE,gEAAgE;QAEhE,MAAM,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC;YAC9C,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC;YAC7B,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;YACjE,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC,CAAC,CAAC","sourcesContent":["import asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport { checkSignedToken, generateSignedToken } from '@prairielearn/signed-token';\n\nimport { config } from '../lib/config.js';\n\nexport default asyncHandler(async (req, res, next) => {\n  const tokenData = {\n    url: req.originalUrl,\n    authn_user_id: res.locals.authn_user?.user_id,\n  };\n\n  res.locals.__csrf_token = generateSignedToken(tokenData, config.secretKey);\n\n  if (req.method === 'POST') {\n    // NOTE: If you are trying to debug a \"CSRF Fail\" in a form with file\n    // upload, you may have forgotten to special-case the file upload path.\n    // Search for \"upload.single('file')\" in server.js, for example.\n\n    const __csrf_token = req.headers['x-csrf-token']\n      ? req.headers['x-csrf-token']\n      : req.body.__csrf_token;\n    if (!checkSignedToken(__csrf_token, tokenData, config.secretKey)) {\n      throw new HttpStatusError(403, 'CSRF fail');\n    }\n  }\n  next();\n});\n"]}