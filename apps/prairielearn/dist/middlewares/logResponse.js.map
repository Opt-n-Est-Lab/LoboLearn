{"version":3,"file":"logResponse.js","sourceRoot":"","sources":["../../src/middlewares/logResponse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAkD,MAAM,SAAS,CAAC;AAEzE,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAE9C,OAAO,EAAE,eAAe,EAAE,MAAM,4BAA4B,CAAC;AAE7D,MAAM,CAAC,OAAO,WAAW,GAAY,EAAE,GAAa,EAAE,IAAkB;IACtE,2EAA2E;IAC3E,2CAA2C;IAC3C,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IAEtB,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;IAEhC,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,EAAE,CAAC;QAC7B,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE;gBACzB,GAAG,eAAe,CAAC,IAAI,EAAE;gBACzB,QAAQ,EAAE,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK;gBACnC,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,WAAW;gBACnC,EAAE,EAAE,GAAG,CAAC,EAAE;gBACV,WAAW,EAAE,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC;gBAC3C,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,IAAI;gBACJ,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,QAAQ,EAAE,GAAG,CAAC,gBAAgB;gBAC9B,aAAa,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,IAAI,IAAI;gBACtD,cAAc,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;gBACnD,OAAO,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,OAAO,IAAI,IAAI;gBAC1C,QAAQ,EAAE,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI;gBACvC,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,IAAI,IAAI;gBACzC,iBAAiB,EAAE,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,UAAU,IAAI,IAAI;gBACzD,kBAAkB,EAAE,GAAG,CAAC,MAAM,EAAE,eAAe,EAAE,EAAE,IAAI,IAAI;gBAC3D,0BAA0B,EAAE,GAAG,CAAC,MAAM,EAAE,eAAe,EAAE,UAAU,IAAI,IAAI;gBAC3E,aAAa,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,EAAE,IAAI,IAAI;gBACjD,oBAAoB,EAAE,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,IAAI;gBACzD,sBAAsB,EAAE,GAAG,CAAC,MAAM,EAAE,mBAAmB,EAAE,EAAE,IAAI,IAAI;gBACnE,WAAW,EAAE,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,IAAI,IAAI;gBAC7C,kBAAkB,EAAE,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,IAAI,IAAI;gBAC3D,oBAAoB,EAAE,GAAG,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,IAAI,IAAI;aAChE,CAAC,CAAC;YAEH,oFAAoF;YACpF,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,MAAM,CAAC,OAAO,CAAC,2BAA2B,EAAE;oBAC1C,WAAW,EAAE,GAAG,CAAC,MAAM,CAAC,WAAW;iBACpC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,IAAI,EAAE,CAAC;AACT,CAAC","sourcesContent":["import { type NextFunction, type Request, type Response } from 'express';\n\nimport { logger } from '@prairielearn/logger';\n\nimport { canonicalLogger } from '../lib/canonical-logger.js';\n\nexport default function (req: Request, res: Response, next: NextFunction) {\n  // Capture the path at the start of the request; it may have been rewritten\n  // by the time the finish handler executes.\n  const path = req.path;\n\n  const start = performance.now();\n\n  if (req.method !== 'OPTIONS') {\n    res.once('close', function () {\n      logger.verbose('response', {\n        ...canonicalLogger.data(),\n        duration: performance.now() - start,\n        response_id: res.locals.response_id,\n        ip: req.ip,\n        forwardedIP: req.headers['x-forwarded-for'],\n        method: req.method,\n        path,\n        params: req.params,\n        body: req.body,\n        finished: res.writableFinished,\n        authn_user_id: res.locals?.authn_user?.user_id ?? null,\n        authn_user_uid: res.locals?.authn_user?.uid ?? null,\n        user_id: res.locals?.user?.user_id ?? null,\n        user_uid: res.locals?.user?.uid ?? null,\n        course_id: res.locals?.course?.id ?? null,\n        course_short_name: res.locals?.course?.short_name ?? null,\n        course_instance_id: res.locals?.course_instance?.id ?? null,\n        course_instance_short_name: res.locals?.course_instance?.short_name ?? null,\n        assessment_id: res.locals?.assessment?.id ?? null,\n        assessment_directory: res.locals?.assessment?.tid ?? null,\n        assessment_instance_id: res.locals?.assessment_instance?.id ?? null,\n        question_id: res.locals?.question?.id ?? null,\n        question_directory: res.locals?.question?.directory ?? null,\n        instance_question_id: res.locals?.instance_question?.id ?? null,\n      });\n\n      // Print additional message in this case to simplify grepping logs for this scenario\n      if (!res.writableFinished) {\n        logger.verbose('request aborted by client', {\n          response_id: res.locals.response_id,\n        });\n      }\n    });\n  }\n  next();\n}\n"]}