{"version":3,"file":"question.js","sourceRoot":"","sources":["../../src/models/question.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAElF,OAAO,EAAiB,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAEnE,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE1C,MAAM,CAAC,KAAK,UAAU,kBAAkB,CAAC,WAAmB;IAC1D,OAAO,MAAM,QAAQ,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,WAAW,EAAE,EAAE,cAAc,CAAC,CAAC;AACpF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,EACxC,GAAG,EACH,SAAS,GAIV;IACC,OAAO,MAAM,QAAQ,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,cAAc,CAAC,CAAC;AACxF,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,2BAA2B,CAAC,EAChD,GAAG,EACH,SAAS,GAIV;IACC,OAAO,MAAM,gBAAgB,CAAC,GAAG,CAAC,sBAAsB,EAAE,EAAE,GAAG,EAAE,SAAS,EAAE,EAAE,cAAc,CAAC,CAAC;AAChG,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,oBAAoB,CAAC,EACzC,SAAS,EACT,IAAI,GAIL;IACC,OAAO,MAAM,QAAQ,CAAC,GAAG,CAAC,uBAAuB,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,cAAc,CAAC,CAAC;AAC1F,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,kCAAkC,CACtD,oBAA4B;IAE5B,OAAO,MAAM,QAAQ,CACnB,GAAG,CAAC,uCAAuC,EAC3C,EAAE,oBAAoB,EAAE,EACxB,cAAc,CACf,CAAC;AACJ,CAAC","sourcesContent":["import { loadSqlEquiv, queryOptionalRow, queryRow } from '@prairielearn/postgres';\n\nimport { type Question, QuestionSchema } from '../lib/db-types.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nexport async function selectQuestionById(question_id: string): Promise<Question> {\n  return await queryRow(sql.select_question_by_id, { question_id }, QuestionSchema);\n}\n\nexport async function selectQuestionByQid({\n  qid,\n  course_id,\n}: {\n  qid: string;\n  course_id: string;\n}): Promise<Question> {\n  return await queryRow(sql.select_question_by_qid, { qid, course_id }, QuestionSchema);\n}\n\nexport async function selectOptionalQuestionByQid({\n  qid,\n  course_id,\n}: {\n  qid: string;\n  course_id: string;\n}): Promise<Question | null> {\n  return await queryOptionalRow(sql.select_question_by_qid, { qid, course_id }, QuestionSchema);\n}\n\nexport async function selectQuestionByUuid({\n  course_id,\n  uuid,\n}: {\n  course_id: string;\n  uuid: string;\n}): Promise<Question> {\n  return await queryRow(sql.select_question_by_uuid, { course_id, uuid }, QuestionSchema);\n}\n\nexport async function selectQuestionByInstanceQuestionId(\n  instance_question_id: string,\n): Promise<Question> {\n  return await queryRow(\n    sql.select_question_by_instance_question_id,\n    { instance_question_id },\n    QuestionSchema,\n  );\n}\n"]}