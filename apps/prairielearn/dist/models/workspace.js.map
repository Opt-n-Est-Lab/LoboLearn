{"version":3,"file":"workspace.js","sourceRoot":"","sources":["../../src/models/workspace.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,wBAAwB,CAAC;AAEhE,OAAO,EAAE,QAAQ,EAAkB,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAE/E,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAE1C,MAAM,UAAU,eAAe,CAAC,YAAoB;IAClD,OAAO,QAAQ,CAAC,GAAG,CAAC,gBAAgB,EAAE,EAAE,YAAY,EAAE,EAAE,eAAe,CAAC,CAAC;AAC3E,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,YAAoB;IAC9D,OAAO,QAAQ,CAAC,GAAG,CAAC,+BAA+B,EAAE,EAAE,YAAY,EAAE,EAAE,QAAQ,CAAC,CAAC;AACnF,CAAC","sourcesContent":["import { loadSqlEquiv, queryRow } from '@prairielearn/postgres';\n\nimport { IdSchema, type Workspace, WorkspaceSchema } from '../lib/db-types.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nexport function selectWorkspace(workspace_id: string): Promise<Workspace> {\n  return queryRow(sql.select_workspace, { workspace_id }, WorkspaceSchema);\n}\n\nexport function selectVariantIdForWorkspace(workspace_id: string): Promise<string> {\n  return queryRow(sql.select_variant_id_for_workspace, { workspace_id }, IdSchema);\n}\n"]}