{"version":3,"file":"administratorBatchedMigrations.html.js","sourceRoot":"","sources":["../../../src/pages/administratorBatchedMigrations/administratorBatchedMigrations.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from '@prairielearn/html';\nimport type {\n  BatchedMigrationJobRow,\n  BatchedMigrationRow,\n  BatchedMigrationStatus,\n} from '@prairielearn/migrations';\n\nimport { PageLayout } from '../../components/PageLayout.html.js';\n\nexport function AdministratorBatchedMigrations({\n  batchedMigrations,\n  resLocals,\n}: {\n  batchedMigrations: BatchedMigrationRow[];\n  resLocals: Record<string, any>;\n}) {\n  const hasBatchedMigrations = batchedMigrations.length > 0;\n\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Batched migrations',\n    navContext: {\n      type: 'plain',\n      page: 'admin',\n      subPage: 'batchedMigrations',\n    },\n    content: html`\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n          <h1>Batched migrations</h1>\n        </div>\n        ${hasBatchedMigrations\n          ? html`<div class=\"list-group list-group-flush\">\n              ${batchedMigrations.map((migration) => {\n                return html`\n                  <div class=\"list-group-item d-flex align-items-center\">\n                    <a\n                      href=\"${resLocals.urlPrefix}/administrator/batchedMigrations/${migration.id}\"\n                      class=\"me-auto\"\n                    >\n                      ${migration.filename}\n                    </a>\n                    ${MigrationStatusBadge(migration.status)}\n                  </div>\n                `;\n              })}\n            </div>`\n          : html`<div class=\"card-body text-center text-secondary\">No batched migrations</div>`}\n      </div>\n    `,\n  });\n}\n\nexport function AdministratorBatchedMigration({\n  batchedMigration,\n  recentSucceededJobs,\n  recentFailedJobs,\n  resLocals,\n}: {\n  batchedMigration: BatchedMigrationRow;\n  recentSucceededJobs: BatchedMigrationJobRow[];\n  recentFailedJobs: BatchedMigrationJobRow[];\n  resLocals: Record<string, any>;\n}) {\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Batched migrations',\n    navContext: {\n      type: 'plain',\n      page: 'admin',\n      subPage: 'batchedMigrations',\n    },\n    content: html`\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h1>Migration details</h1>\n        </div>\n        <table class=\"table table-sm two-column-description\" aria-label=\"Migration details\">\n          <tbody>\n            <tr>\n              <th>Filename</th>\n              <td>${batchedMigration.filename}</td>\n            </tr>\n            <tr>\n              <th>Minimum value</th>\n              <td>${batchedMigration.min_value}</td>\n            </tr>\n            <tr>\n              <th>Maximum value</th>\n              <td>${batchedMigration.max_value}</td>\n            </tr>\n            <tr>\n              <th>Status</th>\n              <td>${MigrationStatusBadge(batchedMigration.status)}</td>\n            </tr>\n            <tr>\n              <th>Created at</th>\n              <td>${batchedMigration.created_at.toUTCString()}</td>\n            </tr>\n            <tr>\n              <th>Updated at</th>\n              <td>${batchedMigration.updated_at.toUTCString()}</td>\n            </tr>\n            <tr>\n              <th>Started at</th>\n              <td>${batchedMigration.started_at?.toUTCString()}</td>\n            </tr>\n            <tr>\n              <th>Actions</th>\n              <td>\n                <form method=\"POST\">\n                  <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n                  <button\n                    type=\"submit\"\n                    name=\"__action\"\n                    value=\"retry_failed_jobs\"\n                    class=\"btn btn-primary btn-sm\"\n                  >\n                    Retry failed jobs\n                  </button>\n                </form>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      ${MigrationJobsCard({\n        title: 'Recent succeeded jobs',\n        jobs: recentSucceededJobs,\n        emptyText: 'No recent succeeded jobs',\n      })}\n      ${MigrationJobsCard({\n        title: 'Recent failed jobs',\n        jobs: recentFailedJobs,\n        emptyText: 'No recent failed jobs',\n      })}\n    `,\n  });\n}\n\nfunction MigrationStatusBadge(status: BatchedMigrationStatus) {\n  switch (status) {\n    case 'pending':\n      return html`<span class=\"badge text-bg-secondary\">Pending</span>`;\n    case 'paused':\n      return html`<span class=\"badge text-bg-secondary\">Paused</span>`;\n    case 'running':\n      return html`<span class=\"badge text-bg-primary\">Running</span>`;\n    case 'finalizing':\n      return html`<span class=\"badge text-bg-primary\">Finalizing</span>`;\n    case 'failed':\n      return html`<span class=\"badge text-bg-danger\">Failed</span>`;\n    case 'succeeded':\n      return html`<span class=\"badge text-bg-success\">Succeeded</span>`;\n    default:\n      return html`<span class=\"badge text-bg-warning\">Unknown (${status})</span>`;\n  }\n}\n\nfunction MigrationJobsCard({\n  title,\n  jobs,\n  emptyText,\n}: {\n  title: string;\n  jobs: BatchedMigrationJobRow[];\n  emptyText: string;\n}) {\n  return html`\n    <div class=\"card mb-4\">\n      <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n        <span class=\"me-auto\">${title}</span>\n      </div>\n      ${jobs.length > 0\n        ? html`<div class=\"list-group list-group-flush\">\n            ${jobs.map((job) => {\n              let duration: number | null = null;\n              if (job.started_at && job.finished_at) {\n                duration = job.finished_at.getTime() - job.started_at.getTime();\n              }\n              const attemptsLabel = job.attempts === 1 ? 'attempt' : 'attempts';\n              const attempts = `${job.attempts} ${attemptsLabel}`;\n              const summary = `${job.min_value} - ${job.max_value}`;\n              const hasData = job.data != null;\n              return html`\n                <div class=\"list-group-item d-flex flex-column\">\n                  ${hasData\n                    ? html`\n                        <details>\n                          <summary>${summary}</summary>\n\n                          <pre class=\"mt-3 p-3 rounded bg-dark text-white\"><code>${JSON.stringify(\n                            job.data,\n                            null,\n                            2,\n                          )}</code></pre>\n                        </details>\n                      `\n                    : html`<div>${summary}</div>`}\n                  ${job.started_at\n                    ? html`\n                        <span\n                          class=\"text-muted text-small\"\n                          style=\"font-variant-numeric: tabular-nums;\"\n                        >\n                          #${job.id} ran at ${job.started_at.toUTCString()} for ${duration}ms\n                          &mdash; ${attempts}\n                        </span>\n                      `\n                    : null}\n                </div>\n              `;\n            })}\n          </div>`\n        : html`<div class=\"card-body text-center text-secondary\">${emptyText}</div>`}\n    </div>\n  `;\n}\n"]}