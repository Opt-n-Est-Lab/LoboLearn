{"version":3,"file":"administratorBatchedMigrations.js","sourceRoot":"","sources":["../../../src/pages/administratorBatchedMigrations/administratorBatchedMigrations.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EACL,+BAA+B,EAC/B,0BAA0B,EAC1B,sBAAsB,EACtB,0BAA0B,GAC3B,MAAM,0BAA0B,CAAC;AAElC,OAAO,EACL,6BAA6B,EAC7B,8BAA8B,GAC/B,MAAM,0CAA0C,CAAC;AAElD,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAE7C,MAAM,OAAO,GAAG,cAAc,CAAC;AAE/B,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,iBAAiB,GAAG,MAAM,0BAA0B,CAAC,OAAO,CAAC,CAAC;IACpE,GAAG,CAAC,IAAI,CAAC,8BAA8B,CAAC,EAAE,iBAAiB,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,wBAAwB,EACxB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,gBAAgB,GAAG,MAAM,sBAAsB,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;IAChG,MAAM,mBAAmB,GAAG,MAAM,0BAA0B,CAC1D,gBAAgB,CAAC,EAAE,EACnB,WAAW,EACX,EAAE,CACH,CAAC;IACF,MAAM,gBAAgB,GAAG,MAAM,0BAA0B,CAAC,gBAAgB,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC7F,GAAG,CAAC,IAAI,CACN,6BAA6B,CAAC;QAC5B,gBAAgB;QAChB,mBAAmB;QACnB,gBAAgB;QAChB,SAAS,EAAE,GAAG,CAAC,MAAM;KACtB,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,wBAAwB,EACxB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,mBAAmB,EAAE,CAAC;QAC9C,MAAM,+BAA+B,CAAC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC;QAChF,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,qBAAqB,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;AACH,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\nimport {\n  retryFailedBatchedMigrationJobs,\n  selectAllBatchedMigrations,\n  selectBatchedMigration,\n  selectRecentJobsWithStatus,\n} from '@prairielearn/migrations';\n\nimport {\n  AdministratorBatchedMigration,\n  AdministratorBatchedMigrations,\n} from './administratorBatchedMigrations.html.js';\n\nconst router = Router({ mergeParams: true });\n\nconst PROJECT = 'prairielearn';\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const batchedMigrations = await selectAllBatchedMigrations(PROJECT);\n    res.send(AdministratorBatchedMigrations({ batchedMigrations, resLocals: res.locals }));\n  }),\n);\n\nrouter.get(\n  '/:batched_migration_id',\n  asyncHandler(async (req, res) => {\n    const batchedMigration = await selectBatchedMigration(PROJECT, req.params.batched_migration_id);\n    const recentSucceededJobs = await selectRecentJobsWithStatus(\n      batchedMigration.id,\n      'succeeded',\n      10,\n    );\n    const recentFailedJobs = await selectRecentJobsWithStatus(batchedMigration.id, 'failed', 10);\n    res.send(\n      AdministratorBatchedMigration({\n        batchedMigration,\n        recentSucceededJobs,\n        recentFailedJobs,\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/:batched_migration_id',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'retry_failed_jobs') {\n      await retryFailedBatchedMigrationJobs(PROJECT, req.params.batched_migration_id);\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}