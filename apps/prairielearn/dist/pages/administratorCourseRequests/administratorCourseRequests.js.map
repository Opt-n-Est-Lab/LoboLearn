{"version":3,"file":"administratorCourseRequests.js","sourceRoot":"","sources":["../../../src/pages/administratorCourseRequests/administratorCourseRequests.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EACL,uBAAuB,EACvB,uBAAuB,EACvB,mBAAmB,GACpB,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAE,qBAAqB,EAAE,MAAM,6BAA6B,CAAC;AAEpE,OAAO,EAAE,2BAA2B,EAAE,MAAM,uCAAuC,CAAC;AAEpF,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,IAAI,GAAG,MAAM,uBAAuB,EAAE,CAAC;IAC7C,MAAM,YAAY,GAAG,MAAM,qBAAqB,EAAE,CAAC;IACnD,GAAG,CAAC,IAAI,CACN,2BAA2B,CAAC;QAC1B,IAAI;QACJ,YAAY;QACZ,WAAW,EAAE,MAAM,CAAC,WAAW;QAC/B,SAAS,EAAE,GAAG,CAAC,MAAM;KACtB,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,6BAA6B,EAAE,CAAC;QACxD,MAAM,mBAAmB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACtC,CAAC;SAAM,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,4BAA4B,EAAE,CAAC;QAC9D,MAAM,uBAAuB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1C,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,qBAAqB,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;AACH,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\n\nimport { config } from '../../lib/config.js';\nimport {\n  createCourseFromRequest,\n  selectAllCourseRequests,\n  updateCourseRequest,\n} from '../../lib/course-request.js';\nimport { selectAllInstitutions } from '../../models/institution.js';\n\nimport { AdministratorCourseRequests } from './administratorCourseRequests.html.js';\n\nconst router = express.Router();\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const rows = await selectAllCourseRequests();\n    const institutions = await selectAllInstitutions();\n    res.send(\n      AdministratorCourseRequests({\n        rows,\n        institutions,\n        coursesRoot: config.coursesRoot,\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'approve_deny_course_request') {\n      await updateCourseRequest(req, res);\n    } else if (req.body.__action === 'create_course_from_request') {\n      await createCourseFromRequest(req, res);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}