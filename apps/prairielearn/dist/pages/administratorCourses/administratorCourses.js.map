{"version":3,"file":"administratorCourses.js","sourceRoot":"","sources":["../../../src/pages/administratorCourses/administratorCourses.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../../lib/config.js';\nimport {\n  createCourseFromRequest,\n  selectPendingCourseRequests,\n  updateCourseRequest,\n} from '../../lib/course-request.js';\nimport { deleteCourse, insertCourse, selectCourseById } from '../../models/course.js';\nimport { selectAllInstitutions } from '../../models/institution.js';\n\nimport { AdministratorCourses, CourseWithInstitutionSchema } from './administratorCourses.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const course_requests = await selectPendingCourseRequests();\n    const institutions = await selectAllInstitutions();\n    const courses = await sqldb.queryRows(sql.select_courses, CourseWithInstitutionSchema);\n    res.send(\n      AdministratorCourses({\n        course_requests,\n        institutions,\n        courses,\n        coursesRoot: config.coursesRoot,\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'courses_insert') {\n      await insertCourse({\n        institution_id: req.body.institution_id,\n        short_name: req.body.short_name,\n        title: req.body.title,\n        display_timezone: req.body.display_timezone,\n        path: req.body.path,\n        repository: req.body.repository,\n        branch: req.body.branch,\n        authn_user_id: res.locals.authn_user.user_id,\n      });\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'courses_update_column') {\n      await sqldb.callAsync('courses_update_column', [\n        req.body.course_id,\n        req.body.column_name,\n        req.body.value,\n        res.locals.authn_user.user_id,\n      ]);\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'courses_delete') {\n      const course = await selectCourseById(req.body.course_id);\n      if (req.body.confirm_short_name !== course.short_name) {\n        throw new error.HttpStatusError(\n          400,\n          `deletion aborted: confirmation string \"${req.body.confirm_short_name}\" did not match expected value of \"${course.short_name}\"`,\n        );\n      }\n      await deleteCourse({\n        course_id: req.body.course_id,\n        authn_user_id: res.locals.authn_user.user_id,\n      });\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'approve_deny_course_request') {\n      await updateCourseRequest(req, res);\n    } else if (req.body.__action === 'create_course_from_request') {\n      await createCourseFromRequest(req, res);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}