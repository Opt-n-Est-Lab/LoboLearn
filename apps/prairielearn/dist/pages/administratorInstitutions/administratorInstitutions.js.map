{"version":3,"file":"administratorInstitutions.js","sourceRoot":"","sources":["../../../src/pages/administratorInstitutions/administratorInstitutions.ts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,SAAS,CAAC;AAC9B,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAC7C,OAAO,KAAK,KAAK,MAAM,wBAAwB,CAAC;AAEhD,OAAO,EAAE,qBAAqB,EAAE,MAAM,wBAAwB,CAAC;AAE/D,OAAO,EACL,yBAAyB,EACzB,oBAAoB,GACrB,MAAM,qCAAqC,CAAC;AAE7C,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAChC,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhD,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,YAAY,GAAG,MAAM,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,CAAC;IAC1F,MAAM,kBAAkB,GAAG,MAAM,qBAAqB,EAAE,CAAC;IACzD,GAAG,CAAC,IAAI,CACN,yBAAyB,CAAC,EAAE,YAAY,EAAE,kBAAkB,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CACvF,CAAC;AACJ,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,iBAAiB,EAAE,CAAC;QAC5C,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,EAAE;YAC7C,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU;YAC/B,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS;YAC7B,gBAAgB,EAAE,GAAG,CAAC,IAAI,CAAC,gBAAgB;YAC3C,UAAU,EAAE,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,IAAI;SAC/C,CAAC,CAAC;IACL,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;IACzD,CAAC;IAED,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAChC,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { getCanonicalTimezones } from '../../lib/timezones.js';\n\nimport {\n  AdministratorInstitutions,\n  InstitutionRowSchema,\n} from './administratorInstitutions.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const institutions = await sqldb.queryRows(sql.select_institutions, InstitutionRowSchema);\n    const availableTimezones = await getCanonicalTimezones();\n    res.send(\n      AdministratorInstitutions({ institutions, availableTimezones, resLocals: res.locals }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'add_institution') {\n      await sqldb.queryAsync(sql.insert_institution, {\n        short_name: req.body.short_name,\n        long_name: req.body.long_name,\n        display_timezone: req.body.display_timezone,\n        uid_regexp: req.body.uid_regexp.trim() || null,\n      });\n    } else {\n      throw new error.HttpStatusError(400, 'Unknown action');\n    }\n\n    res.redirect(req.originalUrl);\n  }),\n);\n\nexport default router;\n"]}