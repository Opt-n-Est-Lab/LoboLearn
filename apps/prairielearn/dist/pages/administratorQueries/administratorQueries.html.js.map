{"version":3,"file":"administratorQueries.html.js","sourceRoot":"","sources":["../../../src/pages/administratorQueries/administratorQueries.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AAEjE,MAAM,CAAC,MAAM,kCAAkC,GAAG,CAAC,CAAC,MAAM,CAAC;IACzD,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE;IAChB,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CAC/B,CAAC,CAAC;AAGH,MAAM,CAAC,MAAM,4BAA4B,GAAG,CAAC,CAAC,MAAM,CAAC;IACnD,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;IACvB,aAAa,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IACnD,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC9B,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC,QAAQ,EAAE;CAC/D,CAAC,CAAC;AAOH,MAAM,UAAU,oBAAoB,CAAC,EACnC,OAAO,EACP,SAAS,GAIV;IACC,OAAO,UAAU,CAAC;QAChB,SAAS;QACT,SAAS,EAAE,uBAAuB;QAClC,UAAU,EAAE;YACV,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,SAAS;SACnB;QACD,OAAO,EAAE;YACP,SAAS,EAAE,IAAI;SAChB;QACD,OAAO,EAAE,IAAI,CAAA;;;;;;;;gBAQD,OAAO,CAAC,GAAG,CACX,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA;;;iCAGE,SAAS,CAAC,SAAS,wBAAwB,KAAK,CAAC,UAAU;gCAC5D,KAAK,CAAC,UAAU;;;0BAGtB,KAAK,CAAC,WAAW;;iBAE1B,CACF;;;;;KAKV;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { z } from 'zod';\n\nimport { html } from '@prairielearn/html';\n\nimport { PageLayout } from '../../components/PageLayout.html.js';\n\nexport const AdministratorQueryJsonParamsSchema = z.object({\n  name: z.string(),\n  description: z.string(),\n  default: z.string().optional(),\n  comment: z.string().optional(),\n});\nexport type AdministratorQueryJsonParams = z.infer<typeof AdministratorQueryJsonParamsSchema>;\n\nexport const AdministratorQueryJsonSchema = z.object({\n  description: z.string(),\n  resultFormats: z.record(z.enum(['pre'])).optional(),\n  comment: z.string().optional(),\n  params: z.array(AdministratorQueryJsonParamsSchema).optional(),\n});\ntype AdministratorQueryJson = z.infer<typeof AdministratorQueryJsonSchema>;\n\nexport interface AdministratorQuery extends AdministratorQueryJson {\n  filePrefix: string;\n}\n\nexport function AdministratorQueries({\n  queries,\n  resLocals,\n}: {\n  queries: AdministratorQuery[];\n  resLocals: Record<string, any>;\n}) {\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Administrator Queries',\n    navContext: {\n      type: 'plain',\n      page: 'admin',\n      subPage: 'queries',\n    },\n    options: {\n      fullWidth: true,\n    },\n    content: html`\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h1>Queries</h1>\n        </div>\n        <div class=\"table-responsive\">\n          <table class=\"table table-sm table-hover table-striped\" aria-label=\"Queries\">\n            <tbody>\n              ${queries.map(\n                (query) => html`\n                  <tr>\n                    <td>\n                      <a href=\"${resLocals.urlPrefix}/administrator/query/${query.filePrefix}\">\n                        <code>${query.filePrefix}</code>\n                      </a>\n                    </td>\n                    <td>${query.description}</td>\n                  </tr>\n                `,\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    `,\n  });\n}\n"]}