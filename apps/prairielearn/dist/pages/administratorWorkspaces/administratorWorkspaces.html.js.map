{"version":3,"file":"administratorWorkspaces.html.js","sourceRoot":"","sources":["../../../src/pages/administratorWorkspaces/administratorWorkspaces.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { html } from '@prairielearn/html';\n\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { IdSchema, WorkspaceHostSchema } from '../../lib/db-types.js';\n\nconst WorkspaceWithContextSchema = z.object({\n  id: IdSchema,\n  state: z.enum(['uninitialized', 'stopped', 'launching', 'running']),\n  time_in_state: z.string(),\n  question_name: z.string(),\n  course_instance_name: z.string().nullable(),\n  course_name: z.string(),\n  institution_name: z.string(),\n});\n\nexport const WorkspaceHostRowSchema = z.object({\n  workspace_host: WorkspaceHostSchema,\n  workspace_host_time_in_state: z.string(),\n  workspaces: z.array(WorkspaceWithContextSchema),\n});\ntype WorkspaceHostRow = z.infer<typeof WorkspaceHostRowSchema>;\n\nexport function AdministratorWorkspaces({\n  workspaceHostRows,\n  workspaceLoadHostCapacity,\n  resLocals,\n}: {\n  workspaceHostRows: WorkspaceHostRow[];\n  workspaceLoadHostCapacity: number;\n  resLocals: Record<string, any>;\n}) {\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Workspaces',\n    navContext: {\n      type: 'plain',\n      page: 'admin',\n      subPage: 'workspaces',\n    },\n    preContent: html`\n      <script>\n        $(() => {\n          const toggleButton = document.querySelector('#toggle-all-workspaces');\n          toggleButton.addEventListener('click', () => {\n            const state = toggleButton.dataset.state;\n            $('#content .collapse').collapse(state === 'collapsed' ? 'show' : 'hide');\n            toggleButton.dataset.state = state === 'collapsed' ? 'expanded' : 'collapsed';\n            toggleButton.textContent = state === 'collapsed' ? 'Collapse all' : 'Expand all';\n          });\n        });\n      </script>\n    `,\n    content: html`\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n          <h1>Workspace hosts</h1>\n          <button\n            type=\"button\"\n            class=\"btn btn-light ms-auto\"\n            id=\"toggle-all-workspaces\"\n            data-state=\"collapsed\"\n          >\n            Expand all\n          </button>\n        </div>\n        <div class=\"list-group list-group-flush\">\n          ${workspaceHostRows.map((workspaceHostRow) => {\n            const workspaceHost = workspaceHostRow.workspace_host;\n            const workspaces = workspaceHostRow.workspaces;\n            const instanceId = workspaceHost.instance_id;\n            return html`\n              <div class=\"list-group-item\">\n                <div class=\"d-flex flex-row flex-wrap align-items-center\">\n                  <div class=\"d-flex align-items-center me-auto pe-2 font-monospace\">\n                    <a\n                      href=\"workspaces-${workspaceHost.id}\"\n                      class=\"me-2\"\n                      data-bs-target=\"#workspaces-${workspaceHost.id}\"\n                      data-bs-toggle=\"collapse\"\n                      aria-expanded=\"false\"\n                      aria-controls=\"workspaces-${workspaceHost.id}\"\n                      >${workspaceHost.hostname}</a\n                    >\n                    ${instanceId\n                      ? html`<span class=\"text-muted me-2\">(${instanceId})</span>`\n                      : null}\n                    ${WorkspaceHostState({ state: workspaceHost.state })}\n                    <span class=\"badge text-bg-secondary\">\n                      ${workspaceHostRow.workspace_host_time_in_state}\n                    </span>\n                  </div>\n                  ${Capacity({\n                    total: workspaceLoadHostCapacity,\n                    current: workspaces.length,\n                  })}\n                </div>\n                <div id=\"workspaces-${workspaceHost.id}\" class=\"collapse\">\n                  ${workspaces.length === 0\n                    ? html`\n                        <div class=\"text-muted my-2\">\n                          There are no workspaces running on this host.\n                        </div>\n                      `\n                    : html`\n                        <div class=\"list-group list-group my-2\">\n                          ${workspaces.map((workspace) => {\n                            const maybeCourseInstanceName = workspace.course_instance_name\n                              ? html`(<span title=\"Course instance\"\n                                    >${workspace.course_instance_name}</span\n                                  >)`\n                              : null;\n                            return html`\n                              <div class=\"list-group-item\">\n                                <div class=\"d-flex align-items-center\">\n                                  <span class=\"me-2\" style=\"font-variant-numeric: tabular-nums;\">\n                                    ${workspace.id}\n                                  </span>\n                                  ${WorkspaceState({ state: workspace.state })}\n                                  <span class=\"badge text-bg-secondary\">\n                                    ${workspace.time_in_state}\n                                  </span>\n                                </div>\n                                <div class=\"text-muted text-small\">\n                                  <span class=\"font-monospace\" title=\"Question\"\n                                    >${workspace.question_name}</span\n                                  >\n                                  &bull;\n                                  <span title=\"Course\">${workspace.course_name}</span>\n                                  ${maybeCourseInstanceName} &bull;\n                                  <span title=\"Institution\">${workspace.institution_name}</span>\n                                </div>\n                              </div>\n                            `;\n                          })}\n                        </div>\n                      `}\n                </div>\n              </div>\n            `;\n          })}\n        </div>\n      </div>\n    `,\n  });\n}\n\nfunction Capacity({ total, current }: { total: number; current: number }) {\n  const capacity = (current / total) * 100;\n  return html`\n    <div class=\"d-flex flex-row align-items-center\">\n      <div class=\"text-muted me-2\" style=\"font-variant-numeric: tabular-nums;\">\n        ${current} / ${total}\n      </div>\n      <div\n        class=\"progress flex-grow-1\"\n        style=\"width: 100px\"\n        role=\"meter\"\n        aria-label=\"Host capacity\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"${total}\"\n        aria-valuenow=\"${current}\"\n      >\n        <div class=\"progress-bar\" style=\"width: ${capacity}%\"></div>\n      </div>\n    </div>\n  `;\n}\n\nfunction WorkspaceState({ state }) {\n  const color = state === 'running' ? 'success' : 'secondary';\n  return html` <span class=\"badge badge-${color} me-2\">${state}</span> `;\n}\n\nfunction WorkspaceHostState({ state }) {\n  let color = 'secondary';\n  switch (state) {\n    case 'ready':\n      color = 'success';\n      break;\n    case 'unhealthy':\n    case 'terminating':\n    case 'terminated':\n      color = 'danger';\n      break;\n  }\n  return html`<span class=\"badge badge-${color} me-2\">${state}</span>`;\n}\n"]}