{"version":3,"file":"authLoginOAuth2.js","sourceRoot":"","sources":["../../../src/pages/authLoginOAuth2/authLoginOAuth2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,YAAY,EAAE,MAAM,qBAAqB,CAAC;AAEnD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,IACE,CAAC,MAAM,CAAC,QAAQ;QAChB,CAAC,MAAM,CAAC,cAAc;QACtB,CAAC,MAAM,CAAC,kBAAkB;QAC1B,CAAC,MAAM,CAAC,iBAAiB,EACzB,CAAC;QACD,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;IAChE,CAAC;IAED,MAAM,YAAY,GAAG,IAAI,YAAY,CACnC,MAAM,CAAC,cAAc,EACrB,MAAM,CAAC,kBAAkB,EACzB,MAAM,CAAC,iBAAiB,CACzB,CAAC;IACF,MAAM,GAAG,GAAG,YAAY,CAAC,eAAe,CAAC;QACvC,WAAW,EAAE,QAAQ;QACrB,KAAK,EAAE,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,CAAC;QACrC,MAAM,EAAE,gBAAgB;QACxB,kDAAkD;KACnD,CAAC,CAAC;IACH,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\nimport { OAuth2Client } from 'google-auth-library';\n\nimport { HttpStatusError } from '@prairielearn/error';\n\nimport { config } from '../../lib/config.js';\n\nconst router = Router();\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (\n      !config.hasOauth ||\n      !config.googleClientId ||\n      !config.googleClientSecret ||\n      !config.googleRedirectUrl\n    ) {\n      throw new HttpStatusError(404, 'Google login is not enabled');\n    }\n\n    const oauth2Client = new OAuth2Client(\n      config.googleClientId,\n      config.googleClientSecret,\n      config.googleRedirectUrl,\n    );\n    const url = oauth2Client.generateAuthUrl({\n      access_type: 'online',\n      scope: ['openid', 'profile', 'email'],\n      prompt: 'select_account',\n      // FIXME: should add some state here to avoid CSRF\n    });\n    res.redirect(url);\n  }),\n);\n\nexport default router;\n"]}