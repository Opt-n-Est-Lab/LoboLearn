{"version":3,"file":"authPassword.js","sourceRoot":"","sources":["../../../src/pages/authPassword/authPassword.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AAEjC,OAAO,EAAE,mBAAmB,EAAE,MAAM,4BAA4B,CAAC;AAEjE,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAC;AAEjF,OAAO,EAAE,YAAY,EAAE,MAAM,wBAAwB,CAAC;AAEtD,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG;IAChC,GAAG,CAAC,IAAI,CACN,YAAY,CAAC;QACX,SAAS,EAAE,GAAG,CAAC,MAAM;QACrB,eAAe,EAAE,kBAAkB,IAAI,GAAG,CAAC,OAAO;KACnD,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG;IACjC,MAAM,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,mBAAmB,IAAI,GAAG,CAAC;IAC3D,MAAM,MAAM,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,WAAW;IAE/C,MAAM,QAAQ,GAAG,mBAAmB,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;IAChG,SAAS,CAAC,GAAG,EAAE,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,EAAE,QAAQ,EAAE;QAChE,MAAM;QACN,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,kBAAkB,CAAC,GAAG,CAAC;KAChC,CAAC,CAAC;IACH,WAAW,CAAC,GAAG,EAAE,CAAC,eAAe,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAC3D,OAAO,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC;AAEH,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\n\nimport { generateSignedToken } from '@prairielearn/signed-token';\n\nimport { config } from '../../lib/config.js';\nimport { clearCookie, setCookie, shouldSecureCookie } from '../../lib/cookie.js';\n\nimport { AuthPassword } from './authPassword.html.js';\n\nconst router = Router();\n\nrouter.get('/', function (req, res) {\n  res.send(\n    AuthPassword({\n      resLocals: res.locals,\n      passwordInvalid: 'pl2_assessmentpw' in req.cookies,\n    }),\n  );\n});\n\nrouter.post('/', function (req, res) {\n  const redirectUrl = req.cookies.pl2_pw_original_url ?? '/';\n  const maxAge = 1000 * 60 * 60 * 12; // 12 hours\n\n  const pwCookie = generateSignedToken({ password: req.body.password, maxAge }, config.secretKey);\n  setCookie(res, ['pl_assessmentpw', 'pl2_assessmentpw'], pwCookie, {\n    maxAge,\n    httpOnly: true,\n    secure: shouldSecureCookie(req),\n  });\n  clearCookie(res, ['pl_pw_origUrl', 'pl2_pw_original_url']);\n  return res.redirect(redirectUrl);\n});\n\nexport default router;\n"]}