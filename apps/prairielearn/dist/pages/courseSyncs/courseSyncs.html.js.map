{"version":3,"file":"courseSyncs.html.js","sourceRoot":"","sources":["../../../src/pages/courseSyncs/courseSyncs.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { filesize } from 'filesize';\nimport { z } from 'zod';\n\nimport { formatDate } from '@prairielearn/formatter';\nimport { escapeHtml, html } from '@prairielearn/html';\n\nimport { JobStatus } from '../../components/JobStatus.html.js';\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { config } from '../../lib/config.js';\nimport {\n  type Course,\n  IdSchema,\n  JobSequenceSchema,\n  QuestionSchema,\n  UserSchema,\n} from '../../lib/db-types.js';\n\nexport const ImageRowSchema = z.object({\n  image: z.string(),\n  questions: z.object({ id: IdSchema, qid: QuestionSchema.shape.qid }).array(),\n  tag: z.string().optional(),\n  imageSyncNeeded: z.boolean().optional(),\n  invalid: z.boolean().optional(),\n  digest: z.string().optional(),\n  size: z.number().optional(),\n  pushed_at: z.date().nullish(),\n});\nexport type ImageRow = z.infer<typeof ImageRowSchema>;\n\nexport const JobSequenceRowSchema = JobSequenceSchema.extend({\n  user_uid: UserSchema.shape.uid.nullable(),\n});\ntype JobSequenceRow = z.infer<typeof JobSequenceRowSchema>;\n\nexport function CourseSyncs({\n  resLocals,\n  images,\n  jobSequences,\n}: {\n  resLocals: Record<string, any>;\n  images: ImageRow[];\n  jobSequences: JobSequenceRow[];\n}) {\n  const { course, __csrf_token, urlPrefix } = resLocals;\n\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Course sync',\n    navContext: {\n      type: 'instructor',\n      page: 'course_admin',\n      subPage: 'syncs',\n    },\n    options: {\n      fullWidth: true,\n    },\n    content: html`\n      <h1 class=\"visually-hidden\">Course Sync</h1>\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h2>Repository status</h2>\n        </div>\n        <div class=\"table-responsive\">\n          <table class=\"table table-sm\" aria-label=\"Repository status\">\n            <tbody>\n              <tr>\n                <th class=\"align-middle\">Current commit hash</th>\n                <td colspan=\"2\">${course.commit_hash}</td>\n              </tr>\n\n              <tr>\n                <th class=\"align-middle\">Path on disk</th>\n                <td class=\"align-middle\">${course.path}</td>\n                <td>\n                  <form name=\"confirm-form\" method=\"POST\">\n                    <input type=\"hidden\" name=\"__action\" value=\"status\" />\n                    <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n                    <button type=\"submit\" class=\"btn btn-sm btn-primary\">\n                      <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n                      Show server git status\n                    </button>\n                  </form>\n                </td>\n              </tr>\n              <tr>\n                <th class=\"align-middle\">Remote repository</th>\n                <td class=\"align-middle\">${course.repository}</td>\n                <td>\n                  <form name=\"confirm-form\" method=\"POST\">\n                    <input type=\"hidden\" name=\"__action\" value=\"pull\" />\n                    <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n                    <button type=\"submit\" class=\"btn btn-sm btn-primary\">\n                      <i class=\"fa fa-cloud-download-alt\" aria-hidden=\"true\"></i>\n                      Pull from remote git repository\n                    </button>\n                  </form>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h2>Docker images</h2>\n        </div>\n        ${ImageTable({ images, course, urlPrefix, __csrf_token })}\n      </div>\n\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h2>Sync job history</h2>\n        </div>\n        <div class=\"table-responsive\">\n          <table class=\"table table-sm table-hover\" aria-label=\"Sync job history\">\n            <thead>\n              <tr>\n                <th>Number</th>\n                <th>Date</th>\n                <th>Description</th>\n                <th>User</th>\n                <th>Status</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${jobSequences.map(\n                (jobSequence) => html`\n                  <tr>\n                    <td>${jobSequence.number}</td>\n                    <td>\n                      ${jobSequence.start_date == null\n                        ? html`&mdash;`\n                        : formatDate(jobSequence.start_date, course.display_timezone)}\n                    </td>\n                    <td>${jobSequence.description}</td>\n                    <td>${jobSequence.user_uid ?? '(System)'}</td>\n                    <td>${JobStatus({ status: jobSequence.status })}</td>\n                    <td>\n                      <a\n                        href=\"${urlPrefix}/jobSequence/${jobSequence.id}\"\n                        class=\"btn btn-xs btn-info\"\n                      >\n                        Details\n                      </a>\n                    </td>\n                  </tr>\n                `,\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    `,\n  });\n}\n\nfunction ImageTable({\n  images,\n  course,\n  urlPrefix,\n  __csrf_token,\n}: {\n  images: ImageRow[];\n  course: Course;\n  urlPrefix: string;\n  __csrf_token: string;\n}) {\n  if (images.length === 0) {\n    return html`<div class=\"card-body\"><em>No questions are using Docker images.</em></div>`;\n  }\n\n  return html`\n    <div class=\"table-responsive\">\n      <table class=\"table table-sm\" aria-label=\"Docker images\">\n        <thead>\n          <tr>\n            <th>Image name</th>\n            <th>Tag</th>\n            <th>Digest</th>\n            <th>Image size</th>\n            <th>Last sync</th>\n            <th>Actions</th>\n            <th>Used by</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${images.map(\n            (image) => html`\n              <tr>\n                <td>\n                  <div class=\"d-flex flex-row align-items-center\">\n                    <span class=\"me-2\">${image.image}</span>\n                    ${image.invalid\n                      ? html`<span class=\"badge text-bg-danger\">Invalid image name</span>`\n                      : ''}\n                  </div>\n                </td>\n                <td>${image.tag}</td>\n                <td>\n                  <code class=\"mb-0\" title=\"${image.digest}\">\n                    ${(image.digest?.length ?? 0) <= 24\n                      ? image.digest\n                      : `${image.digest?.substring(0, 24)}...`}\n                  </code>\n                </td>\n                <td>${image.size ? filesize(image.size) : ''}</td>\n                <td>\n                  ${image.imageSyncNeeded\n                    ? html`<span class=\"text-warning\">Not found in PL registry</span>`\n                    : image.pushed_at\n                      ? formatDate(image.pushed_at, course.display_timezone)\n                      : html`&mdash;`}\n                </td>\n                <td>\n                  ${config.cacheImageRegistry\n                    ? html`\n                        <form method=\"POST\">\n                          <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n                          <input type=\"hidden\" name=\"__action\" value=\"syncImage\" />\n                          <input type=\"hidden\" name=\"single_image\" value=\"${image.image}\" />\n                          <button type=\"submit\" class=\"btn btn-xs btn-primary\">\n                            <i class=\"fa fa-sync\" aria-hidden=\"true\"></i> Sync\n                          </button>\n                        </form>\n                      `\n                    : ''}\n                </td>\n                <td>\n                  ${image.questions.length > 0\n                    ? html`\n                        ${image.questions.length} question${image.questions.length > 1 ? 's' : ''}\n\n                        <button\n                          type=\"button\"\n                          class=\"btn btn-xs btn-secondary\"\n                          data-bs-toggle=\"popover\"\n                          data-bs-container=\"body\"\n                          data-bs-html=\"true\"\n                          data-bs-title=\"Questions using ${image.image}\"\n                          data-bs-content=\"${escapeHtml(\n                            ListQuestionsPopover({ image, urlPrefix }),\n                          )}\"\n                        >\n                          Show\n                        </button>\n                      `\n                    : 'No questions'}\n                </td>\n              </tr>\n            `,\n          )}\n        </tbody>\n      </table>\n    </div>\n    ${config.cacheImageRegistry\n      ? html`\n          <div class=\"card-footer\">\n            <form name=\"confirm-form\" method=\"POST\">\n              <input type=\"hidden\" name=\"__action\" value=\"syncImages\" />\n              <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n              <button type=\"submit\" class=\"btn btn-sm btn-primary\">\n                <i class=\"fa fa-sync\" aria-hidden=\"true\"></i>\n                Sync all images from Docker Hub to PrairieLearn\n              </button>\n            </form>\n          </div>\n        `\n      : ''}\n  `;\n}\n\nfunction ListQuestionsPopover({ image, urlPrefix }: { image: ImageRow; urlPrefix: string }) {\n  return html`\n    <div>\n      <ul>\n        ${image.questions\n          .slice(0, 5)\n          .map(\n            (question) => html`\n              <li><a href=\"${urlPrefix}/question/${question.id}\">${question.qid}</a></li>\n            `,\n          )}\n      </ul>\n      ${image.questions.length > 5 ? html`and ${image.questions.length - 5} more&hellip;` : ''}\n    </div>\n  `;\n}\n"]}