{"version":3,"file":"error.html.js","sourceRoot":"","sources":["../../../src/pages/error/error.html.ts"],"names":[],"mappings":"AAAA,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AACpD,OAAO,CAAC,MAAM,QAAQ,CAAC;AAEvB,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAC;AACvD,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AACtD,OAAO,EAAE,4BAA4B,EAAE,MAAM,wBAAwB,CAAC;AAEtE,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAE7C,SAAS,UAAU,CAAC,KAAU;IAC5B,OAAO,iBAAiB,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAChD,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,EACxB,KAAK,EACL,SAAS,EACT,OAAO,EACP,QAAQ,EACR,SAAS,GAYV;IACC,MAAM,EACJ,YAAY,EACZ,YAAY,EACZ,GAAG,EAAE,QAAQ,EACb,SAAS,EACT,QAAQ,EACR,GAAG,QAAQ,EACZ,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAC;IAErB,MAAM,iBAAiB,GAAG,4BAA4B,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAErF,OAAO,UAAU,CAAC;QAChB,SAAS;QACT,SAAS,EAAE,SAAS,KAAK,CAAC,MAAM,EAAE;QAClC,UAAU,EAAE;YACV,IAAI,EAAE,SAAS,CAAC,UAAU;YAC1B,IAAI,EAAE,OAAO;SACd;QACD,OAAO,EAAE,IAAI,CAAA;;;;;;;gCAOe,KAAK,CAAC,OAAO;;YAEjC,UAAU,CAAC,SAAS,IAAI,EAAE,CAAC;;gDAES,OAAO;;wCAEf,KAAK,CAAC,MAAM;;;uBAG7B,QAAQ,6BAA6B,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;;;;uBAIhE,MAAM,CAAC,SAAS;;;;;;YAM3B,YAAY;YACZ,CAAC,CAAC,IAAI,CAAA;;8DAE4C,YAAY;eAC3D;YACH,CAAC,CAAC,EAAE;YACJ,YAAY;YACZ,CAAC,CAAC,IAAI,CAAA;;8DAE4C,YAAY;eAC3D;YACH,CAAC,CAAC,EAAE;YACJ,KAAK,CAAC,KAAK;YACX,CAAC,CAAC,IAAI,CAAA;;8DAE4C,gBAAgB,CAAC,KAAK,CAAC;eACtE;YACH,CAAC,CAAC,EAAE;YACJ,iBAAiB;YACjB,CAAC,CAAC,IAAI,CAAA;;8DAE4C,iBAAiB;eAChE;YACH,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;YACrB,CAAC,CAAC,IAAI,CAAA;;8DAE4C,UAAU,CAAC,SAAS,CAAC;eACpE;YACH,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,CAAC,CAAC,IAAI,CAAA;;8DAE4C,UAAU,CAAC,QAAQ,CAAC;eACnE;YACH,CAAC,CAAC,EAAE;YACJ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC;YACpB,CAAC,CAAC,IAAI,CAAA;;8DAE4C,UAAU,CAAC,QAAQ,CAAC;eACnE;YACH,CAAC,CAAC,EAAE;;;KAGX;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import jsonStringifySafe from 'json-stringify-safe';\nimport _ from 'lodash';\n\nimport { formatErrorStack } from '@prairielearn/error';\nimport { html, unsafeHtml } from '@prairielearn/html';\nimport { formatQueryWithErrorPosition } from '@prairielearn/postgres';\n\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { config } from '../../lib/config.js';\n\nfunction formatJson(value: any): string {\n  return jsonStringifySafe(value, null, '    ');\n}\n\nexport function ErrorPage({\n  error,\n  errorInfo,\n  errorId,\n  referrer,\n  resLocals,\n}: {\n  error: {\n    message?: string;\n    stack?: string;\n    status?: number;\n    data?: Record<string, any>;\n  };\n  errorInfo?: string;\n  errorId: string;\n  referrer: string | null;\n  resLocals: Record<string, any>;\n}) {\n  const {\n    outputStderr,\n    outputStdout,\n    sql: sqlQuery,\n    sqlParams,\n    sqlError,\n    ...restData\n  } = error.data ?? {};\n\n  const formattedSqlQuery = formatQueryWithErrorPosition(sqlQuery, sqlError?.position);\n\n  return PageLayout({\n    resLocals,\n    pageTitle: `Error ${error.status}`,\n    navContext: {\n      type: resLocals.navbarType,\n      page: 'error',\n    },\n    content: html`\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-danger text-white\">\n          <h1>Error processing request</h1>\n        </div>\n\n        <div class=\"card-body\">\n          <h2 class=\"mb-3 h4\">${error.message}</h2>\n\n          ${unsafeHtml(errorInfo ?? '')}\n\n          <p><strong>Error ID:</strong> <code>${errorId}</code></p>\n\n          <p><strong>Status:</strong> ${error.status}</p>\n\n          <div>\n            <a href=\"${referrer}\" class=\"btn btn-primary\" ${!referrer ? 'disabled' : ''}>\n              <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n              Back to previous page\n            </a>\n            <a href=\"${config.urlPrefix}\" class=\"btn btn-primary\">\n              <i class=\"fa fa-home\" aria-hidden=\"true\"></i>\n              PrairieLearn home\n            </a>\n          </div>\n\n          ${outputStderr\n            ? html`\n                <p><strong>Standard error:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${outputStderr}</pre>\n              `\n            : ''}\n          ${outputStdout\n            ? html`\n                <p><strong>Standard output:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${outputStdout}</pre>\n              `\n            : ''}\n          ${error.stack\n            ? html`\n                <p><strong>Stack trace:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${formatErrorStack(error)}</pre>\n              `\n            : ''}\n          ${formattedSqlQuery\n            ? html`\n                <p><strong>SQL query:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${formattedSqlQuery}</pre>\n              `\n            : ''}\n          ${!_.isEmpty(sqlParams)\n            ? html`\n                <p><strong>SQL params:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${formatJson(sqlParams)}</pre>\n              `\n            : ''}\n          ${!_.isEmpty(sqlError)\n            ? html`\n                <p><strong>SQL error data:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${formatJson(sqlError)}</pre>\n              `\n            : ''}\n          ${!_.isEmpty(restData)\n            ? html`\n                <p><strong>Additional data:</strong></p>\n                <pre class=\"bg-dark text-white rounded p-2\">${formatJson(restData)}</pre>\n              `\n            : ''}\n        </div>\n      </div>\n    `,\n  });\n}\n"]}