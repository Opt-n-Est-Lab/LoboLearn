{"version":3,"file":"generatedFilesQuestion.js","sourceRoot":"","sources":["../../../src/pages/generatedFilesQuestion/generatedFilesQuestion.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\n\nimport { UserSchema } from '../../lib/db-types.js';\nimport { getDynamicFile } from '../../lib/question-variant.js';\nimport { selectCourseById } from '../../models/course.js';\nimport { selectQuestionById } from '../../models/question.js';\nimport { selectAndAuthzVariant } from '../../models/variant.js';\n\nexport default function (options = { publicEndpoint: false }) {\n  const router = Router({ mergeParams: true });\n  router.get(\n    '/variant/:unsafe_variant_id(\\\\d+)/*',\n    asyncHandler(async function (req, res) {\n      if (options.publicEndpoint) {\n        res.locals.course = await selectCourseById(req.params.course_id);\n        res.locals.question = await selectQuestionById(req.params.question_id);\n        res.locals.user = UserSchema.parse(res.locals.authn_user);\n\n        if (\n          !(res.locals.question.share_publicly || res.locals.question.share_source_publicly) ||\n          res.locals.course.id !== res.locals.question.course_id\n        ) {\n          throw new HttpStatusError(404, 'Not Found');\n        }\n      }\n\n      const variant = await selectAndAuthzVariant({\n        unsafe_variant_id: req.params.unsafe_variant_id,\n        variant_course: res.locals.course,\n        question_id: res.locals.question.id,\n        course_instance_id: res.locals.course_instance?.id,\n        instance_question_id: res.locals.instance_question?.id,\n        authz_data: res.locals.authz_data,\n        authn_user: res.locals.authn_user,\n        user: res.locals.user,\n        is_administrator: res.locals.is_administrator,\n        publicQuestionPreview: options.publicEndpoint,\n      });\n\n      const filename = req.params[0];\n      const fileData = await getDynamicFile(\n        filename,\n        variant,\n        res.locals.question,\n        res.locals.course,\n        res.locals.user.user_id,\n        res.locals.authn_user.user_id,\n      );\n      res.attachment(filename);\n      res.send(fileData);\n    }),\n  );\n  return router;\n}\n"]}