{"version":3,"file":"instructorAssessmentInstance.js","sourceRoot":"","sources":["../../../src/pages/instructorAssessmentInstance/instructorAssessmentInstance.ts"],"names":[],"mappings":"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","sourcesContent":["import { pipeline } from 'node:stream/promises';\n\nimport * as express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport { z } from 'zod';\n\nimport { stringifyStream } from '@prairielearn/csv';\nimport * as error from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport {\n  selectAssessmentInstanceLog,\n  selectAssessmentInstanceLogCursor,\n  updateAssessmentInstancePoints,\n  updateAssessmentInstanceScore,\n} from '../../lib/assessment.js';\nimport * as ltiOutcomes from '../../lib/ltiOutcomes.js';\nimport { updateInstanceQuestionScore } from '../../lib/manualGrading.js';\nimport { assessmentFilenamePrefix, sanitizeString } from '../../lib/sanitize-name.js';\nimport { resetVariantsForInstanceQuestion } from '../../models/variant.js';\n\nimport {\n  AssessmentInstanceStatsSchema,\n  InstanceQuestionRowSchema,\n  InstructorAssessmentInstance,\n} from './instructorAssessmentInstance.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst DateDurationResultSchema = z.object({\n  assessment_instance_date_formatted: z.string(),\n  assessment_instance_duration: z.string(),\n});\n\nfunction makeLogCsvFilename(locals) {\n  return (\n    assessmentFilenamePrefix(\n      locals.assessment,\n      locals.assessment_set,\n      locals.course_instance,\n      locals.course,\n    ) +\n    sanitizeString(locals.instance_group?.name ?? locals.instance_user?.uid ?? 'unknown') +\n    '_' +\n    locals.assessment_instance.number +\n    '_' +\n    'log.csv'\n  );\n}\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res, _next) => {\n    if (!res.locals.authz_data.has_course_instance_permission_view) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a student data viewer)');\n    }\n    const logCsvFilename = makeLogCsvFilename(res.locals);\n    const assessment_instance_stats = await sqldb.queryRows(\n      sql.assessment_instance_stats,\n      {\n        assessment_instance_id: res.locals.assessment_instance.id,\n      },\n      AssessmentInstanceStatsSchema,\n    );\n\n    const dateDurationResult = await sqldb.queryRow(\n      sql.select_date_formatted_duration,\n      {\n        assessment_instance_id: res.locals.assessment_instance.id,\n      },\n      DateDurationResultSchema,\n    );\n    const assessment_instance_date_formatted =\n      dateDurationResult.assessment_instance_date_formatted;\n    const assessment_instance_duration = dateDurationResult.assessment_instance_duration;\n\n    const instance_questions = await sqldb.queryRows(\n      sql.select_instance_questions,\n      {\n        assessment_instance_id: res.locals.assessment_instance.id,\n      },\n      InstanceQuestionRowSchema,\n    );\n\n    const assessmentInstanceLog = await selectAssessmentInstanceLog(\n      res.locals.assessment_instance.id,\n      false,\n    );\n\n    res.send(\n      InstructorAssessmentInstance({\n        resLocals: res.locals,\n        logCsvFilename,\n        assessment_instance_stats,\n        assessment_instance_date_formatted,\n        assessment_instance_duration,\n        instance_questions,\n        assessmentInstanceLog,\n      }),\n    );\n  }),\n);\n\nrouter.get(\n  '/:filename',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_instance_permission_view) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a student data viewer)');\n    }\n    if (req.params.filename === makeLogCsvFilename(res.locals)) {\n      const cursor = await selectAssessmentInstanceLogCursor(\n        res.locals.assessment_instance.id,\n        false,\n      );\n      const fingerprintNumbers = new Map();\n      let i = 1;\n      const stringifier = stringifyStream({\n        header: true,\n        columns: [\n          'Time',\n          'Auth user',\n          'Fingerprint',\n          'IP Address',\n          'Event',\n          'Instructor question',\n          'Student question',\n          'Data',\n        ],\n        transform(record) {\n          if (record.client_fingerprint) {\n            if (!fingerprintNumbers.get(record.client_fingerprint.id)) {\n              fingerprintNumbers.set(record.client_fingerprint.id, i);\n              i++;\n            }\n          }\n          return [\n            record.date_iso8601,\n            record.auth_user_uid,\n            fingerprintNumbers.get(record.client_fingerprint?.id) ?? null,\n            record.client_fingerprint?.ip_address ?? null,\n            record.event_name,\n            record.instructor_question_number == null\n              ? null\n              : 'I-' + record.instructor_question_number + ' (' + record.qid + ')',\n            record.student_question_number == null\n              ? null\n              : 'S-' +\n                record.student_question_number +\n                (record.variant_number == null ? '' : '#' + record.variant_number),\n            record.data == null ? null : JSON.stringify(record.data),\n          ];\n        },\n      });\n\n      res.attachment(req.params.filename);\n      await pipeline(cursor.stream(100), stringifier, res);\n    } else {\n      throw new error.HttpStatusError(404, 'Unknown filename: ' + req.params.filename);\n    }\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_instance_permission_edit) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a student data editor)');\n    }\n\n    if (req.body.__action === 'edit_total_points') {\n      await updateAssessmentInstancePoints(\n        res.locals.assessment_instance.id,\n        req.body.points,\n        res.locals.authn_user.user_id,\n      );\n      await ltiOutcomes.updateScore(res.locals.assessment_instance.id);\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'edit_total_score_perc') {\n      await updateAssessmentInstanceScore(\n        res.locals.assessment_instance.id,\n        req.body.score_perc,\n        res.locals.authn_user.user_id,\n      );\n      await ltiOutcomes.updateScore(res.locals.assessment_instance.id);\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'edit_question_points') {\n      const { modified_at_conflict, grading_job_id } = await updateInstanceQuestionScore(\n        res.locals.assessment.id,\n        req.body.instance_question_id,\n        null, // submission_id\n        req.body.modified_at,\n        {\n          points: req.body.points,\n          manual_points: req.body.manual_points,\n          auto_points: req.body.auto_points,\n          score_perc: req.body.score_perc,\n        },\n        res.locals.authn_user.user_id,\n      );\n      if (modified_at_conflict) {\n        return res.redirect(\n          `${res.locals.urlPrefix}/assessment/${res.locals.assessment.id}/manual_grading/instance_question/${req.body.instance_question_id}?conflict_grading_job_id=${grading_job_id}`,\n        );\n      }\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'reset_question_variants') {\n      await resetVariantsForInstanceQuestion({\n        assessment_instance_id: res.locals.assessment_instance.id,\n        unsafe_instance_question_id: req.body.unsafe_instance_question_id,\n        authn_user_id: res.locals.authn_user.user_id,\n      });\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}