{"version":3,"file":"assessment.html.js","sourceRoot":"","sources":["../../../../src/pages/instructorAssessmentManualGrading/assessment/assessment.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { type HtmlValue, html, joinHtml } from '@prairielearn/html';\n\nimport { AssessmentOpenInstancesAlert } from '../../../components/AssessmentOpenInstancesAlert.html.js';\nimport { Modal } from '../../../components/Modal.html.js';\nimport { PageLayout } from '../../../components/PageLayout.html.js';\nimport { AssessmentSyncErrorsAndWarnings } from '../../../components/SyncErrorsAndWarnings.html.js';\nimport { compiledScriptTag } from '../../../lib/assets.js';\nimport { AssessmentQuestionSchema, type User } from '../../../lib/db-types.js';\nimport { idsEqual } from '../../../lib/id.js';\n\nexport const ManualGradingQuestionSchema = AssessmentQuestionSchema.extend({\n  qid: z.string(),\n  title: z.string(),\n  number: z.string().nullable(),\n  alternative_group_number: z.number(),\n  alternative_group_size: z.coerce.number(),\n  num_instance_questions: z.coerce.number(),\n  num_instance_questions_to_grade: z.coerce.number(),\n  num_instance_questions_assigned: z.coerce.number(),\n  num_instance_questions_unassigned: z.coerce.number(),\n  assigned_graders: z\n    .array(z.object({ user_id: z.number(), name: z.string().nullable(), uid: z.string() }))\n    .nullable(),\n  actual_graders: z\n    .array(z.object({ user_id: z.number(), name: z.string().nullable(), uid: z.string() }))\n    .nullable(),\n  num_open_instances: z.coerce.number(),\n});\nexport type ManualGradingQuestion = z.infer<typeof ManualGradingQuestionSchema>;\n\nexport function ManualGradingAssessment({\n  resLocals,\n  questions,\n  courseStaff,\n  num_open_instances,\n}: {\n  resLocals: Record<string, any>;\n  questions: ManualGradingQuestion[];\n  courseStaff: User[];\n  num_open_instances: number;\n}) {\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Manual Grading',\n    navContext: {\n      type: 'instructor',\n      page: 'assessment',\n      subPage: 'manual_grading',\n    },\n    options: {\n      fullWidth: true,\n    },\n    headContent: html`\n      ${compiledScriptTag('instructorAssessmentManualGradingAssessmentClient.ts')}\n    `,\n    preContent: html`\n      ${resLocals.authz_data.has_course_instance_permission_edit\n        ? GraderAssignmentModal({ courseStaff, csrfToken: resLocals.__csrf_token })\n        : ''}\n    `,\n    content: html`\n      ${AssessmentSyncErrorsAndWarnings({\n        authz_data: resLocals.authz_data,\n        assessment: resLocals.assessment,\n        courseInstance: resLocals.course_instance,\n        course: resLocals.course,\n        urlPrefix: resLocals.urlPrefix,\n      })}\n      ${AssessmentOpenInstancesAlert({\n        numOpenInstances: num_open_instances,\n        assessmentId: resLocals.assessment.id,\n        urlPrefix: resLocals.urlPrefix,\n      })}\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <h1>\n            ${resLocals.assessment_set.name} ${resLocals.assessment.number}: Manual Grading Queue\n          </h1>\n        </div>\n\n        <div class=\"table-responsive\">\n          <table\n            id=\"instanceQuestionGradingTable\"\n            class=\"table table-sm table-hover\"\n            aria-label=\"Questions for manual grading\"\n          >\n            <thead>\n              <tr>\n                <th>Question</th>\n                <th>QID</th>\n                <th>Auto Points</th>\n                <th>Manual Points</th>\n                <th colspan=\"2\">Submissions to grade</th>\n                <th>Grading assigned to</th>\n                <th>Graded by</th>\n                <th>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${questions.map((question) => AssessmentQuestionRow({ resLocals, question }))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    `,\n  });\n}\n\nfunction AssessmentQuestionRow({\n  resLocals,\n  question,\n}: {\n  resLocals: Record<string, any>;\n  question: ManualGradingQuestion;\n}) {\n  const showGradingButton =\n    resLocals.authz_data.has_course_instance_permission_edit &&\n    question.num_instance_questions_assigned + question.num_instance_questions_unassigned > 0;\n  const currentUserName = resLocals.authz_data.user.name ?? resLocals.authz_data.user.uid;\n  const assignedGraders: HtmlValue[] = (question.assigned_graders || [])\n    .filter((u) => !idsEqual(u.user_id, resLocals.authz_data.user.user_id))\n    .map((u) => u.name ?? u.uid);\n  if (question.num_instance_questions_assigned > 0) {\n    assignedGraders.unshift(\n      html`<strong class=\"bg-warning rounded px-1\">${currentUserName}</strong>`,\n    );\n  }\n  const gradingUrl = `${resLocals.urlPrefix}/assessment/${resLocals.assessment.id}/manual_grading/assessment_question/${question.id}`;\n\n  return html`\n    <tr>\n      <td class=\"align-middle\">\n        <a href=\"${gradingUrl}\">\n          ${question.alternative_group_number}.${question.alternative_group_size === 1\n            ? ''\n            : `${question.number_in_alternative_group}.`}\n          ${question.title}\n        </a>\n        ${question.manual_rubric_id == null\n          ? ''\n          : html`\n              <a\n                href=\"#\"\n                class=\"ms-2 text-info\"\n                data-bs-toggle=\"tooltip\"\n                data-bs-title=\"This question uses a rubric\"\n              >\n                <i class=\"fas fa-list-check\"></i><span class=\"visually-hidden\">(uses rubric)</span>\n              </a>\n            `}\n      </td>\n      <td class=\"align-middle\">${question.qid}</td>\n      <td class=\"text-center align-middle\">\n        ${question.max_auto_points\n          ? resLocals.assessment.type === 'Exam'\n            ? (question.points_list || [question.max_manual_points ?? 0])\n                .map((p) => p - (question.max_manual_points ?? 0))\n                .join(',')\n            : (question.init_points ?? 0) - (question.max_manual_points ?? 0)\n          : '—'}\n      </td>\n      <td class=\"text-center align-middle\">${question.max_manual_points || '—'}</td>\n      <td class=\"text-center align-middle\" data-testid=\"iq-to-grade-count\">\n        ${question.num_instance_questions_to_grade} / ${question.num_instance_questions}\n      </td>\n      <td class=\"align-middle\">\n        ${ProgressBar(question.num_instance_questions_to_grade, question.num_instance_questions)}\n      </td>\n      <td class=\"align-middle\">\n        ${joinHtml(assignedGraders, ', ')}\n        ${question.num_instance_questions_unassigned > 0\n          ? html`\n              <small class=\"text-muted\">\n                (${question.num_instance_questions_unassigned} unassigned)\n              </small>\n              ${resLocals.authz_data.has_course_instance_permission_edit\n                ? html`\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-sm btn-ghost\"\n                      data-bs-toggle=\"modal\"\n                      data-bs-target=\"#grader-assignment-modal\"\n                      data-assessment-question-id=\"${question.id}\"\n                    >\n                      <i class=\"fas fa-pencil\"></i\n                      ><span class=\"visually-hidden\">Assign to&hellip;</span>\n                    </button>\n                  `\n                : ''}\n            `\n          : ''}\n      </td>\n      <td class=\"align-middle\">\n        ${(question.actual_graders || []).map((u) => u.name ?? u.uid).join(', ')}\n      </td>\n      <td class=\"align-middle\">\n        ${showGradingButton\n          ? html`\n              <a class=\"btn btn-xs btn-primary\" href=\"${gradingUrl}/next_ungraded\">\n                Grade next submission\n              </a>\n            `\n          : ''}\n      </td>\n    </tr>\n  `;\n}\n\nfunction ProgressBar(partial: number | null, total: number | null) {\n  if (total == null || total <= 0) return '';\n  const progress = Math.floor(100 * (1 - (partial ?? 0) / total));\n  return html`\n    <div class=\"progress border\" style=\"min-width: 4em; max-width: 10em;\">\n      <div class=\"progress-bar bg-light\" style=\"width: ${progress}%\"></div>\n      <div class=\"progress-bar bg-danger\" style=\"width: ${100 - progress}%\"></div>\n    </div>\n  `;\n}\n\nfunction GraderAssignmentModal({\n  csrfToken,\n  courseStaff,\n}: {\n  csrfToken: string;\n  courseStaff: User[];\n}) {\n  return Modal({\n    id: 'grader-assignment-modal',\n    title: 'Assign instances to graders',\n    body:\n      courseStaff.length > 0\n        ? html`\n            <p>Assign instances to the following graders:</p>\n            ${courseStaff.map(\n              (staff) => html`\n                <div class=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"grader-assignment-${staff.user_id}\"\n                    name=\"assigned_grader\"\n                    value=\"${staff.user_id}\"\n                    class=\"form-check-input\"\n                  />\n                  <label class=\"form-check-label\" for=\"grader-assignment-${staff.user_id}\">\n                    ${staff.name ? `${staff.name} (${staff.uid})` : staff.uid}\n                  </label>\n                </div>\n              `,\n            )}\n            <div class=\"mt-3 mb-0 small alert alert-info\">\n              Only instances that require grading and are not yet assigned to a grader will be\n              affected. If more than one grader is selected, the instances will be randomly split\n              between the graders.\n            </div>\n          `\n        : html`<p>\n            There are currently no staff members with Editor permission assigned to this course\n            instance.\n          </p>`,\n    footer: html`\n      <input type=\"hidden\" name=\"unsafe_assessment_question_id\" value=\"\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <input type=\"hidden\" name=\"__action\" value=\"assign_graders\" />\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n      <button type=\"submit\" class=\"btn btn-primary\" ${courseStaff.length === 0 ? 'disabled' : ''}>\n        Assign\n      </button>\n    `,\n  });\n}\n"]}