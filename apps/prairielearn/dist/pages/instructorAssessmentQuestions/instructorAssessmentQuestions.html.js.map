{"version":3,"file":"instructorAssessmentQuestions.html.js","sourceRoot":"","sources":["../../../src/pages/instructorAssessmentQuestions/instructorAssessmentQuestions.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { html } from '@prairielearn/html';\nimport { run } from '@prairielearn/run';\n\nimport { AssessmentBadge } from '../../components/AssessmentBadge.html.js';\nimport {\n  AssessmentQuestionHeaders,\n  AssessmentQuestionNumber,\n} from '../../components/AssessmentQuestions.html.js';\nimport { IssueBadge } from '../../components/IssueBadge.html.js';\nimport { Modal } from '../../components/Modal.html.js';\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { AssessmentSyncErrorsAndWarnings } from '../../components/SyncErrorsAndWarnings.html.js';\nimport { SyncProblemButton } from '../../components/SyncProblemButton.html.js';\nimport { TagBadgeList } from '../../components/TagBadge.html.js';\nimport { TopicBadge } from '../../components/TopicBadge.html.js';\nimport { compiledScriptTag } from '../../lib/assets.js';\nimport type { Course } from '../../lib/db-types.js';\nimport { idsEqual } from '../../lib/id.js';\nimport type { AssessmentQuestionRow } from '../../models/assessment-question.js';\n\nexport function InstructorAssessmentQuestions({\n  resLocals,\n  questions,\n}: {\n  resLocals: Record<string, any>;\n  questions: AssessmentQuestionRow[];\n}) {\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Questions',\n    headContent: [compiledScriptTag('instructorAssessmentQuestionsClient.ts')],\n    navContext: {\n      type: 'instructor',\n      page: 'assessment',\n      subPage: 'questions',\n    },\n    options: {\n      fullWidth: true,\n    },\n    content: html`\n      ${AssessmentSyncErrorsAndWarnings({\n        authz_data: resLocals.authz_data,\n        assessment: resLocals.assessment,\n        courseInstance: resLocals.course_instance,\n        course: resLocals.course,\n        urlPrefix: resLocals.urlPrefix,\n      })}\n\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n          <h1>${resLocals.assessment_set.name} ${resLocals.assessment.number}: Questions</h1>\n        </div>\n        ${AssessmentQuestionsTable({\n          course: resLocals.course,\n          questions,\n          assessmentType: resLocals.assessment.type,\n          urlPrefix: resLocals.urlPrefix,\n          hasCoursePermissionPreview: resLocals.authz_data.has_course_permission_preview,\n          hasCourseInstancePermissionEdit: resLocals.authz_data.has_course_instance_permission_edit,\n        })}\n      </div>\n    `,\n    postContent: html`\n      ${Modal({\n        id: 'resetQuestionVariantsModal',\n        title: 'Confirm reset question variants',\n        body: html`\n          <p>\n            Are your sure you want to reset all current variants of this question?\n            <strong>All ungraded attempts will be lost.</strong>\n          </p>\n          <p>Students will receive a new variant the next time they view this question.</p>\n        `,\n        footer: html`\n          <input type=\"hidden\" name=\"__action\" value=\"reset_question_variants\" />\n          <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n          <input\n            type=\"hidden\"\n            name=\"unsafe_assessment_question_id\"\n            class=\"js-assessment-question-id\"\n            value=\"\"\n          />\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n          <button type=\"submit\" class=\"btn btn-danger\">Reset question variants</button>\n        `,\n      })}\n    `,\n  });\n}\n\nfunction AssessmentQuestionsTable({\n  course,\n  questions,\n  urlPrefix,\n  assessmentType,\n  hasCoursePermissionPreview,\n  hasCourseInstancePermissionEdit,\n}: {\n  course: Course;\n  questions: AssessmentQuestionRow[];\n  assessmentType: string;\n  urlPrefix: string;\n  hasCoursePermissionPreview: boolean;\n  hasCourseInstancePermissionEdit: boolean;\n}) {\n  // If at least one question has a nonzero unlock score, display the Advance Score column\n  const showAdvanceScorePercCol =\n    questions.filter((q) => q.assessment_question_advance_score_perc !== 0).length >= 1;\n\n  const nTableCols = showAdvanceScorePercCol ? 12 : 11;\n\n  function maxPoints({ max_auto_points, max_manual_points, points_list, init_points }) {\n    if (max_auto_points || !max_manual_points) {\n      if (assessmentType === 'Exam') {\n        return (points_list || [max_manual_points]).map((p) => p - max_manual_points).join(',');\n      }\n      if (assessmentType === 'Homework') {\n        return `${init_points - max_manual_points}/${max_auto_points}`;\n      }\n    } else {\n      return html`&mdash;`;\n    }\n  }\n\n  return html`\n    <div class=\"table-responsive\">\n      <table class=\"table table-sm table-hover\" aria-label=\"Assessment questions\">\n        <thead>\n          <tr>\n            <th><span class=\"visually-hidden\">Name</span></th>\n            <th>QID</th>\n            <th>Topic</th>\n            <th>Tags</th>\n            <th>Auto Points</th>\n            <th>Manual Points</th>\n            ${showAdvanceScorePercCol ? html`<th>Advance Score</th>` : ''}\n            <th>Mean score</th>\n            <th>Num. Submissions Histogram</th>\n            <th>Other Assessments</th>\n            <th class=\"text-right\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${questions.map((question) => {\n            return html`\n              ${AssessmentQuestionHeaders(question, nTableCols)}\n              <tr>\n                <td>\n                  ${run(() => {\n                    const number = AssessmentQuestionNumber(question);\n                    const issueBadge = IssueBadge({\n                      urlPrefix,\n                      count: question.open_issue_count ?? 0,\n                      issueQid: question.qid,\n                    });\n                    const title = html`${number} ${question.title} ${issueBadge}`;\n\n                    if (hasCoursePermissionPreview) {\n                      return html`<a href=\"${urlPrefix}/question/${question.question_id}/\"\n                        >${title}</a\n                      >`;\n                    }\n\n                    return title;\n                  })}\n                </td>\n                <td>\n                  ${question.sync_errors\n                    ? SyncProblemButton({\n                        type: 'error',\n                        output: question.sync_errors,\n                      })\n                    : question.sync_warnings\n                      ? SyncProblemButton({\n                          type: 'warning',\n                          output: question.sync_warnings,\n                        })\n                      : ''}\n                  ${idsEqual(course.id, question.course_id)\n                    ? question.qid\n                    : `@${question.course_sharing_name}/${question.qid}`}\n                </td>\n                <td>${TopicBadge(question.topic)}</td>\n                <td>${TagBadgeList(question.tags)}</td>\n                <td>\n                  ${maxPoints({\n                    max_auto_points: question.max_auto_points,\n                    max_manual_points: question.max_manual_points,\n                    points_list: question.points_list,\n                    init_points: question.init_points,\n                  })}\n                </td>\n                <td>${question.max_manual_points || '—'}</td>\n                ${showAdvanceScorePercCol\n                  ? html`\n                      <td\n                        class=\"${question.assessment_question_advance_score_perc === 0\n                          ? 'text-muted'\n                          : ''}\"\n                        data-testid=\"advance-score-perc\"\n                      >\n                        ${question.assessment_question_advance_score_perc}%\n                      </td>\n                    `\n                  : ''}\n                <td>\n                  ${question.mean_question_score\n                    ? `${question.mean_question_score.toFixed(3)} %`\n                    : ''}\n                </td>\n                <td class=\"text-center\">\n                  ${question.number_submissions_hist\n                    ? html`\n                        <div\n                          class=\"js-histmini\"\n                          data-data=\"${JSON.stringify(question.number_submissions_hist)}\"\n                          data-options=\"${JSON.stringify({ width: 60, height: 20 })}\"\n                        ></div>\n                      `\n                    : ''}\n                </td>\n                <td>\n                  ${question.other_assessments?.map((assessment) =>\n                    AssessmentBadge({ urlPrefix, assessment }),\n                  )}\n                </td>\n                <td class=\"text-right\">\n                  <div class=\"dropdown js-question-actions\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-secondary btn-xs dropdown-toggle\"\n                      data-bs-toggle=\"dropdown\"\n                      aria-haspopup=\"true\"\n                      aria-expanded=\"false\"\n                    >\n                      Action <span class=\"caret\"></span>\n                    </button>\n\n                    <div class=\"dropdown-menu\">\n                      ${hasCourseInstancePermissionEdit\n                        ? html`\n                            <button\n                              type=\"button\"\n                              class=\"dropdown-item\"\n                              data-bs-toggle=\"modal\"\n                              data-bs-target=\"#resetQuestionVariantsModal\"\n                              data-assessment-question-id=\"${question.id}\"\n                            >\n                              Reset question variants\n                            </button>\n                          `\n                        : html`\n                            <button type=\"button\" class=\"dropdown-item disabled\" disabled>\n                              Must have editor permission\n                            </button>\n                          `}\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            `;\n          })}\n        </tbody>\n      </table>\n    </div>\n  `;\n}\n"]}