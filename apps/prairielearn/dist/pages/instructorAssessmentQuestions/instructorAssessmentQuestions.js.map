{"version":3,"file":"instructorAssessmentQuestions.js","sourceRoot":"","sources":["../../../src/pages/instructorAssessmentQuestions/instructorAssessmentQuestions.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,yBAAyB,EAAE,MAAM,qCAAqC,CAAC;AAChF,OAAO,EAAE,kCAAkC,EAAE,MAAM,yBAAyB,CAAC;AAE7E,OAAO,EAAE,6BAA6B,EAAE,MAAM,yCAAyC,CAAC;AAExF,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,SAAS,GAAG,MAAM,yBAAyB,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC5E,GAAG,CAAC,IAAI,CAAC,6BAA6B,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,IAAI,CACT,GAAG,EACH,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,KAAK,yBAAyB,EAAE,CAAC;QACpD,MAAM,kCAAkC,CAAC;YACvC,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;YACvC,6BAA6B,EAAE,GAAG,CAAC,IAAI,CAAC,6BAA6B;YACrE,aAAa,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;SAC7C,CAAC,CAAC;QACH,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,qBAAqB,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjF,CAAC;AACH,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\n\nimport { selectAssessmentQuestions } from '../../models/assessment-question.js';\nimport { resetVariantsForAssessmentQuestion } from '../../models/variant.js';\n\nimport { InstructorAssessmentQuestions } from './instructorAssessmentQuestions.html.js';\n\nconst router = express.Router();\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const questions = await selectAssessmentQuestions(res.locals.assessment.id);\n    res.send(InstructorAssessmentQuestions({ resLocals: res.locals, questions }));\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'reset_question_variants') {\n      await resetVariantsForAssessmentQuestion({\n        assessment_id: res.locals.assessment.id,\n        unsafe_assessment_question_id: req.body.unsafe_assessment_question_id,\n        authn_user_id: res.locals.authn_user.user_id,\n      });\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}