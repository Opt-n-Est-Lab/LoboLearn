{"version":3,"file":"instructorAssessmentSettings.js","sourceRoot":"","sources":["../../../src/pages/instructorAssessmentSettings/instructorAssessmentSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\n\nimport sha256 from 'crypto-js/sha256.js';\nimport * as express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport fs from 'fs-extra';\nimport { z } from 'zod';\n\nimport * as error from '@prairielearn/error';\nimport { flash } from '@prairielearn/flash';\nimport * as sqldb from '@prairielearn/postgres';\nimport { run } from '@prairielearn/run';\n\nimport { b64EncodeUnicode } from '../../lib/base64-util.js';\nimport { AssessmentModuleSchema, AssessmentSetSchema, IdSchema } from '../../lib/db-types.js';\nimport {\n  AssessmentCopyEditor,\n  AssessmentDeleteEditor,\n  AssessmentRenameEditor,\n  FileModifyEditor,\n  MultiEditor,\n  propertyValueWithDefault,\n} from '../../lib/editors.js';\nimport { httpPrefixForCourseRepo } from '../../lib/github.js';\nimport { getPaths } from '../../lib/instructorFiles.js';\nimport { formatJsonWithPrettier } from '../../lib/prettier.js';\nimport { encodePath } from '../../lib/uri-util.js';\nimport { getCanonicalHost } from '../../lib/url.js';\n\nimport { InstructorAssessmentSettings } from './instructorAssessmentSettings.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const tids = await sqldb.queryRows(\n      sql.tids,\n      { course_instance_id: res.locals.course_instance.id },\n      z.string(),\n    );\n    const assessmentSets = await sqldb.queryRows(\n      sql.select_assessment_sets,\n      { course_id: res.locals.course.id },\n      AssessmentSetSchema,\n    );\n    const assessmentModules = await sqldb.queryRows(\n      sql.select_assessment_modules,\n      { course_id: res.locals.course.id },\n      AssessmentModuleSchema,\n    );\n    const host = getCanonicalHost(req);\n    const studentLink = new URL(\n      `${res.locals.plainUrlPrefix}/course_instance/${res.locals.course_instance.id}/assessment/${res.locals.assessment.id}`,\n      host,\n    ).href;\n    const publicLink = new URL(\n      `${res.locals.plainUrlPrefix}/public/course_instance/${res.locals.course_instance.id}/assessment/${res.locals.assessment.id}/questions`,\n      host,\n    ).href;\n    const infoAssessmentPath = encodePath(\n      path.join(\n        'courseInstances',\n        res.locals.course_instance.short_name,\n        'assessments',\n        res.locals.assessment.tid,\n        'infoAssessment.json',\n      ),\n    );\n    const fullInfoAssessmentPath = path.join(res.locals.course.path, infoAssessmentPath);\n\n    const infoAssessmentPathExists = await fs.pathExists(fullInfoAssessmentPath);\n\n    let origHash = '';\n    if (infoAssessmentPathExists) {\n      origHash = sha256(\n        b64EncodeUnicode(await fs.readFile(fullInfoAssessmentPath, 'utf8')),\n      ).toString();\n    }\n\n    let assessmentGHLink: string | null = null;\n    if (res.locals.course.example_course) {\n      // The example course is not found at the root of its repository, so its path is hardcoded\n      assessmentGHLink = `https://github.com/PrairieLearn/PrairieLearn/tree/master/exampleCourse/courseInstances/${res.locals.course_instance.short_name}/assessments/${res.locals.assessment.tid}`;\n    } else if (res.locals.course.repository) {\n      const githubPrefix = httpPrefixForCourseRepo(res.locals.course.repository);\n      if (githubPrefix) {\n        assessmentGHLink = `${githubPrefix}/tree/${res.locals.course.branch}/courseInstances/${res.locals.course_instance.short_name}/assessments/${res.locals.assessment.tid}`;\n      }\n    }\n\n    const canEdit =\n      res.locals.authz_data.has_course_permission_edit && !res.locals.course.example_course;\n\n    res.send(\n      InstructorAssessmentSettings({\n        resLocals: res.locals,\n        origHash,\n        assessmentGHLink,\n        tids,\n        studentLink,\n        publicLink,\n        infoAssessmentPath,\n        assessmentSets,\n        assessmentModules,\n        canEdit,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'copy_assessment') {\n      const editor = new AssessmentCopyEditor({\n        locals: res.locals as any,\n      });\n      const serverJob = await editor.prepareServerJob();\n      try {\n        await editor.executeWithServerJob(serverJob);\n      } catch {\n        return res.redirect(res.locals.urlPrefix + '/edit_error/' + serverJob.jobSequenceId);\n      }\n\n      const assessmentId = await sqldb.queryRow(\n        sql.select_assessment_id_from_uuid,\n        { uuid: editor.uuid, course_instance_id: res.locals.course_instance.id },\n        IdSchema,\n      );\n\n      flash(\n        'success',\n        'Assessment copied successfully. You are now viewing your copy of the assessment.',\n      );\n      res.redirect(res.locals.urlPrefix + '/assessment/' + assessmentId + '/settings');\n    } else if (req.body.__action === 'delete_assessment') {\n      const editor = new AssessmentDeleteEditor({\n        locals: res.locals as any,\n      });\n      const serverJob = await editor.prepareServerJob();\n      try {\n        await editor.executeWithServerJob(serverJob);\n        res.redirect(res.locals.urlPrefix + '/instance_admin/assessments');\n      } catch {\n        res.redirect(res.locals.urlPrefix + '/edit_error/' + serverJob.jobSequenceId);\n      }\n    } else if (req.body.__action === 'update_assessment') {\n      const infoAssessmentPath = path.join(\n        res.locals.course.path,\n        'courseInstances',\n        res.locals.course_instance.short_name,\n        'assessments',\n        res.locals.assessment.tid,\n        'infoAssessment.json',\n      );\n      if (!(await fs.pathExists(infoAssessmentPath))) {\n        throw new error.HttpStatusError(400, 'infoAssessment.json does not exist');\n      }\n\n      if (!req.body.aid) {\n        throw new error.HttpStatusError(400, `Invalid TID (was falsy): ${req.body.aid}`);\n      }\n      if (!/^[-A-Za-z0-9_/]+$/.test(req.body.aid)) {\n        throw new error.HttpStatusError(\n          400,\n          `Invalid TID (was not only letters, numbers, dashes, slashes, and underscores, with no spaces): ${req.body.id}`,\n        );\n      }\n\n      const paths = getPaths(undefined, res.locals);\n\n      const assessmentInfo = JSON.parse(await fs.readFile(infoAssessmentPath, 'utf8'));\n      assessmentInfo.title = req.body.title;\n      assessmentInfo.set = req.body.set;\n      assessmentInfo.number = req.body.number;\n      if (assessmentInfo.module != null || req.body.module !== 'Default') {\n        assessmentInfo.module = req.body.module;\n      }\n      const normalizedText = req.body.text?.replace(/\\r\\n/g, '\\n');\n      assessmentInfo.text = propertyValueWithDefault(assessmentInfo.text, normalizedText, '');\n      assessmentInfo.allowIssueReporting = propertyValueWithDefault(\n        assessmentInfo.allowIssueReporting,\n        req.body.allow_issue_reporting === 'on',\n        true,\n      );\n      assessmentInfo.allowPersonalNotes = propertyValueWithDefault(\n        assessmentInfo.allowPersonalNotes,\n        req.body.allow_personal_notes === 'on',\n        true,\n      );\n      if (res.locals.assessment.type === 'Exam') {\n        assessmentInfo.multipleInstance = propertyValueWithDefault(\n          assessmentInfo.multipleInstance,\n          req.body.multiple_instance === 'on',\n          false,\n        );\n        assessmentInfo.autoClose = propertyValueWithDefault(\n          assessmentInfo.autoClose,\n          req.body.auto_close === 'on',\n          true,\n        );\n        assessmentInfo.requireHonorCode = propertyValueWithDefault(\n          assessmentInfo.requireHonorCode,\n          req.body.require_honor_code === 'on',\n          true,\n        );\n      }\n\n      const formattedJson = await formatJsonWithPrettier(JSON.stringify(assessmentInfo));\n\n      const tid_new = run(() => {\n        try {\n          return path.normalize(req.body.aid);\n        } catch {\n          throw new error.HttpStatusError(\n            400,\n            `Invalid TID (could not be normalized): ${req.body.aid}`,\n          );\n        }\n      });\n\n      const editor = new MultiEditor(\n        {\n          locals: res.locals as any,\n          // This won't reflect if the operation is an update or a rename; we think that's OK.\n          description: `${res.locals.course_instance.short_name}: Update assessment ${res.locals.assessment.tid}`,\n        },\n        [\n          // Each of these editors will no-op if there wasn't any change.\n          new FileModifyEditor({\n            locals: res.locals as any,\n            container: {\n              rootPath: paths.rootPath,\n              invalidRootPaths: paths.invalidRootPaths,\n            },\n            filePath: infoAssessmentPath,\n            editContents: b64EncodeUnicode(formattedJson),\n            origHash: req.body.orig_hash,\n          }),\n          new AssessmentRenameEditor({ locals: res.locals as any, tid_new }),\n        ],\n      );\n      const serverJob = await editor.prepareServerJob();\n      try {\n        await editor.executeWithServerJob(serverJob);\n      } catch {\n        return res.redirect(res.locals.urlPrefix + '/edit_error/' + serverJob.jobSequenceId);\n      }\n\n      flash('success', 'Assessment updated successfully');\n      return res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}