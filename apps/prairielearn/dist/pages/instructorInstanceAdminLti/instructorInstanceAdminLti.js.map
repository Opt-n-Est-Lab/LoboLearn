{"version":3,"file":"instructorInstanceAdminLti.js","sourceRoot":"","sources":["../../../src/pages/instructorInstanceAdminLti/instructorInstanceAdminLti.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { getCourseOwners } from '../../lib/course.js';\n\nimport { InstructorInstanceAdminLti } from './instructorInstanceAdminLti.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_permission_edit) {\n      res.locals.course_owners = await getCourseOwners(res.locals.course.id);\n      res.status(403).send(InstructorInstanceAdminLti({ resLocals: res.locals }));\n      return;\n    }\n\n    const result = await sqldb.queryAsync(sql.lti_data, {\n      course_instance_id: res.locals.course_instance.id,\n    });\n    Object.assign(res.locals, result.rows[0]);\n\n    res.send(InstructorInstanceAdminLti({ resLocals: res.locals }));\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_data.has_course_permission_edit) {\n      throw new error.HttpStatusError(403, 'Access denied (must be a course Editor)');\n    }\n\n    if (req.body.__action === 'lti_new_cred') {\n      await sqldb.queryAsync(sql.insert_cred, {\n        key: 'K' + randomString(),\n        secret: 'S' + randomString(),\n        course_instance_id: res.locals.course_instance.id,\n      });\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'lti_del_cred') {\n      await sqldb.queryAsync(sql.delete_cred, {\n        id: req.body.lti_link_id,\n        ci_id: res.locals.course_instance.id,\n      });\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'lti_link_target') {\n      await sqldb.queryAsync(sql.update_link, {\n        assessment_id: req.body.newAssessment || null,\n        id: req.body.lti_link_id,\n        ci_id: res.locals.course_instance.id,\n      });\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n\nfunction randomString() {\n  const len = 10;\n  return (\n    Math.random().toString(36).substring(2, len) + Math.random().toString(36).substring(2, len)\n  );\n}\n"]}