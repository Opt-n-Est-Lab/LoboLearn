{"version":3,"file":"instructorInstanceAdminSettings.js","sourceRoot":"","sources":["../../../src/pages/instructorInstanceAdminSettings/instructorInstanceAdminSettings.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\n\nimport sha256 from 'crypto-js/sha256.js';\nimport * as express from 'express';\nimport asyncHandler from 'express-async-handler';\nimport fs from 'fs-extra';\nimport { z } from 'zod';\n\nimport * as error from '@prairielearn/error';\nimport { flash } from '@prairielearn/flash';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { b64EncodeUnicode } from '../../lib/base64-util.js';\nimport { IdSchema } from '../../lib/db-types.js';\nimport {\n  CourseInstanceCopyEditor,\n  CourseInstanceDeleteEditor,\n  CourseInstanceRenameEditor,\n  FileModifyEditor,\n  MultiEditor,\n  propertyValueWithDefault,\n} from '../../lib/editors.js';\nimport { getPaths } from '../../lib/instructorFiles.js';\nimport { formatJsonWithPrettier } from '../../lib/prettier.js';\nimport { getCanonicalTimezones } from '../../lib/timezones.js';\nimport { getCanonicalHost } from '../../lib/url.js';\n\nimport { InstructorInstanceAdminSettings } from './instructorInstanceAdminSettings.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    const shortNames = await sqldb.queryRows(\n      sql.short_names,\n      { course_id: res.locals.course.id },\n      z.string(),\n    );\n    const host = getCanonicalHost(req);\n    const studentLink = new URL(\n      `${res.locals.plainUrlPrefix}/course_instance/${res.locals.course_instance.id}`,\n      host,\n    ).href;\n    const availableTimezones = await getCanonicalTimezones([\n      res.locals.course_instance.display_timezone,\n    ]);\n\n    const infoCourseInstancePath = path.join(\n      'courseInstances',\n      res.locals.course_instance.short_name,\n      'infoCourseInstance.json',\n    );\n    const fullInfoCourseInstancePath = path.join(res.locals.course.path, infoCourseInstancePath);\n    const infoCourseInfoPathExists = await fs.pathExists(fullInfoCourseInstancePath);\n    let origHash = '';\n    if (infoCourseInfoPathExists) {\n      origHash = sha256(\n        b64EncodeUnicode(await fs.readFile(fullInfoCourseInstancePath, 'utf8')),\n      ).toString();\n    }\n    const canEdit =\n      res.locals.authz_data.has_course_permission_edit && !res.locals.course.example_course;\n\n    res.send(\n      InstructorInstanceAdminSettings({\n        resLocals: res.locals,\n        shortNames,\n        studentLink,\n        infoCourseInstancePath,\n        availableTimezones,\n        origHash,\n        canEdit,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'copy_course_instance') {\n      const editor = new CourseInstanceCopyEditor({\n        locals: res.locals as any,\n      });\n\n      const serverJob = await editor.prepareServerJob();\n      try {\n        await editor.executeWithServerJob(serverJob);\n      } catch {\n        res.redirect(res.locals.urlPrefix + '/edit_error/' + serverJob.jobSequenceId);\n        return;\n      }\n\n      const courseInstanceID = await sqldb.queryRow(\n        sql.select_course_instance_id_from_uuid,\n        { uuid: editor.uuid, course_id: res.locals.course.id },\n        IdSchema,\n      );\n\n      flash(\n        'success',\n        'Course instance copied successfully. You are new viewing your copy of the course instance.',\n      );\n      res.redirect(\n        res.locals.plainUrlPrefix +\n          '/course_instance/' +\n          courseInstanceID +\n          '/instructor/instance_admin/settings',\n      );\n    } else if (req.body.__action === 'delete_course_instance') {\n      const editor = new CourseInstanceDeleteEditor({\n        locals: res.locals as any,\n      });\n\n      const serverJob = await editor.prepareServerJob();\n      try {\n        await editor.executeWithServerJob(serverJob);\n        res.redirect(\n          `${res.locals.plainUrlPrefix}/course/${res.locals.course.id}/course_admin/instances`,\n        );\n      } catch {\n        res.redirect(res.locals.urlPrefix + '/edit_error/' + serverJob.jobSequenceId);\n      }\n    } else if (req.body.__action === 'update_configuration') {\n      const infoCourseInstancePath = path.join(\n        res.locals.course.path,\n        'courseInstances',\n        res.locals.course_instance.short_name,\n        'infoCourseInstance.json',\n      );\n\n      if (!(await fs.pathExists(infoCourseInstancePath))) {\n        throw new error.HttpStatusError(400, 'infoCourseInstance.json does not exist');\n      }\n      if (!req.body.ciid) {\n        throw new error.HttpStatusError(400, `Invalid CIID (was falsy): ${req.body.ciid}`);\n      }\n      if (!/^[-A-Za-z0-9_/]+$/.test(req.body.ciid)) {\n        throw new error.HttpStatusError(\n          400,\n          `Invalid CIID (was not only letters, numbers, dashes, slashes, and underscores, with no spaces): ${req.body.ciid}`,\n        );\n      }\n\n      const paths = getPaths(undefined, res.locals);\n\n      const courseInstanceInfo = JSON.parse(await fs.readFile(infoCourseInstancePath, 'utf8'));\n      courseInstanceInfo.longName = req.body.long_name;\n      courseInstanceInfo.timezone = propertyValueWithDefault(\n        courseInstanceInfo.timezone,\n        req.body.display_timezone,\n        res.locals.course.display_timezone,\n      );\n      courseInstanceInfo.groupAssessmentsBy = propertyValueWithDefault(\n        courseInstanceInfo.groupAssessmentsBy,\n        req.body.group_assessments_by,\n        'Set',\n      );\n      courseInstanceInfo.hideInEnrollPage = propertyValueWithDefault(\n        courseInstanceInfo.hideInEnrollPage,\n        req.body.hide_in_enroll_page === 'on',\n        false,\n      );\n      const formattedJson = await formatJsonWithPrettier(JSON.stringify(courseInstanceInfo));\n\n      let ciid_new;\n      try {\n        ciid_new = path.normalize(req.body.ciid);\n      } catch {\n        throw new error.HttpStatusError(\n          400,\n          `Invalid CIID (could not be normalized): ${req.body.ciid}`,\n        );\n      }\n      const editor = new MultiEditor(\n        {\n          locals: res.locals as any,\n          description: `Update course instance: ${res.locals.course_instance.short_name}`,\n        },\n        [\n          new FileModifyEditor({\n            locals: res.locals as any,\n            container: {\n              rootPath: paths.rootPath,\n              invalidRootPaths: paths.invalidRootPaths,\n            },\n            filePath: infoCourseInstancePath,\n            editContents: b64EncodeUnicode(formattedJson),\n            origHash: req.body.orig_hash,\n          }),\n          new CourseInstanceRenameEditor({\n            locals: res.locals as any,\n            ciid_new,\n          }),\n        ],\n      );\n\n      const serverJob = await editor.prepareServerJob();\n      try {\n        await editor.executeWithServerJob(serverJob);\n      } catch {\n        return res.redirect(res.locals.urlPrefix + '/edit_error/' + serverJob.jobSequenceId);\n      }\n      flash('success', 'Course instance configuration updated successfully');\n      res.redirect(req.originalUrl);\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}