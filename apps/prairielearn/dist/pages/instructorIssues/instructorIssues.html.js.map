{"version":3,"file":"instructorIssues.html.js","sourceRoot":"","sources":["../../../src/pages/instructorIssues/instructorIssues.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,UAAU,CAAC;AAC1C,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;AACrD,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAEpD,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAC3E,OAAO,EAAE,KAAK,EAAE,MAAM,gCAAgC,CAAC;AACvD,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAE,KAAK,EAAE,MAAM,gCAAgC,CAAC;AACvD,OAAO,EAAE,2BAA2B,EAAE,MAAM,gDAAgD,CAAC;AAC7F,OAAO,EAAE,qBAAqB,EAAE,MAAM,qBAAqB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EACL,mBAAmB,EACnB,oBAAoB,EACpB,QAAQ,EAER,WAAW,EACX,cAAc,EACd,UAAU,EACV,aAAa,GACd,MAAM,uBAAuB,CAAC;AAE/B,MAAM,CAAC,MAAM,SAAS,GAAG,GAAG,CAAC;AAE7B,MAAM,CAAC,MAAM,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;IAC/C,0BAA0B,EAAE,oBAAoB,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE;IAC5E,kBAAkB,EAAE,QAAQ,CAAC,QAAQ,EAAE;IACvC,gBAAgB,EAAE,oBAAoB,CAAC,KAAK,CAAC,gBAAgB;IAC7D,aAAa,EAAE,QAAQ,CAAC,QAAQ,EAAE;IAClC,UAAU,EAAE,CAAC;SACV,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,mBAAmB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC9F,QAAQ,EAAE;IACb,sBAAsB,EAAE,QAAQ,CAAC,QAAQ,EAAE;IAC3C,YAAY,EAAE,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE;IACjD,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;IAC3C,UAAU,EAAE,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE;IAC7C,QAAQ,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE;IACzC,YAAY,EAAE,aAAa,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE;IACzD,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE;CACxB,CAAC,CAAC;AAOH,MAAM,aAAa,GAAG;IACpB,YAAY,EAAE,SAAS;IACvB,cAAc,EAAE,WAAW;IAC3B,wBAAwB,EAAE,sBAAsB;IAChD,6BAA6B,EAAE,2BAA2B;CAC3D,CAAC;AAEF,MAAM,sBAAsB,GAAG,MAAM,CAAC,WAAW,CAC/C,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,MAAM,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAC9F,CAAC;AAEF,MAAM,UAAU,gBAAgB,CAAC,EAC/B,SAAS,EACT,MAAM,EACN,WAAW,EACX,uBAAuB,EACvB,SAAS,EACT,WAAW,EACX,UAAU,GASX;IACC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE,GAAG,SAAS,CAAC;IAClE,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE,WAAW,IAAI,CAAC,CAAC;IAE/C,OAAO,UAAU,CAAC;QAChB,SAAS;QACT,SAAS,EAAE,QAAQ;QACnB,UAAU,EAAE;YACV,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,cAAc;YACpB,OAAO,EAAE,QAAQ;SAClB;QACD,OAAO,EAAE;YACP,SAAS,EAAE,IAAI;SAChB;QACD,WAAW,EAAE,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,CAAC;QAC5D,OAAO,EAAE,IAAI,CAAA;QACT,2BAA2B,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;QAC9D,UAAU,CAAC,0BAA0B;YACrC,CAAC,CAAC,wBAAwB,CAAC;gBACvB,uBAAuB;gBACvB,MAAM;gBACN,SAAS,EAAE,YAAY;aACxB,CAAC;YACJ,CAAC,CAAC,EAAE;QACJ,eAAe,EAAE;;;;;;;;2BAQE,sBAAsB,CAAC,YAAY;6DACD,SAAS;;2BAE3C,sBAAsB,CAAC,cAAc;uDACT,WAAW;;;;cAIpD,UAAU,CAAC,0BAA0B,IAAI,uBAAuB,GAAG,CAAC;YACpE,CAAC,CAAC,IAAI,CAAA;;;;;;;;iBAQH;YACH,CAAC,CAAC,EAAE;;;;;;;;;;;;;;iDAc+B,sBAAsB,CAAC,YAAY;;;iDAGnC,sBAAsB,CAAC,cAAc;;;iDAGrC,sBAAsB,CAAC,wBAAwB;;;;;0BAKtE,sBAAsB,CAAC,6BAA6B;;;;;;;;;yBASrD,WAAW;;;;;;;;;;;;;wBAaZ,SAAS;;;;;;;;;;;;;;;;;;;UAmBvB,MAAM,CAAC,MAAM,KAAK,CAAC;YACnB,CAAC,CAAC,IAAI,CAAA;;;;aAIH;YACH,CAAC,CAAC,IAAI,CAAA;;kBAEE,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,CACnB,QAAQ,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC,CACzE;;aAEJ;UACH,UAAU,GAAG,SAAS;YACtB,CAAC,CAAC,IAAI,CAAA;;kBAEE,KAAK,CAAC;gBACN,gBAAgB,EAAE,KAAK,kBAAkB,CAAC,WAAW,CAAC,EAAE;gBACxD,UAAU;gBACV,KAAK,EAAE,UAAU;gBACjB,QAAQ,EAAE,SAAS;aACpB,CAAC;;aAEL;YACH,CAAC,CAAC,EAAE;;KAET;KACF,CAAC,CAAC;AACL,CAAC;AAED,SAAS,QAAQ,CAAC,EAChB,KAAK,EACL,SAAS,EACT,UAAU,EACV,SAAS,GAMV;IACC,MAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC;IACxC,MAAM,UAAU,GAAG,UACjB,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,QAAQ,IAAI,GACxC,iDAAiD,kBAAkB,CACjE,SAAS,KAAK,CAAC,SAAS,oCAAoC,KAAK,CAAC,eAAe,IAAI,GAAG,eAAe,CACxG,EAAE,CAAC;IACJ,MAAM,kBAAkB,GAAG,GAAG,SAAS,aAAa,KAAK,CAAC,WAAW,GAAG,CAAC;IACzE,MAAM,cAAc,GAAG,GAAG,cAAc,oBAAoB,KAAK,CAAC,kBAAkB,sBAAsB,KAAK,CAAC,oBAAoB,gBAAgB,KAAK,CAAC,UAAU,EAAE,CAAC;IACvK,MAAM,gBAAgB,GAAG,GAAG,cAAc,oBAAoB,KAAK,CAAC,kBAAkB,0BAA0B,KAAK,CAAC,aAAa,qCAAqC,KAAK,CAAC,oBAAoB,EAAE,CAAC;IACrM,MAAM,qBAAqB,GAAG,GAAG,cAAc,oBAAoB,KAAK,CAAC,kBAAkB,mCAAmC,KAAK,CAAC,sBAAsB,EAAE,CAAC;IAE7J,OAAO,IAAI,CAAA;;;UAGH,KAAK,CAAC,IAAI;QACV,CAAC,CAAC,IAAI,CAAA,wEAAwE;QAC9E,CAAC,CAAC,IAAI,CAAA,mEAAmE;;oBAE/D,KAAK,CAAC,YAAY;YAC1B,CAAC,KAAK,CAAC,oBAAoB,CAAC,kFAAkF;QAC9G,CAAC,CAAC,IAAI,CAAA;4BACU,kBAAkB,eAAe,KAAK,CAAC,UAAU;eAC9D;QACH,CAAC,CAAC,KAAK,CAAC,QAAQ;YACd,CAAC,CAAC,IAAI,CAAA;8BACU,kBAAkB,eAAe,KAAK,CAAC,UAAU;gCAC/C,cAAc;6BACjB,gBAAgB;6BAChB,qBAAqB;iBACjC;YACH,CAAC,CAAC,IAAI,CAAA;8BACU,kBAAkB,iBAAiB,KAAK,CAAC,YAAY;;;;;;;;8EAQL,KAAK,CAAC,0BAA0B,sDAAsD,KAAK,CAAC,0BAA0B;;;;iBAInL;;0BAES,mBAAmB,CAAC,KAAK,CAAC;;aAEvC,KAAK,CAAC,EAAE;YACT,KAAK,CAAC,IAAI;QACV,CAAC,CAAC,IAAI,CAAA;+BACa,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,gBAAgB,CAAC;oBACzD,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;;eAEhE;QACH,CAAC,CAAC,EAAE;YACJ,KAAK,CAAC,QAAQ;QACd,CAAC,CAAC,IAAI,CAAA;kBACA,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,IAAI,GAAG;0BACxD,UAAU;qBACf,KAAK,CAAC,QAAQ,IAAI,GAAG;;eAE3B;QACH,CAAC,CAAC,EAAE;;UAEN,KAAK,CAAC,iBAAiB;QACvB,CAAC,CAAC,IAAI,CAAA,2DAA2D;QACjE,CAAC,CAAC,IAAI,CAAA,mEAAmE;UACzE,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,kBAAkB;QAC5C,CAAC,CAAC,eAAe,CAAC;YACd,cAAc;YACd,kBAAkB,EAAE,KAAK,CAAC,kBAAkB;YAC5C,QAAQ,EAAE,KAAK,CAAC,kBAAkB;YAClC,UAAU,EAAE,KAAK,CAAC,UAAU;SAC7B,CAAC;QACJ,CAAC,CAAC,EAAE;UACJ,KAAK,CAAC,0BAA0B;QAChC,CAAC,CAAC,IAAI,CAAA,oCAAoC,KAAK,CAAC,0BAA0B,SAAS;QACnF,CAAC,CAAC,EAAE;;QAEN,UAAU,CAAC,0BAA0B;QACrC,CAAC,CAAC,IAAI,CAAA,6BAA6B,iBAAiB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,QAAQ;QAClF,CAAC,CAAC,EAAE;;GAET,CAAC;AACJ,CAAC;AAED,SAAS,mBAAmB,CAAC,KAAY;IACvC,IAAI,CAAC,KAAK,CAAC,eAAe;QAAE,OAAO,IAAI,CAAA,SAAS,CAAC;IAEjD,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,CAAA,QAAQ,CAAC,CAAC;IAChF,OAAO,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAA,IAAI,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;AAChE,CAAC;AAED,SAAS,wBAAwB,CAAC,EAChC,uBAAuB,EACvB,MAAM,EACN,SAAS,GAKV;IACC,OAAO,KAAK,CAAC;QACX,EAAE,EAAE,0BAA0B;QAC9B,KAAK,EAAE,uBAAuB;QAC9B,IAAI,EAAE,IAAI,CAAA;;;kBAGI,uBAAuB;UAC/B,uBAAuB,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ;;KAEvD;QACD,MAAM,EAAE,IAAI,CAAA;;wDAEwC,SAAS;;;;iBAIhD,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;;;;KAIrD;KACF,CAAC,CAAC;AACL,CAAC;AAED,SAAS,eAAe;IACtB,OAAO,KAAK,CAAC;QACX,EAAE,EAAE,iBAAiB;QACrB,KAAK,EAAE,aAAa;QACpB,IAAI,EAAE,KAAK;QACX,IAAI,EAAE,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAuFT;QACD,MAAM,EAAE,IAAI,CAAA;;cAEF;KACX,CAAC,CAAC;AACL,CAAC;AAED,SAAS,iBAAiB,CAAC,EAAE,KAAK,EAAE,SAAS,EAAuC;IAClF,OAAO,IAAI,CAAA;;wDAE2C,SAAS;oDACb,KAAK,CAAC,EAAE;;UAElD,KAAK,CAAC,IAAI;QACV,CAAC,CAAC,IAAI,CAAA;;;;;;;;;;;;aAYH;QACH,CAAC,CAAC,IAAI,CAAA;;;;;;;;;;;;aAYH;;;GAGV,CAAC;AACJ,CAAC","sourcesContent":["import { formatDistance } from 'date-fns';\nimport { z } from 'zod';\n\nimport { formatDate } from '@prairielearn/formatter';\nimport { html, joinHtml } from '@prairielearn/html';\n\nimport { AssessmentBadge } from '../../components/AssessmentBadge.html.js';\nimport { Modal } from '../../components/Modal.html.js';\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { Pager } from '../../components/Pager.html.js';\nimport { CourseSyncErrorsAndWarnings } from '../../components/SyncErrorsAndWarnings.html.js';\nimport { compiledStylesheetTag } from '../../lib/assets.js';\nimport { config } from '../../lib/config.js';\nimport {\n  AssessmentSetSchema,\n  CourseInstanceSchema,\n  IdSchema,\n  type Issue,\n  IssueSchema,\n  QuestionSchema,\n  UserSchema,\n  VariantSchema,\n} from '../../lib/db-types.js';\n\nexport const PAGE_SIZE = 100;\n\nexport const IssueRowSchema = IssueSchema.extend({\n  course_instance_short_name: CourseInstanceSchema.shape.short_name.nullable(),\n  course_instance_id: IdSchema.nullable(),\n  display_timezone: CourseInstanceSchema.shape.display_timezone,\n  assessment_id: IdSchema.nullable(),\n  assessment: z\n    .object({ label: z.string(), assessment_id: IdSchema, color: AssessmentSetSchema.shape.color })\n    .nullable(),\n  assessment_instance_id: IdSchema.nullable(),\n  question_qid: QuestionSchema.shape.qid.nullable(),\n  user_name: UserSchema.shape.name.nullable(),\n  user_email: UserSchema.shape.email.nullable(),\n  user_uid: UserSchema.shape.uid.nullable(),\n  variant_seed: VariantSchema.shape.variant_seed.nullable(),\n  issue_count: z.number(),\n});\nexport type IssueRow = z.infer<typeof IssueRowSchema>;\ntype IssueComputedRow = IssueRow & {\n  showUser: boolean;\n  hideAssessmentLink: boolean;\n};\n\nconst commonQueries = {\n  allOpenQuery: 'is:open',\n  allClosedQuery: 'is:closed',\n  allManuallyReportedQuery: 'is:manually-reported',\n  allAutomaticallyReportedQuery: 'is:automatically-reported',\n};\n\nconst formattedCommonQueries = Object.fromEntries(\n  Object.entries(commonQueries).map(([key, value]) => [key, `?q=${encodeURIComponent(value)}`]),\n);\n\nexport function InstructorIssues({\n  resLocals,\n  issues,\n  filterQuery,\n  openFilteredIssuesCount,\n  openCount,\n  closedCount,\n  chosenPage,\n}: {\n  resLocals: Record<string, any>;\n  issues: IssueComputedRow[];\n  filterQuery: string;\n  openFilteredIssuesCount: number;\n  openCount: number;\n  closedCount: number;\n  chosenPage: number;\n}) {\n  const { authz_data, __csrf_token, urlPrefix, course } = resLocals;\n  const issueCount = issues[0]?.issue_count ?? 0;\n\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Issues',\n    navContext: {\n      type: 'instructor',\n      page: 'course_admin',\n      subPage: 'issues',\n    },\n    options: {\n      fullWidth: true,\n    },\n    headContent: [compiledStylesheetTag('instructorIssues.css')],\n    content: html`\n      ${CourseSyncErrorsAndWarnings({ authz_data, course, urlPrefix })}\n      ${authz_data.has_course_permission_edit\n        ? CloseMatchingIssuesModal({\n            openFilteredIssuesCount,\n            issues,\n            csrfToken: __csrf_token,\n          })\n        : ''}\n      ${FilterHelpModal()}\n\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white\">\n          <div class=\"d-flex flex-row align-items-center mb-2\">\n            <div class=\"d-flex flex-column\">\n              <h1 class=\"h6 fw-normal mb-0\">Issues</h1>\n              <small>\n                <a href=\"${formattedCommonQueries.allOpenQuery}\" class=\"me-3 text-white\">\n                  <i class=\"fa fa-exclamation-circle\"></i> ${openCount} open\n                </a>\n                <a href=\"${formattedCommonQueries.allClosedQuery}\" class=\"text-white\">\n                  <i class=\"fa fa-check-circle\"></i> ${closedCount} closed\n                </a>\n              </small>\n            </div>\n            ${authz_data.has_course_permission_edit && openFilteredIssuesCount > 0\n              ? html`\n                  <button\n                    class=\"btn btn-sm btn-danger ms-auto\"\n                    data-bs-toggle=\"modal\"\n                    data-bs-target=\"#closeMatchingIssuesModal\"\n                  >\n                    <i class=\"fa fa-times\" aria-hidden=\"true\"></i> Close matching issues\n                  </button>\n                `\n              : ''}\n          </div>\n          <form method=\"GET\">\n            <div class=\"input-group\">\n              <button\n                class=\"btn btn-med-light dropdown-toggle\"\n                type=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Filters\n              </button>\n              <div class=\"dropdown-menu\">\n                <a class=\"dropdown-item\" href=\"${formattedCommonQueries.allOpenQuery}\">\n                  Open issues\n                </a>\n                <a class=\"dropdown-item\" href=\"${formattedCommonQueries.allClosedQuery}\">\n                  Closed issues\n                </a>\n                <a class=\"dropdown-item\" href=\"${formattedCommonQueries.allManuallyReportedQuery}\">\n                  Manually-reported issues\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"${formattedCommonQueries.allAutomaticallyReportedQuery}\"\n                >\n                  Automatically-reported issues\n                </a>\n              </div>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                name=\"q\"\n                value=\"${filterQuery}\"\n                aria-label=\"Search all issues\"\n              />\n              <button\n                class=\"btn btn-med-light\"\n                type=\"submit\"\n                data-bs-toggle=\"tooltip\"\n                data-bs-title=\"Search\"\n              >\n                <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n              </button>\n              <a\n                class=\"btn btn-med-light\"\n                href=\"${urlPrefix}/course_admin/issues?q=\"\n                data-bs-toggle=\"tooltip\"\n                data-bs-title=\"Clear filters\"\n              >\n                <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\n              </a>\n              <button\n                class=\"btn btn-med-light\"\n                type=\"button\"\n                data-bs-toggle=\"modal tooltip\"\n                data-bs-target=\"#filterHelpModal\"\n                data-bs-title=\"Filter help\"\n              >\n                <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </form>\n        </div>\n\n        ${issues.length === 0\n          ? html`\n              <div class=\"card-body\">\n                <div class=\"text-center text-muted\">No matching issues found</div>\n              </div>\n            `\n          : html`\n              <div class=\"list-group list-group-flush\">\n                ${issues.map((row) =>\n                  IssueRow({ issue: row, urlPrefix, authz_data, csrfToken: __csrf_token }),\n                )}\n              </div>\n            `}\n        ${issueCount > PAGE_SIZE\n          ? html`\n              <div class=\"card-body\">\n                ${Pager({\n                  extraQueryParams: `q=${encodeURIComponent(filterQuery)}`,\n                  chosenPage,\n                  count: issueCount,\n                  pageSize: PAGE_SIZE,\n                })}\n              </div>\n            `\n          : ''}\n      </div>\n    `,\n  });\n}\n\nfunction IssueRow({\n  issue,\n  urlPrefix,\n  authz_data,\n  csrfToken,\n}: {\n  issue: IssueComputedRow;\n  urlPrefix: string;\n  authz_data: Record<string, any>;\n  csrfToken: string;\n}) {\n  const plainUrlPrefix = config.urlPrefix;\n  const mailtoLink = `mailto:${\n    issue.user_email || issue.user_uid || '-'\n  }?subject=Reported%20PrairieLearn%20Issue&body=${encodeURIComponent(\n    `Hello ${issue.user_name},\\n\\nRegarding the issue of:\\n\\n\"${issue.student_message || '-'}\"\\n\\nWe've...`,\n  )}`;\n  const questionPreviewUrl = `${urlPrefix}/question/${issue.question_id}/`;\n  const studentViewUrl = `${plainUrlPrefix}/course_instance/${issue.course_instance_id}/instance_question/${issue.instance_question_id}/?variant_id=${issue.variant_id}`;\n  const manualGradingUrl = `${plainUrlPrefix}/course_instance/${issue.course_instance_id}/instructor/assessment/${issue.assessment_id}/manual_grading/instance_question/${issue.instance_question_id}`;\n  const assessmentInstanceUrl = `${plainUrlPrefix}/course_instance/${issue.course_instance_id}/instructor/assessment_instance/${issue.assessment_instance_id}`;\n\n  return html`\n    <div class=\"list-group-item issue-list-item d-flex flex-row align-items-center\">\n      <div style=\"min-width: 0;\">\n        ${issue.open\n          ? html`<i class=\"fa fa-exclamation-circle text-danger issue-status-icon\"></i>`\n          : html`<i class=\"fa fa-check-circle text-success issue-status-icon\"></i>`}\n        <div class=\"d-block\">\n          <strong>${issue.question_qid}</strong>\n          ${!issue.instance_question_id // Issue not associated to an instance question (originates from question preview)\n            ? html`\n                (<a href=\"${questionPreviewUrl}?variant_id=${issue.variant_id}\">instructor view</a>)\n              `\n            : issue.showUser\n              ? html`\n                  (<a href=\"${questionPreviewUrl}?variant_id=${issue.variant_id}\">instructor view</a\n                  >, <a href=\"${studentViewUrl}\">student view</a>,\n                  <a href=\"${manualGradingUrl}\">manual grading</a>,\n                  <a href=\"${assessmentInstanceUrl}\"> assessment details</a>)\n                `\n              : html`\n                  (<a href=\"${questionPreviewUrl}?variant_seed=${issue.variant_seed}\"\n                    >instructor view</a\n                  >)\n                  <button\n                    type=\"button\"\n                    class=\"badge text-bg-warning badge-sm\"\n                    data-bs-toggle=\"tooltip\"\n                    data-bs-html=\"true\"\n                    title=\"This issue was raised in course instance <strong>${issue.course_instance_short_name}</strong>. You do not have student data access for ${issue.course_instance_short_name}, so you can't view some of the issue details. Student data access can be granted by a course owner on the Staff page.\"\n                  >\n                    No student data access\n                  </button>\n                `}\n        </div>\n        <p class=\"mb-0\">${getFormattedMessage(issue)}</p>\n        <small class=\"text-muted me-2\">\n          #${issue.id} reported\n          ${issue.date\n            ? html`\n                <span title=\"${formatDate(issue.date, issue.display_timezone)}\">\n                  ${formatDistance(issue.date, Date.now(), { addSuffix: true })}\n                </span>\n              `\n            : ''}\n          ${issue.showUser\n            ? html`\n                ${issue.manually_reported ? 'by' : 'for'} ${issue.user_name || '-'} (<a\n                  href=\"${mailtoLink}\"\n                  >${issue.user_uid || '-'}</a\n                >)\n              `\n            : ''}\n        </small>\n        ${issue.manually_reported\n          ? html`<span class=\"badge text-bg-info\">Manually reported</span>`\n          : html`<span class=\"badge text-bg-warning\">Automatically reported</span>`}\n        ${issue.assessment && issue.course_instance_id\n          ? AssessmentBadge({\n              plainUrlPrefix,\n              course_instance_id: issue.course_instance_id,\n              hideLink: issue.hideAssessmentLink,\n              assessment: issue.assessment,\n            })\n          : ''}\n        ${issue.course_instance_short_name\n          ? html`<span class=\"badge text-bg-dark\">${issue.course_instance_short_name}</span>`\n          : ''}\n      </div>\n      ${authz_data.has_course_permission_edit\n        ? html`<div class=\"ms-auto ps-4\">${IssueActionButton({ issue, csrfToken })}</div>`\n        : ''}\n    </div>\n  `;\n}\n\nfunction getFormattedMessage(issue: Issue) {\n  if (!issue.student_message) return html`&mdash;`;\n\n  const message = joinHtml(issue.student_message.split(/\\r?\\n|\\r/), html`<br />`);\n  return issue.manually_reported ? html`\"${message}\"` : message;\n}\n\nfunction CloseMatchingIssuesModal({\n  openFilteredIssuesCount,\n  issues,\n  csrfToken,\n}: {\n  openFilteredIssuesCount: number;\n  issues: IssueRow[];\n  csrfToken: string;\n}) {\n  return Modal({\n    id: 'closeMatchingIssuesModal',\n    title: 'Close matching issues',\n    body: html`\n      <p>\n        Are you sure you want to close the\n        <strong>${openFilteredIssuesCount}</strong> open\n        ${openFilteredIssuesCount === 1 ? 'issue' : 'issues'} visible on the current page?\n      </p>\n    `,\n    footer: html`\n      <input type=\"hidden\" name=\"__action\" value=\"close_matching\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <input\n        type=\"hidden\"\n        name=\"unsafe_issue_ids\"\n        value=\"${issues.map((issue) => issue.id).join(',')}\"\n      />\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n      <button type=\"submit\" class=\"btn btn-danger\">Close issues</button>\n    `,\n  });\n}\n\nfunction FilterHelpModal() {\n  return Modal({\n    id: 'filterHelpModal',\n    title: 'Filter help',\n    form: false,\n    body: html`\n      <p>\n        Issues can be filtered and searched in a variety of ways. Filtering is done with the\n        following set of qualifiers.\n      </p>\n      <table class=\"table table-bordered\" aria-label=\"Filtering qualifiers\">\n        <thead>\n          <tr>\n            <th>Qualifier</th>\n            <th>Explanation</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td><code>is:open</code></td>\n            <td>Shows all issues that are open</td>\n          </tr>\n          <tr>\n            <td><code>is:closed</code></td>\n            <td>Shows all issues that are closed</td>\n          </tr>\n          <tr>\n            <td><code>is:manually-reported</code></td>\n            <td>Shows all issues that were manually reported by a student</td>\n          </tr>\n          <tr>\n            <td><code>is:automatically-reported</code></td>\n            <td>Shows all issues that were automatically reported by PrairieLearn</td>\n          </tr>\n          <tr>\n            <td>\n              <code>assessment:<em>AID</em></code>\n            </td>\n            <td>\n              Shows all issues with an assessment ID like <code>AID</code>; supports\n              <code>*</code> as a wildcard. For example,\n              <code>assessment:exam/instantFeedback</code> shows all issues associated with the\n              assessment <code>exam/instantFeedback</code>, and <code>assessment:exam/*</code> shows\n              all issues associated with any assessment that starts with <code>exam/</code>, such as\n              <code>exam/instantFeedback</code> and <code>exam/manualGrading</code>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>qid:<em>QID</em></code>\n            </td>\n            <td>\n              Shows all issues with a question ID like <code>QID</code>; supports <code>*</code> as\n              a wildcard. For example, <code>qid:graphConnectivity</code> shows all issues\n              associated with the question <code>graphConnectivity</code>, and\n              <code>qid:graph*</code> shows all issues associated with any question that starts with\n              <code>graph</code>, such as <code>graphConnectivity</code> and\n              <code>graphTheory</code>.\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <code>user:<em>UID</em></code>\n            </td>\n            <td>\n              Shows all issues that were reported by a user with a UID like <code>UID</code>. For\n              example, <code>user:student@example.com</code> shows all issues that were reported by\n              <code>student@example.com</code>.\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <h3 class=\"h4\">Full-text search</h3>\n      <p>\n        You can also search the issue message by simply entering text. For example,\n        <code>no picture</code> would return any issues that contain text like \"no picture\".\n      </p>\n\n      <h3 class=\"h4\">Qualifier negation</h3>\n      <p>\n        Any qualifier can be negated with the a hyphen (<code>-</code>). For example,\n        <code>-is:manually-reported</code> would return all issues that were\n        <strong>not</strong> manually reported.\n      </p>\n\n      <h3 class=\"h4\">Combining qualifiers</h3>\n      <p>These can be combined to form complex searches. An example:</p>\n      <pre><code>is:open qid:vector answer is wrong</code></pre>\n      <p>\n        This would return any open issues with a QID like <code>vector</code> whose message contains\n        text like \"answer is wrong\".\n      </p>\n    `,\n    footer: html`<button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">\n      Close\n    </button>`,\n  });\n}\n\nfunction IssueActionButton({ issue, csrfToken }: { issue: Issue; csrfToken: string }) {\n  return html`\n    <form method=\"POST\" style=\"white-space: nowrap;\">\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <input type=\"hidden\" name=\"issue_id\" value=\"${issue.id}\" />\n      <div class=\"btn-group btn-group-sm\">\n        ${issue.open\n          ? html`\n              <button\n                class=\"btn btn-outline-secondary\"\n                name=\"__action\"\n                value=\"close\"\n                aria-label=\"Close issue\"\n                data-bs-toggle=\"tooltip\"\n                data-bs-placement=\"top\"\n                data-bs-title=\"Close issue\"\n              >\n                <i class=\"fa fa-times fa-fw\" aria-hidden=\"true\"></i>\n              </button>\n            `\n          : html`\n              <button\n                class=\"btn btn-outline-secondary\"\n                name=\"__action\"\n                value=\"open\"\n                aria-label=\"Reopen issue\"\n                data-bs-toggle=\"tooltip\"\n                data-bs-placement=\"top\"\n                data-bs-title=\"Reopen issue\"\n              >\n                <i class=\"fa fa-rotate-right fa-fw\" aria-hidden=\"true\"></i>\n              </button>\n            `}\n      </div>\n    </form>\n  `;\n}\n"]}