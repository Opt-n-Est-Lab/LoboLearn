{"version":3,"file":"instructorQuestionSettings.html.js","sourceRoot":"","sources":["../../../src/pages/instructorQuestionSettings/instructorQuestionSettings.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { type HtmlValue, escapeHtml, html } from '@prairielearn/html';\n\nimport { AssessmentBadge } from '../../components/AssessmentBadge.html.js';\nimport { Modal } from '../../components/Modal.html.js';\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { QuestionSyncErrorsAndWarnings } from '../../components/SyncErrorsAndWarnings.html.js';\nimport { TagBadgeList } from '../../components/TagBadge.html.js';\nimport { TagDescription } from '../../components/TagDescription.html.js';\nimport { TopicBadge } from '../../components/TopicBadge.html.js';\nimport { TopicDescription } from '../../components/TopicDescription.html.js';\nimport { compiledScriptTag, nodeModulesAssetPath } from '../../lib/assets.js';\nimport { config } from '../../lib/config.js';\nimport {\n  AssessmentSchema,\n  AssessmentSetSchema,\n  IdSchema,\n  type Question,\n  type Tag,\n  type Topic,\n} from '../../lib/db-types.js';\nimport { idsEqual } from '../../lib/id.js';\nimport { encodePath } from '../../lib/uri-util.js';\nimport { type CourseWithPermissions } from '../../models/course.js';\n\nexport const SelectedAssessmentsSchema = z.object({\n  short_name: z.string(),\n  long_name: z.string(),\n  course_instance_id: IdSchema,\n  assessments: z.array(\n    z.object({\n      assessment_id: IdSchema,\n      color: AssessmentSetSchema.shape.color,\n      label: AssessmentSetSchema.shape.abbreviation,\n      title: AssessmentSchema.shape.title,\n      type: AssessmentSchema.shape.type,\n    }),\n  ),\n});\ntype SelectedAssessments = z.infer<typeof SelectedAssessmentsSchema>;\n\nexport const SharingSetRowSchema = z.object({\n  id: IdSchema,\n  name: z.string(),\n  in_set: z.boolean(),\n});\ntype SharingSetRow = z.infer<typeof SharingSetRowSchema>;\n\nexport function InstructorQuestionSettings({\n  resLocals,\n  questionTestPath,\n  questionTestCsrfToken,\n  questionGHLink,\n  qids,\n  assessmentsWithQuestion,\n  sharingEnabled,\n  sharingSetsIn,\n  editableCourses,\n  infoPath,\n  origHash,\n  canEdit,\n  courseTopics,\n  courseTags,\n}: {\n  resLocals: Record<string, any>;\n  questionTestPath: string;\n  questionTestCsrfToken: string;\n  questionGHLink: string | null;\n  qids: string[];\n  assessmentsWithQuestion: SelectedAssessments[];\n  sharingEnabled: boolean;\n  sharingSetsIn: SharingSetRow[];\n  editableCourses: CourseWithPermissions[];\n  infoPath: string;\n  origHash: string;\n  canEdit: boolean;\n  courseTopics: Topic[];\n  courseTags: Tag[];\n}) {\n  // Only show assessments on which this question is used when viewing the question\n  // in the context of a course instance.\n  const shouldShowAssessmentsList = !!resLocals.course_instance;\n  const selectedTags = new Set(resLocals.tags?.map((tag) => tag.name) ?? []);\n\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Settings',\n    navContext: {\n      type: 'instructor',\n      page: 'question',\n      subPage: 'settings',\n    },\n    options: {\n      pageNote: resLocals.question.qid,\n    },\n    headContent: html`\n      ${compiledScriptTag('instructorQuestionSettingsClient.ts')}\n      <style>\n        .ts-wrapper.multi .ts-control > span {\n          cursor: pointer;\n        }\n\n        .ts-wrapper.multi .ts-control > span.active {\n          background-color: var(--bs-primary) !important;\n          color: white !important;\n        }\n      </style>\n      <link\n        href=\"${nodeModulesAssetPath('tom-select/dist/css/tom-select.bootstrap5.css')}\"\n        rel=\"stylesheet\"\n      />\n    `,\n    content: html`\n      ${QuestionSyncErrorsAndWarnings({\n        authz_data: resLocals.authz_data,\n        question: resLocals.question,\n        course: resLocals.course,\n        urlPrefix: resLocals.urlPrefix,\n      })}\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white d-flex\">\n          <h1>Question Settings</h1>\n        </div>\n        <div class=\"card-body\">\n          <form name=\"edit-question-settings-form\" method=\"POST\">\n            <input type=\"hidden\" name=\"__csrf_token\" value=\"${resLocals.__csrf_token}\" />\n            <input type=\"hidden\" name=\"orig_hash\" value=\"${origHash}\" />\n            <div class=\"mb-3\">\n              <label class=\"form-label\" for=\"qid\">QID</label>\n              ${questionGHLink\n                ? html`<a target=\"_blank\" href=\"${questionGHLink}\">view on GitHub</a>`\n                : ''}\n              <input\n                type=\"text\"\n                class=\"form-control font-monospace\"\n                id=\"qid\"\n                name=\"qid\"\n                value=\"${resLocals.question.qid}\"\n                pattern=\"[\\\\-A-Za-z0-9_\\\\/]+\"\n                data-other-values=\"${qids.join(',')}\"\n                ${canEdit ? '' : 'disabled'}\n              />\n              <small class=\"form-text text-muted\">\n                This is a unique identifier for the question, e.g. \"addNumbers\". Use only letters,\n                numbers, dashes, and underscores, with no spaces. You may use forward slashes to\n                separate directories.\n              </small>\n            </div>\n            <div class=\"mb-3\">\n              <h2 class=\"h4\">General</h2>\n              <label class=\"form-label\" for=\"title\">Title</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"title\"\n                name=\"title\"\n                value=\"${resLocals.question.title}\"\n                ${canEdit ? '' : 'disabled'}\n              />\n              <small class=\"form-text text-muted\">\n                The title of the question (e.g., \"Add two numbers\").\n              </small>\n            </div>\n            <div class=\"table-responsive card mb-3 overflow-visible\">\n              <table\n                class=\"table two-column-description\"\n                aria-label=\"Question topic, tags, and assessments\"\n              >\n                <tbody>\n                  <tr>\n                    <th class=\"align-middle\">\n                      <label id=\"topic-label\" for=\"topic\">Topic</label>\n                    </th>\n                    <!-- The style attribute is necessary until we upgrade to Bootstrap 5.3 -->\n                    <!-- This is used by tom-select to style the active item in the dropdown -->\n                    <td style=\"--bs-tertiary-bg: #f8f9fa\">\n                      ${canEdit\n                        ? html`\n                            <select\n                              id=\"topic\"\n                              name=\"topic\"\n                              placeholder=\"Select a topic\"\n                              aria-labelledby=\"topic-label\"\n                            >\n                              ${courseTopics.map((topic) => {\n                                return html`\n                                  <option\n                                    value=\"${topic.name}\"\n                                    data-color=\"${topic.color}\"\n                                    data-name=\"${topic.name}\"\n                                    data-description=\"${topic.implicit\n                                      ? ''\n                                      : TopicDescription(topic)}\"\n                                    ${topic.name === resLocals.topic.name ? 'selected' : ''}\n                                  ></option>\n                                `;\n                              })}\n                            </select>\n                          `\n                        : TopicBadge(resLocals.topic)}\n                    </td>\n                  </tr>\n                  <tr>\n                    <th class=\"align-middle\">\n                      <label id=\"tags-label\" for=\"tags\">Tags</label>\n                    </th>\n                    <td>\n                      ${canEdit\n                        ? html`\n                            <select\n                              id=\"tags\"\n                              name=\"tags\"\n                              placeholder=\"Select tags\"\n                              aria-labelledby=\"tags-label\"\n                              multiple\n                            >\n                              ${courseTags.length > 0\n                                ? courseTags.map((tag) => {\n                                    return html`\n                                      <option\n                                        value=\"${tag.name}\"\n                                        data-color=\"${tag.color}\"\n                                        data-name=\"${tag.name}\"\n                                        data-description=\"${tag.implicit\n                                          ? ''\n                                          : TagDescription(tag)}\"\n                                        ${selectedTags.has(tag.name) ? 'selected' : ''}\n                                      ></option>\n                                    `;\n                                  })\n                                : ''}\n                            </select>\n                          `\n                        : TagBadgeList(resLocals.tags)}\n                    </td>\n                  </tr>\n                  ${shouldShowAssessmentsList\n                    ? html`<tr>\n                        <th class=\"align-middle\">Assessments</th>\n                        <td>${AssessmentBadges({ assessmentsWithQuestion, resLocals })}</td>\n                      </tr>`\n                    : ''}\n                </tbody>\n              </table>\n            </div>\n            <div class=\"mb-3\">\n              <label class=\"form-label\" for=\"grading_method\">Grading method</label>\n              <select\n                class=\"form-select\"\n                id=\"grading_method\"\n                name=\"grading_method\"\n                ${canEdit ? '' : 'disabled'}\n              >\n                <option\n                  value=\"Internal\"\n                  ${resLocals.question.grading_method === 'Internal' ? 'selected' : ''}\n                >\n                  Internal\n                </option>\n                <option\n                  value=\"External\"\n                  ${resLocals.question.grading_method === 'External' ? 'selected' : ''}\n                >\n                  External\n                </option>\n                <option\n                  value=\"Manual\"\n                  ${resLocals.question.grading_method === 'Manual' ? 'selected' : ''}\n                >\n                  Manual\n                </option>\n              </select>\n              <small class=\"form-text text-muted\">\n                The grading method used for this question.\n              </small>\n            </div>\n            <div class=\"mb-3 form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"single_variant\"\n                name=\"single_variant\"\n                ${canEdit ? '' : 'disabled'}\n                ${resLocals.question.single_variant ? 'checked' : ''}\n              />\n              <label class=\"form-check-label\" for=\"single_variant\">Single variant</label>\n              <div class=\"small text-muted\">\n                If enabled, students will only be able to try a single variant of this question on\n                any given assessment.\n              </div>\n            </div>\n            <div class=\"mb-3 form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"show_correct_answer\"\n                name=\"show_correct_answer\"\n                ${canEdit ? '' : 'disabled'}\n                ${resLocals.question.show_correct_answer ? 'checked' : ''}\n              />\n              <label class=\"form-check-label\" for=\"show_correct_answer\">Show correct answer</label>\n              <div class=\"small text-muted\">\n                If enabled, the correct answer panel will be shown after all submission attempts\n                have been exhausted.\n              </div>\n            </div>\n            ${canEdit\n              ? html`\n                  <button\n                    id=\"save-button\"\n                    type=\"submit\"\n                    class=\"btn btn-primary mb-2\"\n                    name=\"__action\"\n                    value=\"update_question\"\n                  >\n                    Save\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-secondary mb-2\"\n                    onclick=\"window.location.reload()\"\n                  >\n                    Cancel\n                  </button>\n                `\n              : ''}\n          </form>\n          ${sharingEnabled\n            ? html`\n                <hr />\n                <div>\n                  <h2 class=\"h4\">Sharing</h2>\n                  <div data-testid=\"shared-with\">\n                    ${QuestionSharing({\n                      question: resLocals.question,\n                      sharingSetsIn,\n                    })}\n                  </div>\n                </div>\n              `\n            : ''}\n          ${resLocals.question.type === 'Freeform' &&\n          resLocals.question.grading_method !== 'External' &&\n          resLocals.authz_data.has_course_permission_view\n            ? html`\n                <hr />\n                <div>\n                  <h2 class=\"h4\">Tests</h2>\n                  <div>\n                    ${QuestionTestsForm({\n                      questionTestPath,\n                      questionTestCsrfToken,\n                    })}\n                  </div>\n                </div>\n              `\n            : ''}\n          ${resLocals.authz_data.has_course_permission_view\n            ? canEdit\n              ? html`\n                  <hr />\n                  <a\n                    data-testid=\"edit-question-configuration-link\"\n                    href=\"${resLocals.urlPrefix}/question/${resLocals.question\n                      .id}/file_edit/${encodePath(infoPath)}\"\n                  >\n                    Edit question configuration\n                  </a>\n                  in <code>info.json</code>\n                `\n              : html`\n                  <hr />\n                  <a\n                    href=\"${resLocals.urlPrefix}/question/${resLocals.question\n                      .id}/file_view/${encodePath(infoPath)}\"\n                  >\n                    View question configuration\n                  </a>\n                  in <code>info.json</code>\n                `\n            : ''}\n        </div>\n        ${(editableCourses.length > 0 && resLocals.authz_data.has_course_permission_view) || canEdit\n          ? html`\n              <div class=\"card-footer\">\n                ${editableCourses.length > 0 &&\n                resLocals.authz_data.has_course_permission_view &&\n                resLocals.question.course_id === resLocals.course.id\n                  ? html`\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-sm btn-primary\"\n                        id=\"copyQuestionButton\"\n                        data-bs-toggle=\"popover\"\n                        data-bs-container=\"body\"\n                        data-bs-html=\"true\"\n                        data-bs-placement=\"auto\"\n                        data-bs-title=\"Copy this question\"\n                        data-bs-content=\"${escapeHtml(\n                          CopyForm({\n                            csrfToken: resLocals.__csrf_token,\n                            editableCourses,\n                            courseId: resLocals.course.id,\n                          }),\n                        )}\"\n                      >\n                        <i class=\"fa fa-clone\"></i>\n                        <span>Make a copy of this question</span>\n                      </button>\n                    `\n                  : ''}\n                ${canEdit\n                  ? html`\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-sm btn-primary\"\n                        data-bs-toggle=\"modal\"\n                        data-bs-target=\"#deleteQuestionModal\"\n                      >\n                        <i class=\"fa fa-times\" aria-hidden=\"true\"></i> Delete this question\n                      </button>\n                      ${DeleteQuestionModal({\n                        qid: resLocals.question.qid,\n                        assessmentsWithQuestion,\n                        csrfToken: resLocals.__csrf_token,\n                      })}\n                    `\n                  : ''}\n              </div>\n            `\n          : ''}\n      </div>\n    `,\n  });\n}\n\nfunction CopyForm({\n  csrfToken,\n  editableCourses,\n  courseId,\n}: {\n  csrfToken: string;\n  editableCourses: CourseWithPermissions[];\n  courseId: string;\n}) {\n  return html`\n    <form name=\"copy-question-form\" method=\"POST\">\n      <input type=\"hidden\" name=\"__action\" value=\"copy_question\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"to-course-id-select\">\n          The copied question will be added to the following course:\n        </label>\n        <select class=\"form-select\" id=\"to-course-id-select\" name=\"to_course_id\" required>\n          ${editableCourses.map((c) => {\n            return html`\n              <option value=\"${c.id}\" ${idsEqual(c.id, courseId) ? 'selected' : ''}>\n                ${c.short_name}\n              </option>\n            `;\n          })}\n        </select>\n      </div>\n      <div class=\"text-right\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"popover\">Cancel</button>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n      </div>\n    </form>\n  `;\n}\n\nfunction DeleteQuestionModal({\n  qid,\n  assessmentsWithQuestion,\n  csrfToken,\n}: {\n  qid: string;\n  assessmentsWithQuestion: SelectedAssessments[];\n  csrfToken: string;\n}) {\n  return Modal({\n    id: 'deleteQuestionModal',\n    title: 'Delete question',\n    body: html`\n      <p>\n        Are you sure you want to delete the question\n        <strong>${qid}</strong>?\n      </p>\n      ${assessmentsWithQuestion.length\n        ? html`\n            <p>It is included by these assessments:</p>\n            <ul class=\"list-group my-4\">\n              ${assessmentsWithQuestion.map((a_with_q) => {\n                return html`\n                  <li class=\"list-group-item\">\n                    <div class=\"h6\">${a_with_q.short_name} (${a_with_q.long_name})</div>\n                    ${a_with_q.assessments.map((assessment) =>\n                      AssessmentBadge({\n                        plainUrlPrefix: config.urlPrefix,\n                        course_instance_id: a_with_q.course_instance_id,\n                        assessment,\n                      }),\n                    )}\n                  </li>\n                `;\n              })}\n            </ul>\n            <p>\n              So, if you delete it, you will be unable to sync your course content to the database\n              until you either remove the question from these assessments or create a new question\n              with the same QID.\n            </p>\n          `\n        : ''}\n    `,\n    footer: html`\n      <input type=\"hidden\" name=\"__action\" value=\"delete_question\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n      <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n    `,\n  });\n}\n\nfunction QuestionTestsForm({\n  questionTestPath,\n  questionTestCsrfToken,\n}: {\n  questionTestPath: string;\n  questionTestCsrfToken: string;\n}) {\n  return html`\n    <form name=\"question-tests-form\" method=\"POST\" action=\"${questionTestPath}\">\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${questionTestCsrfToken}\" />\n      <button\n        type=\"submit\"\n        class=\"btn btn-sm btn-outline-primary\"\n        name=\"__action\"\n        value=\"test_once\"\n      >\n        Test once with full details\n      </button>\n      <button type=\"submit\" class=\"btn btn-sm btn-outline-primary\" name=\"__action\" value=\"test_100\">\n        Test 100 times with only results\n      </button>\n    </form>\n  `;\n}\n\nfunction QuestionSharing({\n  question,\n  sharingSetsIn,\n}: {\n  question: Question;\n  sharingSetsIn: SharingSetRow[];\n}) {\n  if (!question.share_publicly && !question.share_source_publicly && sharingSetsIn.length === 0) {\n    return html`<p>This question is not being shared.</p>`;\n  }\n\n  const details: HtmlValue[] = [];\n\n  if (question.share_publicly) {\n    details.push(html`\n      <p>\n        <span class=\"badge color-green3 me-1\">Public</span>\n        This question is publicly shared and can be imported by other courses.\n      </p>\n    `);\n  }\n\n  if (question.share_source_publicly) {\n    details.push(html`\n      <p>\n        <span class=\"badge color-green3 me-1\">Public source</span>\n        This question's source is publicly shared.\n      </p>\n    `);\n  }\n\n  if (sharingSetsIn.length > 0) {\n    const sharedWithLabel =\n      sharingSetsIn.length === 1 ? '1 sharing set' : `${sharingSetsIn.length} sharing sets`;\n\n    details.push(html`\n      <p>\n        Shared with ${sharedWithLabel}:\n        ${sharingSetsIn.map((sharing_set) => {\n          return html` <span class=\"badge color-gray1\">${sharing_set.name}</span> `;\n        })}\n      </p>\n    `);\n  }\n\n  return details;\n}\n\nfunction AssessmentBadges({\n  assessmentsWithQuestion,\n  resLocals,\n}: {\n  assessmentsWithQuestion: SelectedAssessments[];\n  resLocals: Record<string, any>;\n}) {\n  const courseInstanceId = resLocals.course_instance.id;\n\n  const assessmentsInCourseInstance = assessmentsWithQuestion.find((a) =>\n    idsEqual(a.course_instance_id, courseInstanceId),\n  );\n\n  if (\n    !assessmentsInCourseInstance?.assessments ||\n    assessmentsInCourseInstance.assessments.length === 0\n  ) {\n    return html`\n      <small class=\"text-muted text-center\">\n        This question is not included in any assessments in this course instance.\n      </small>\n    `;\n  }\n\n  return assessmentsInCourseInstance.assessments.map((assessment) => {\n    return html`\n      <a\n        href=\"/pl/course_instance/${assessmentsInCourseInstance.course_instance_id}/instructor/assessment/${assessment.assessment_id}\"\n        class=\"btn btn-badge color-${assessment.color}\"\n      >\n        ${assessment.label}\n      </a>\n    `;\n  });\n}\n"]}