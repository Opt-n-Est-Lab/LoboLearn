{"version":3,"file":"instructorQuestions.js","sourceRoot":"","sources":["../../../src/pages/instructorQuestions/instructorQuestions.ts"],"names":[],"mappings":"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","sourcesContent":["import * as url from 'node:url';\n\nimport { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\nimport fs from 'fs-extra';\n\nimport * as error from '@prairielearn/error';\nimport { flash } from '@prairielearn/flash';\n\nimport { InsufficientCoursePermissionsCardPage } from '../../components/InsufficientCoursePermissionsCard.js';\nimport { config } from '../../lib/config.js';\nimport { getCourseFilesClient } from '../../lib/course-files-api.js';\nimport { getCourseOwners } from '../../lib/course.js';\nimport { features } from '../../lib/features/index.js';\nimport { isEnterprise } from '../../lib/license.js';\nimport { EXAMPLE_COURSE_PATH } from '../../lib/paths.js';\nimport { getSearchParams } from '../../lib/url.js';\nimport { selectCourseInstancesWithStaffAccess } from '../../models/course-instances.js';\nimport { selectOptionalQuestionByQid } from '../../models/question.js';\nimport { selectQuestionsForCourse } from '../../models/questions.js';\nimport { loadQuestions } from '../../sync/course-db.js';\n\nimport { QuestionsPage } from './instructorQuestions.html.js';\n\nconst router = Router();\n\nlet cachedTemplateQuestionOptions: { qid: string; title: string }[] | null = null;\n\n/**\n * Get a list of template question qids and titles that can be used as starting points for new questions.\n */\nasync function getTemplateCourseQuestionOptions(): Promise<{ qid: string; title: string }[]> {\n  if (!config.devMode) {\n    // Check if the template questions are cached\n    if (cachedTemplateQuestionOptions) {\n      return cachedTemplateQuestionOptions;\n    }\n  }\n\n  const questions = await loadQuestions(EXAMPLE_COURSE_PATH);\n\n  const templateQuestions: { qid: string; title: string }[] = [];\n\n  for (const [qid, question] of Object.entries(questions)) {\n    if (qid.startsWith('template/') && question?.data?.title) {\n      templateQuestions.push({ qid, title: question.data.title });\n    }\n  }\n\n  const sortedTemplateQuestionOptions = templateQuestions.sort((a, b) =>\n    a.title.localeCompare(b.title),\n  );\n\n  if (!config.devMode) {\n    // Cache the template questions\n    cachedTemplateQuestionOptions = sortedTemplateQuestionOptions;\n  }\n\n  return sortedTemplateQuestionOptions;\n}\n\nrouter.get(\n  '/',\n  asyncHandler(async function (req, res) {\n    if (!res.locals.authz_data.has_course_permission_preview) {\n      // Access denied, but instead of sending them to an error page, we'll show\n      // them an explanatory message and prompt them to get view permissions.\n      const courseOwners = await getCourseOwners(res.locals.course.id);\n      res.status(403).send(\n        InsufficientCoursePermissionsCardPage({\n          resLocals: res.locals,\n          courseOwners,\n          pageTitle: 'Questions',\n          requiredPermissions: 'Previewer',\n        }),\n      );\n      return;\n    }\n\n    const courseInstances = await selectCourseInstancesWithStaffAccess({\n      course_id: res.locals.course.id,\n      user_id: res.locals.user.user_id,\n      authn_user_id: res.locals.authn_user.user_id,\n      is_administrator: res.locals.is_administrator,\n      authn_is_administrator: res.locals.authz_data.authn_is_administrator,\n    });\n\n    const questions = await selectQuestionsForCourse(\n      res.locals.course.id,\n      courseInstances.map((ci) => ci.id),\n    );\n\n    const templateQuestions = await getTemplateCourseQuestionOptions();\n\n    const courseDirExists = await fs.pathExists(res.locals.course.path);\n    res.send(\n      QuestionsPage({\n        questions,\n        templateQuestions,\n        course_instances: courseInstances,\n        showAddQuestionButton:\n          res.locals.authz_data.has_course_permission_edit &&\n          !res.locals.course.example_course &&\n          courseDirExists,\n        showAiGenerateQuestionButton:\n          res.locals.authz_data.has_course_permission_edit &&\n          !res.locals.course.example_course &&\n          isEnterprise() &&\n          (await features.enabledFromLocals('ai-question-generation', res.locals)),\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\n// This route will redirect to a question preview based on the QID.\n// This is meant to support automated testing of questions when one might not\n// want to jump through hoops to get a question ID from a QID.\nrouter.get(\n  '/qid/*',\n  asyncHandler(async (req, res) => {\n    // Access control may not matter as much here, since we'll still deny\n    // access after the redirect, but doing this will allow us to avoid\n    // leaking the existence or non-existence of questions to viewers,\n    // which can't hurt.\n    if (!res.locals.authz_data.has_course_permission_preview) {\n      // Access denied, but instead of sending them to an error page, we'll show\n      // them an explanatory message and prompt them to get view permissions.\n      const courseOwners = await getCourseOwners(res.locals.course.id);\n      res.status(403).send(\n        InsufficientCoursePermissionsCardPage({\n          resLocals: res.locals,\n          courseOwners,\n          pageTitle: 'Questions',\n          requiredPermissions: 'Previewer',\n        }),\n      );\n      return;\n    }\n\n    const question = await selectOptionalQuestionByQid({\n      qid: req.params[0],\n      course_id: res.locals.course.id,\n    });\n\n    if (!question) {\n      throw new error.HttpStatusError(404, 'Question not found');\n    }\n\n    // Forward all query parameters except `qid`. Specifically, we want to support\n    // `variant_seed` for previewing questions with a specific seed.\n    const searchParams = getSearchParams(req);\n    searchParams.delete('qid');\n\n    res.redirect(\n      url.format({\n        pathname: `${res.locals.urlPrefix}/question/${question.id}/preview`,\n        search: searchParams.toString(),\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (req.body.__action === 'add_question') {\n      if (!req.body.qid) {\n        throw new error.HttpStatusError(400, 'qid is required');\n      }\n      if (!req.body.title) {\n        throw new error.HttpStatusError(400, 'title is required');\n      }\n      if (!req.body.start_from) {\n        throw new error.HttpStatusError(400, 'start_from is required');\n      }\n      if (!/^[-A-Za-z0-9_/]+$/.test(req.body.qid)) {\n        throw new error.HttpStatusError(\n          400,\n          `Invalid qid (was not only letters, numbers, dashes, slashes, and underscores, with no spaces): ${req.body.qid}`,\n        );\n      }\n      if (req.body.start_from === 'Template' && !req.body.template_qid) {\n        throw new error.HttpStatusError(400, 'template_qid is required');\n      }\n\n      const api = getCourseFilesClient();\n\n      const result = await api.createQuestion.mutate({\n        course_id: res.locals.course.id,\n        user_id: res.locals.user.user_id,\n        authn_user_id: res.locals.authn_user.user_id,\n        has_course_permission_edit: res.locals.authz_data.has_course_permission_edit,\n        qid: req.body.qid,\n        title: req.body.title,\n        template_qid: req.body.start_from === 'Template' ? req.body.template_qid : undefined,\n      });\n\n      if (result.status === 'error') {\n        res.redirect(res.locals.urlPrefix + '/edit_error/' + result.job_sequence_id);\n        return;\n      }\n\n      flash('success', 'Question created successfully.');\n\n      if (req.body.start_from === 'Template') {\n        res.redirect(`${res.locals.urlPrefix}/question/${result.question_id}/preview`);\n      } else {\n        res.redirect(\n          `${res.locals.urlPrefix}/question/${result.question_id}/file_edit/questions/${result.question_qid}/question.html`,\n        );\n      }\n    } else {\n      throw new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}