{"version":3,"file":"jobSequence.js","sourceRoot":"","sources":["../../../src/pages/jobSequence/jobSequence.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AAEtD,OAAO,EAAE,cAAc,EAAE,MAAM,0BAA0B,CAAC;AAE1D,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AAEpD,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CACR,mBAAmB,EACnB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,eAAe,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC;IACnD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,IAAI,IAAI,CAAC;IAChD,MAAM,YAAY,GAAG,MAAM,cAAc,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IAEtE,4EAA4E;IAC5E,yEAAyE;IACzE,6DAA6D;IAC7D,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;QAC1B,uEAAuE;QACvE,wEAAwE;QACxE,oDAAoD;QAEpD,IAAI,YAAY,CAAC,kBAAkB,IAAI,IAAI,EAAE,CAAC;YAC5C,mEAAmE;YACnE,6BAA6B;YAE7B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,0BAA0B,EAAE,CAAC;gBACtD,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,gDAAgD,CAAC,CAAC;YACnF,CAAC;QACH,CAAC;aAAM,CAAC;YACN,mEAAmE;YACnE,yCAAyC;YAEzC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC;gBAChC,sEAAsE;gBACtE,wEAAwE;gBACxE,oEAAoE;gBACpE,GAAG,CAAC,QAAQ,CACV,GAAG,GAAG,CAAC,MAAM,CAAC,cAAc,oBAAoB,YAAY,CAAC,kBAAkB,2BAA2B,YAAY,CAAC,EAAE,EAAE,CAC5H,CAAC;YACJ,CAAC;YAED,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,mCAAmC,EAAE,CAAC;gBAC/D,MAAM,IAAI,eAAe,CACvB,GAAG,EACH,sEAAsE,CACvE,CAAC;YACJ,CAAC;QACH,CAAC;IACH,CAAC;IAED,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\n\nimport { getJobSequence } from '../../lib/server-jobs.js';\n\nimport { JobSequence } from './jobSequence.html.js';\n\nconst router = Router();\n\nrouter.get(\n  '/:job_sequence_id',\n  asyncHandler(async (req, res) => {\n    const job_sequence_id = req.params.job_sequence_id;\n    const course_id = res.locals.course?.id ?? null;\n    const job_sequence = await getJobSequence(job_sequence_id, course_id);\n\n    // Verify existence of authz_data, which means that we are accessing the job\n    // sequence through a course or a course instance. If authz_data does not\n    // exist, we are either in administrator mode or in dev mode.\n    if (res.locals.authz_data) {\n      // Some job sequences show information that should only be available to\n      // users who can view code (Course role: Viewer) or who can view student\n      // data (Course instance role: Student Data Viewer).\n\n      if (job_sequence.course_instance_id == null) {\n        // If course_instance_id is null, then this job_sequence likely has\n        // something to do with code.\n\n        if (!res.locals.authz_data.has_course_permission_view) {\n          throw new HttpStatusError(403, 'Access denied (must be a Viewer in the course)');\n        }\n      } else {\n        // If course_instance_id is not null, then this job sequence likely\n        // has something to do with student data.\n\n        if (!res.locals.course_instance) {\n          // The user is trying to access a job sequence that is associated with\n          // a course instance through a course page route. Redirect to the course\n          // instance page route so we get authz_data for the course instance.\n          res.redirect(\n            `${res.locals.plainUrlPrefix}/course_instance/${job_sequence.course_instance_id}/instructor/jobSequence/${job_sequence.id}`,\n          );\n        }\n\n        if (!res.locals.authz_data.has_course_instance_permission_view) {\n          throw new HttpStatusError(\n            403,\n            'Access denied (must be a Student Data Viewer in the course instance)',\n          );\n        }\n      }\n    }\n\n    res.send(JobSequence({ resLocals: res.locals, job_sequence }));\n  }),\n);\n\nexport default router;\n"]}