{"version":3,"file":"newsItem.js","sourceRoot":"","sources":["../../../src/pages/newsItem/newsItem.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACvC,OAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAElC,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAExE,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,2BAA2B,EAAE,MAAM,oCAAoC,CAAC;AAEjF,OAAO,EAAE,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAE9C,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CACR,sBAAsB,EACtB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CACrC,GAAG,CAAC,yBAAyB,EAC7B;QACE,YAAY,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY;QACrC,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;KACvC,EACD,cAAc,CACf,CAAC;IACF,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QACrB,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAC7B,MAAM,CAAC,IAAI,CAAC,OAAO,EACnB,IAAI,EACJ,IAAI,EACJ,YAAY,EACZ,QAAQ,CAAC,SAAS,EAClB,YAAY,CACb,CAAC;IACF,MAAM,YAAY,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IAE9D,MAAM,gBAAgB,GAAG,MAAM,2BAA2B,CAAC;QACzD,OAAO,EAAE,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO;KACvC,CAAC,CAAC;IAEH,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,GAAG,CACR,wBAAwB,EACxB,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC9B,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/B,MAAM,QAAQ,GAAG,MAAM,gBAAgB,CACrC,GAAG,CAAC,gBAAgB,EACpB,EAAE,YAAY,EAAE,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,EACzC,cAAc,CACf,CAAC;IACF,IAAI,QAAQ,IAAI,IAAI,EAAE,CAAC;QACrB,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAC3B,MAAM,CAAC,IAAI,CAAC,OAAO,EACnB,IAAI,EACJ,IAAI,EACJ,YAAY,EACZ,QAAQ,CAAC,SAAS,CACnB,CAAC;IAEF,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;AAChD,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import * as fs from 'node:fs/promises';\nimport * as path from 'node:path';\n\nimport { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport { loadSqlEquiv, queryOptionalRow } from '@prairielearn/postgres';\n\nimport { NewsItemSchema } from '../../lib/db-types.js';\nimport { userIsInstructorInAnyCourse } from '../../models/course-permissions.js';\n\nimport { NewsItem } from './newsItem.html.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\nconst router = Router();\n\nrouter.get(\n  '/:news_item_id(\\\\d+)',\n  asyncHandler(async (req, res) => {\n    const newsItem = await queryOptionalRow(\n      sql.select_news_item_for_read,\n      {\n        news_item_id: req.params.news_item_id,\n        user_id: res.locals.authn_user.user_id,\n      },\n      NewsItemSchema,\n    );\n    if (newsItem == null) {\n      throw new HttpStatusError(404, 'Not found');\n    }\n\n    const indexFilename = path.join(\n      import.meta.dirname,\n      '..',\n      '..',\n      'news_items',\n      newsItem.directory,\n      'index.html',\n    );\n    const newsItemHtml = await fs.readFile(indexFilename, 'utf8');\n\n    const userIsInstructor = await userIsInstructorInAnyCourse({\n      user_id: res.locals.authn_user.user_id,\n    });\n\n    res.send(NewsItem({ resLocals: res.locals, newsItem, newsItemHtml, userIsInstructor }));\n  }),\n);\n\nrouter.get(\n  '/:news_item_id(\\\\d+)/*',\n  asyncHandler(async (req, res) => {\n    const filename = req.params[0];\n    const newsItem = await queryOptionalRow(\n      sql.select_news_item,\n      { news_item_id: req.params.news_item_id },\n      NewsItemSchema,\n    );\n    if (newsItem == null) {\n      throw new HttpStatusError(404, 'Not found');\n    }\n\n    const newsItemDir = path.join(\n      import.meta.dirname,\n      '..',\n      '..',\n      'news_items',\n      newsItem.directory,\n    );\n\n    res.sendFile(filename, { root: newsItemDir });\n  }),\n);\n\nexport default router;\n"]}