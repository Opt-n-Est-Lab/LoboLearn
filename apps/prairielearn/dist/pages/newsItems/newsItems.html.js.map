{"version":3,"file":"newsItems.html.js","sourceRoot":"","sources":["../../../src/pages/newsItems/newsItems.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAEvD,MAAM,CAAC,MAAM,iBAAiB,GAAG,cAAc,CAAC,MAAM,CAAC;IACrD,MAAM,EAAE,CAAC,CAAC,OAAO,EAAE;CACpB,CAAC,CAAC;AAGH,MAAM,UAAU,SAAS,CAAC,EACxB,SAAS,EACT,SAAS,EACT,gBAAgB,GAKjB;IACC,MAAM,EAAE,SAAS,EAAE,4BAA4B,EAAE,yBAAyB,EAAE,GAAG,SAG9E,CAAC;IAEF,OAAO,UAAU,CAAC;QAChB,SAAS;QACT,SAAS,EAAE,MAAM;QACjB,UAAU,EAAE;YACV,sFAAsF;YACtF,IAAI,EAAE,SAAS,CAAC,UAAU;YAC1B,IAAI,EAAE,YAAY;SACnB;QACD,OAAO,EAAE;YACP,QAAQ,EACN,CAAC,yBAAyB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,yBAAyB,SAAS,CAAC,CAAC,CAAC,SAAS;SAC3F;QACD,OAAO,EAAE,IAAI,CAAA;;;;;;UAMP,SAAS,CAAC,MAAM,KAAK,CAAC;YACtB,CAAC,CAAC,IAAI,CAAA;;;;aAIH;YACH,CAAC,CAAC,IAAI,CAAA;;;;;;;sBAOM,SAAS,CAAC,GAAG,CACb,CAAC,QAAQ,EAAE,EAAE,CAAC,IAAI,CAAA;;;8BAGV,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC;;;uCAG1B,SAAS,cAAc,QAAQ,CAAC,EAAE;gCACzC,QAAQ,CAAC,KAAK;gCACd,QAAQ,CAAC,MAAM;gBACf,CAAC,CAAC,IAAI,CAAA,wDAAwD;gBAC9D,CAAC,CAAC,EAAE;gCACJ,QAAQ,CAAC,mBAAmB,IAAI,gBAAgB;gBAChD,CAAC,CAAC,IAAI,CAAA;;0CAEI;gBACV,CAAC,CAAC,EAAE;;;;uBAIb,CACF;;;;aAIR;;KAER;KACF,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { z } from 'zod';\n\nimport { formatDateYMD } from '@prairielearn/formatter';\nimport { html } from '@prairielearn/html';\n\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { NewsItemSchema } from '../../lib/db-types.js';\n\nexport const NewsItemRowSchema = NewsItemSchema.extend({\n  unread: z.boolean(),\n});\ntype NewsItemRow = z.infer<typeof NewsItemRowSchema>;\n\nexport function NewsItems({\n  resLocals,\n  newsItems,\n  userIsInstructor,\n}: {\n  resLocals: Record<string, any>;\n  newsItems: NewsItemRow[];\n  userIsInstructor: boolean;\n}) {\n  const { urlPrefix, news_item_notification_count: newsItemNotificationCount } = resLocals as {\n    urlPrefix: string;\n    news_item_notification_count?: number | null;\n  };\n\n  return PageLayout({\n    resLocals,\n    pageTitle: 'News',\n    navContext: {\n      // A value wasn't hardcoded because the type depends on the route that serves the page\n      type: resLocals.navbarType,\n      page: 'news_items',\n    },\n    options: {\n      pageNote:\n        (newsItemNotificationCount ?? 0 > 0) ? `${newsItemNotificationCount} Unread` : undefined,\n    },\n    content: html`\n      <div class=\"card mb-4\">\n        <div class=\"card-header bg-primary text-white d-flex\">\n          <h1>News</h1>\n        </div>\n\n        ${newsItems.length === 0\n          ? html`\n              <div class=\"card-body\">\n                <div class=\"text-center text-muted\">No news items</div>\n              </div>\n            `\n          : html`\n              <div class=\"table-responsive\">\n                <table\n                  class=\"table table-hover table-striped news-items-table\"\n                  aria-label=\"News items\"\n                >\n                  <tbody>\n                    ${newsItems.map(\n                      (newsItem) => html`\n                        <tr>\n                          <td class=\"align-middle\" style=\"width: 1%; white-space: nowrap;\">\n                            ${formatDateYMD(newsItem.date, 'UTC')}\n                          </td>\n                          <td class=\"align-middle\">\n                            <a href=\"${urlPrefix}/news_item/${newsItem.id}/\">\n                              ${newsItem.title}\n                              ${newsItem.unread\n                                ? html`<span class=\"badge text-bg-primary ms-2\">Unread</span>`\n                                : ''}\n                              ${newsItem.visible_to_students && userIsInstructor\n                                ? html`<span class=\"badge text-bg-secondary ms-2\">\n                                    Visible to students\n                                  </span>`\n                                : ''}\n                            </a>\n                          </td>\n                        </tr>\n                      `,\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            `}\n      </div>\n    `,\n  });\n}\n"]}