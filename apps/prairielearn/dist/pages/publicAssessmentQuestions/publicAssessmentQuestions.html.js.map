{"version":3,"file":"publicAssessmentQuestions.html.js","sourceRoot":"","sources":["../../../src/pages/publicAssessmentQuestions/publicAssessmentQuestions.html.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C,OAAO,EAAE,eAAe,EAAE,MAAM,0CAA0C,CAAC;AAC3E,OAAO,EACL,yBAAyB,EACzB,wBAAwB,GACzB,MAAM,8CAA8C,CAAC;AACtD,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAE,YAAY,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,UAAU,EAAE,MAAM,qCAAqC,CAAC;AACjE,OAAO,EAAoD,MAAM,uBAAuB,CAAC;AACzF,OAAO,EAA8B,MAAM,qCAAqC,CAAC;AAEjF,MAAM,UAAU,yBAAyB,CAAC,EACxC,SAAS,EACT,UAAU,EACV,cAAc,EACd,MAAM,EACN,kBAAkB,EAClB,SAAS,GAQV;IACC,OAAO,UAAU,CAAC;QAChB,SAAS;QACT,SAAS,EAAE,WAAW;QACtB,UAAU,EAAE;YACV,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,WAAW;SACrB;QACD,OAAO,EAAE,MAAM,CAAC,YAAY;YAC1B,CAAC,CAAC,IAAI,CAAA;;;gBAGI,cAAc,CAAC,IAAI,IAAI,UAAU,CAAC,MAAM;;cAE1C,wBAAwB,CAAC;gBACzB,SAAS;gBACT,SAAS,EAAE,SAAS,CAAC,SAAS;gBAC9B,SAAS,EAAE,MAAM,CAAC,EAAE;gBACpB,kBAAkB;aACnB,CAAC;;SAEL;YACH,CAAC,CAAC,IAAI,CAAA;;;;uBAIW,SAAS,CAAC,cAAc,WAAW,SAAS,CAAC,MAAM,CAAC,EAAE;;;;SAIpE;KACN,CAAC,CAAC;AACL,CAAC;AAED,SAAS,wBAAwB,CAAC,EAChC,SAAS,EACT,SAAS,EACT,SAAS,EACT,kBAAkB,GAMnB;IACC,MAAM,UAAU,GAAG,CAAC,CAAC;IACrB,OAAO,IAAI,CAAA;;;;;;;;;;;;;YAaD,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC3B,OAAO,IAAI,CAAA;gBACP,yBAAyB,CAAC,QAAQ,EAAE,UAAU,CAAC;;;;4BAInC,SAAS,kBAAkB,SAAS,aAAa,QAAQ,CAAC,WAAW;;sBAE3E,wBAAwB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,KAAK;;;uBAGlD,QAAQ,CAAC,mBAAmB,IAAI,QAAQ,CAAC,GAAG;sBAC7C,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;sBAC1B,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC;;oBAE7B,QAAQ,CAAC,iBAAiB;YAC1B,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE;gBAC5C,OAAO,eAAe,CAAC;oBACrB,UAAU;oBACV,cAAc,EAAE,SAAS;oBACzB,kBAAkB;oBAClB,SAAS,EAAE,IAAI;iBAChB,CAAC,CAAC;YACL,CAAC,CAAC;YACJ,CAAC,CAAC,EAAE;;;aAGX,CAAC;IACJ,CAAC,CAAC;;;;GAIT,CAAC;AACJ,CAAC","sourcesContent":["import { html } from '@prairielearn/html';\n\nimport { AssessmentBadge } from '../../components/AssessmentBadge.html.js';\nimport {\n  AssessmentQuestionHeaders,\n  AssessmentQuestionNumber,\n} from '../../components/AssessmentQuestions.html.js';\nimport { PageLayout } from '../../components/PageLayout.html.js';\nimport { TagBadgeList } from '../../components/TagBadge.html.js';\nimport { TopicBadge } from '../../components/TopicBadge.html.js';\nimport { type Assessment, type AssessmentSet, type Course } from '../../lib/db-types.js';\nimport { type AssessmentQuestionRow } from '../../models/assessment-question.js';\n\nexport function PublicAssessmentQuestions({\n  resLocals,\n  assessment,\n  assessment_set,\n  course,\n  course_instance_id,\n  questions,\n}: {\n  resLocals: Record<string, any>;\n  assessment: Assessment;\n  assessment_set: AssessmentSet;\n  course: Course;\n  course_instance_id: string;\n  questions: AssessmentQuestionRow[];\n}) {\n  return PageLayout({\n    resLocals,\n    pageTitle: 'Questions',\n    navContext: {\n      type: 'public',\n      page: 'public_assessment',\n      subPage: 'questions',\n    },\n    content: course.sharing_name\n      ? html`\n          <div class=\"card mb-4\">\n            <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n              ${assessment_set.name} ${assessment.number}: Questions\n            </div>\n            ${AssessmentQuestionsTable({\n              questions,\n              urlPrefix: resLocals.urlPrefix,\n              course_id: course.id,\n              course_instance_id,\n            })}\n          </div>\n        `\n      : html`\n          <p>\n            This course doesn't have a sharing name. If you are an Owner of this course, please\n            choose a sharing name on the\n            <a href=\"${resLocals.plainUrlPrefix}/course/${resLocals.course.id}/course_admin/sharing\"\n              >course sharing settings page</a\n            >.\n          </p>\n        `,\n  });\n}\n\nfunction AssessmentQuestionsTable({\n  questions,\n  urlPrefix,\n  course_id,\n  course_instance_id,\n}: {\n  questions: AssessmentQuestionRow[];\n  urlPrefix: string;\n  course_id: string;\n  course_instance_id: string;\n}) {\n  const nTableCols = 4;\n  return html`\n    <div class=\"table-responsive\">\n      <table class=\"table table-sm table-hover\">\n        <thead>\n          <tr>\n            <th><span class=\"visually-hidden\">Name</span></th>\n            <th>QID</th>\n            <th>Topic</th>\n            <th>Tags</th>\n            <th>Other Assessments</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${questions.map((question) => {\n            return html`\n              ${AssessmentQuestionHeaders(question, nTableCols)}\n              <tr>\n                <td>\n                  <a\n                    href=\"${urlPrefix}/public/course/${course_id}/question/${question.question_id}/preview\"\n                  >\n                    ${AssessmentQuestionNumber(question)}${question.title}\n                  </a>\n                </td>\n                <td>@${question.course_sharing_name}/${question.qid}</td>\n                <td>${TopicBadge(question.topic)}</td>\n                <td>${TagBadgeList(question.tags)}</td>\n                <td>\n                  ${question.other_assessments\n                    ? question.other_assessments.map((assessment) => {\n                        return AssessmentBadge({\n                          assessment,\n                          plainUrlPrefix: urlPrefix,\n                          course_instance_id,\n                          publicURL: true,\n                        });\n                      })\n                    : ''}\n                </td>\n              </tr>\n            `;\n          })}\n        </tbody>\n      </table>\n    </div>\n  `;\n}\n"]}