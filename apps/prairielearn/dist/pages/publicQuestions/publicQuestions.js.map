{"version":3,"file":"publicQuestions.js","sourceRoot":"","sources":["../../../src/pages/publicQuestions/publicQuestions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,KAAK,KAAK,MAAM,qBAAqB,CAAC;AAE7C,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,8BAA8B,EAAE,MAAM,2BAA2B,CAAC;AAE3E,OAAO,EAAE,aAAa,EAAE,MAAM,2BAA2B,CAAC;AAE1D,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAE7C,MAAM,CAAC,GAAG,CACR,GAAG,EACH,YAAY,CAAC,KAAK,WAAW,GAAG,EAAE,GAAG;IACnC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACjE,MAAM,sBAAsB,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,kBAAkB,EAAE;QACxE,SAAS,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;QAC/B,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc;KACjD,CAAC,CAAC;IAEH,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC5B,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IACpD,CAAC;IAED,MAAM,SAAS,GAAG,MAAM,8BAA8B,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC7E,GAAG,CAAC,IAAI,CACN,aAAa,CAAC;QACZ,SAAS;QACT,qBAAqB,EAAE,KAAK;QAC5B,SAAS,EAAE,GAAG,CAAC,MAAM;KACtB,CAAC,CACH,CAAC;AACJ,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\n\nimport { features } from '../../lib/features/index.js';\nimport { selectCourseById } from '../../models/course.js';\nimport { selectPublicQuestionsForCourse } from '../../models/questions.js';\n\nimport { QuestionsPage } from './publicQuestions.html.js';\n\nconst router = Router({ mergeParams: true });\n\nrouter.get(\n  '/',\n  asyncHandler(async function (req, res) {\n    res.locals.course = await selectCourseById(req.params.course_id);\n    const questionSharingEnabled = await features.enabled('question-sharing', {\n      course_id: res.locals.course.id,\n      institution_id: res.locals.course.institution_id,\n    });\n\n    if (!questionSharingEnabled) {\n      throw new error.HttpStatusError(404, 'Not Found');\n    }\n\n    const questions = await selectPublicQuestionsForCourse(res.locals.course.id);\n    res.send(\n      QuestionsPage({\n        questions,\n        showAddQuestionButton: false,\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nexport default router;\n"]}