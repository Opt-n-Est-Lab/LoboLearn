{"version":3,"file":"studentAssessment.html.js","sourceRoot":"","sources":["../../../src/pages/studentAssessment/studentAssessment.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { compiledScriptTag } from '@prairielearn/compiled-assets';\nimport { html } from '@prairielearn/html';\n\nimport { GroupWorkInfoContainer } from '../../components/GroupWorkInfoContainer.html.js';\nimport { HeadContents } from '../../components/HeadContents.html.js';\nimport { Navbar } from '../../components/Navbar.html.js';\nimport { type Assessment, type GroupConfig, type User } from '../../lib/db-types.js';\nimport { type GroupInfo } from '../../lib/groups.js';\n\nexport function StudentAssessment({\n  resLocals,\n  groupConfig,\n  groupInfo,\n  userCanAssignRoles,\n}: {\n  resLocals: Record<string, any>;\n  groupConfig?: GroupConfig;\n  groupInfo?: GroupInfo | null;\n  userCanAssignRoles?: boolean;\n}) {\n  const { assessment_set, assessment, course, authz_result, user, __csrf_token } = resLocals;\n\n  return html`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        ${HeadContents({ resLocals })} ${compiledScriptTag('studentAssessmentClient.ts')}\n      </head>\n      <body>\n        ${Navbar({ resLocals })}\n        <main id=\"content\" class=\"container\">\n          <div class=\"card mb-4\">\n            <div class=\"card-header bg-primary text-white\">\n              <h1>${assessment_set.abbreviation}${assessment.number}: ${assessment.title}</h1>\n              ${assessment.group_work ? html`<i class=\"fas fa-users\"></i>` : ''}\n            </div>\n\n            <div class=\"card-body\">\n              ${authz_result.mode === 'Exam' || authz_result.password != null\n                ? html`\n                    <p class=\"lead text-center\">\n                      Please wait until instructed to start by a proctor\n                    </p>\n                  `\n                : ''}\n\n              <p class=\"lead text-center\">\n                This is\n                <strong>${assessment_set.name} ${assessment.number}: ${assessment.title}</strong>\n                for <strong>${course.short_name}</strong>\n              </p>\n\n              ${authz_result.time_limit_min != null\n                ? html`\n                    <p class=\"lead text-center\">\n                      The time limit for this assessment is\n                      <strong>\n                        ${authz_result.time_limit_min}\n                        ${authz_result.time_limit_min === 1 ? 'minute' : 'minutes'}\n                      </strong>\n                    </p>\n                  `\n                : ''}\n              ${assessment.group_work\n                ? StudentGroupControls({ groupConfig, groupInfo, userCanAssignRoles, resLocals })\n                : StartAssessmentForm({ assessment, user, __csrf_token, startAllowed: true })}\n            </div>\n          </div>\n        </main>\n      </body>\n    </html>\n  `.toString();\n}\nfunction StartAssessmentForm({\n  assessment,\n  user,\n  __csrf_token,\n  startAllowed,\n}: {\n  assessment: Assessment;\n  user: User;\n  __csrf_token: string;\n  startAllowed: boolean;\n}) {\n  return html`\n    ${startAllowed && assessment.type === 'Exam' && assessment.require_honor_code\n      ? HonorPledge({ user, groupWork: !!assessment.group_work })\n      : ''}\n    <form\n      id=\"confirm-form\"\n      name=\"confirm-form\"\n      method=\"POST\"\n      class=\"mt-4 d-flex justify-content-center\"\n    >\n      <input type=\"hidden\" name=\"__action\" value=\"new_instance\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n      <button\n        id=\"start-assessment\"\n        type=\"submit\"\n        class=\"btn btn-primary\"\n        ${(assessment.type === 'Exam' && assessment.require_honor_code) || !startAllowed\n          ? 'disabled'\n          : ''}\n      >\n        Start assessment\n      </button>\n    </form>\n  `;\n}\n\nfunction HonorPledge({ user, groupWork }: { user: User; groupWork: boolean }) {\n  return html`\n    <div class=\"card card-secondary mb-4 test-class-honor-code\">\n      <ul class=\"list-group list-group-flush\">\n        <li class=\"list-group-item py-2\">\n          I certify that I am ${user.name} and ${groupWork ? 'our group is' : 'I am'} allowed to\n          take this assessment.\n        </li>\n        <li class=\"list-group-item py-2\">\n          ${groupWork ? 'We' : 'I'} pledge on ${groupWork ? 'our' : 'my'} honor that\n          ${groupWork ? 'we' : 'I'} will not give or receive any unauthorized assistance on this\n          assessment and that all work will be ${groupWork ? 'our' : 'my'} own.\n        </li>\n      </ul>\n\n      <div class=\"card-footer d-flex justify-content-center\">\n        <span class=\"form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"certify-pledge\" />\n          <label class=\"form-check-label fw-bold\" for=\"certify-pledge\">\n            I certify and pledge the above.\n          </label>\n        </span>\n      </div>\n    </div>\n  `;\n}\n\nfunction StudentGroupControls({\n  groupConfig,\n  groupInfo,\n  userCanAssignRoles = false,\n  resLocals,\n}: {\n  resLocals: Record<string, any>;\n  groupConfig?: GroupConfig;\n  groupInfo?: GroupInfo | null;\n  userCanAssignRoles?: boolean;\n}) {\n  if (groupConfig == null) return '';\n\n  const { user, __csrf_token, assessment } = resLocals;\n  if (groupInfo == null) {\n    return GroupCreationJoinForm({ groupConfig, __csrf_token });\n  }\n\n  return html`\n    ${GroupWorkInfoContainer({\n      groupConfig,\n      groupInfo,\n      userCanAssignRoles,\n      csrfToken: __csrf_token,\n    })}\n    ${StartAssessmentForm({ assessment, user, __csrf_token, startAllowed: groupInfo.start })}\n    ${groupConfig.minimum != null && groupConfig.minimum - groupInfo.groupSize > 0\n      ? html`\n          <p class=\"text-center\">\n            * Minimum group size is ${groupConfig.minimum}. You need at least\n            ${groupConfig.minimum - groupInfo.groupSize} more group member(s) to start.\n          </p>\n        `\n      : ''}\n  `;\n}\n\nfunction GroupCreationJoinForm({\n  groupConfig,\n  __csrf_token,\n}: {\n  groupConfig: GroupConfig;\n  __csrf_token: string;\n}) {\n  if (!groupConfig.student_authz_join && !groupConfig.student_authz_create) {\n    return html`\n      <p class=\"text-center\">\n        This is a group assessment. Please wait for the instructor to assign groups.\n      </p>\n    `;\n  }\n\n  return html`\n    <p class=\"text-center\">\n      ${(groupConfig.minimum ?? 0) > 1\n        ? html`\n            This is a group assessment. A group must have\n            ${groupConfig.maximum != null\n              ? `between ${groupConfig.minimum} and ${groupConfig.maximum}`\n              : `at least ${groupConfig.minimum}`}\n            students.\n          `\n        : html`\n            This assessment can be done individually or in groups.\n            ${groupConfig.maximum\n              ? `A group must have no more than ${groupConfig.maximum} students.`\n              : ''}\n            <br />To work individually, you must also create a group, but you don't need to share\n            your join code.\n          `}\n    </p>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        ${groupConfig.student_authz_create\n          ? html`\n              <div class=\"col-sm bg-light py-4 px-4 border\">\n                <form id=\"create-form\" name=\"create-form\" method=\"POST\">\n                  <label for=\"groupNameInput\">Group name</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"groupNameInput\"\n                    name=\"groupName\"\n                    maxlength=\"30\"\n                    placeholder=\"e.g. teamOne\"\n                    aria-label=\"Group name\"\n                    aria-describedby=\"groupNameHelp\"\n                  />\n                  <small id=\"groupNameHelp\" class=\"form-text text-muted\">\n                    Group names can only contain letters and numbers, with maximum length of 30\n                    characters.\n                  </small>\n                  <div class=\"mt-4 d-flex justify-content-center\">\n                    <div class=\"mb-3\">\n                      <input type=\"hidden\" name=\"__action\" value=\"create_group\" />\n                      <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n                      <button type=\"submit\" class=\"btn btn-primary\">Create new group</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            `\n          : ''}\n        ${groupConfig.student_authz_join\n          ? html`\n              <div class=\"col-sm bg-light py-4 px-4 border\">\n                <form id=\"joingroup-form\" name=\"joingroup-form\" method=\"POST\">\n                  <label for=\"joinCodeInput\">Join code</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"joinCodeInput\"\n                    name=\"join_code\"\n                    placeholder=\"abcd-1234\"\n                  />\n                  <div class=\"mt-4 d-flex justify-content-center\">\n                    <div class=\"mb-3\">\n                      <input type=\"hidden\" name=\"__action\" value=\"join_group\" />\n                      <input type=\"hidden\" name=\"__csrf_token\" value=\"${__csrf_token}\" />\n                      <button type=\"submit\" class=\"btn btn-primary\">Join group</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            `\n          : ''}\n      </div>\n    </div>\n  `;\n}\n"]}