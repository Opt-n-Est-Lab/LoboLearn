{"version":3,"file":"studentAssessment.js","sourceRoot":"","sources":["../../../src/pages/studentAssessment/studentAssessment.ts"],"names":[],"mappings":"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","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { AugmentedError, HttpStatusError } from '@prairielearn/error';\nimport { flash } from '@prairielearn/flash';\n\nimport { makeAssessmentInstance } from '../../lib/assessment.js';\nimport {\n  GroupOperationError,\n  canUserAssignGroupRoles,\n  createGroup,\n  getGroupConfig,\n  getGroupId,\n  getGroupInfo,\n  joinGroup,\n  leaveGroup,\n  updateGroupRoles,\n} from '../../lib/groups.js';\nimport { getClientFingerprintId } from '../../middlewares/clientFingerprint.js';\nimport logPageView from '../../middlewares/logPageView.js';\nimport selectAndAuthzAssessment from '../../middlewares/selectAndAuthzAssessment.js';\nimport { StudentAssessmentAccess } from '../../middlewares/studentAssessmentAccess.html.js';\nimport studentAssessmentAccess, {\n  checkPasswordOrRedirect,\n} from '../../middlewares/studentAssessmentAccess.js';\nimport studentAssessmentRedirect from '../../middlewares/studentAssessmentRedirect.js';\n\nimport { StudentAssessment } from './studentAssessment.html.js';\n\nconst router = Router({ mergeParams: true });\n\nrouter.use(selectAndAuthzAssessment);\nrouter.use(studentAssessmentRedirect);\nrouter.use(studentAssessmentAccess);\nrouter.use(logPageView('studentAssessment'));\n\nrouter.get(\n  '/',\n  asyncHandler(async function (req, res) {\n    if (!(res.locals.authz_result?.active ?? true)) {\n      // If the student had started the assessment already, they would have been\n      // redirected to the assessment instance by the `studentAssessmentRedirect`\n      // middleware. So, if we're here, it means that the student did not start\n      // the assessment (or that they're trying to start a new instance of a\n      // multi-instance assessment), and the assessment is not active.\n      //\n      // This check means that students will be unable to join a group if an\n      // assessment is inactive, which we're deeming to be sensible behavior.\n      res.status(403).send(StudentAssessmentAccess({ resLocals: res.locals }));\n      return;\n    }\n\n    if (res.locals.assessment.multiple_instance && res.locals.assessment.type === 'Homework') {\n      throw new AugmentedError('\"Homework\" assessments do not support multiple instances', {\n        data: { assessment: res.locals.assessment },\n      });\n    }\n    // Before allowing the user to create a new assessment instance, we need\n    // to check if the current access rules require a password. If they do,\n    // we'll ensure that the password has already been entered before allowing\n    // students to create and start a new assessment instance.\n    if (!checkPasswordOrRedirect(req, res)) return;\n\n    // For homeworks without group work, create the new assessment instance\n    // and redirect to it without further student action.\n    if (!res.locals.assessment.group_work && res.locals.assessment.type === 'Homework') {\n      const time_limit_min = null;\n      const client_fingerprint_id = await getClientFingerprintId(req, res);\n      const assessment_instance_id = await makeAssessmentInstance({\n        assessment: res.locals.assessment,\n        user_id: res.locals.user.user_id,\n        authn_user_id: res.locals.authn_user.user_id,\n        mode: res.locals.authz_data.mode,\n        time_limit_min,\n        date: res.locals.authz_data.date,\n        client_fingerprint_id,\n      });\n      res.redirect(`${res.locals.urlPrefix}/assessment_instance/${assessment_instance_id}`);\n      return;\n    }\n\n    if (!res.locals.assessment.group_work) {\n      res.send(StudentAssessment({ resLocals: res.locals }));\n      return;\n    }\n\n    // Get the group config info\n    const groupConfig = await getGroupConfig(res.locals.assessment.id);\n\n    // Check whether the user is currently in a group in the current assessment by trying to get a group_id\n    const groupId = await getGroupId(res.locals.assessment.id, res.locals.user.user_id);\n\n    const groupInfo = groupId === null ? null : await getGroupInfo(groupId, groupConfig);\n    const userCanAssignRoles =\n      groupInfo != null &&\n      groupConfig.has_roles &&\n      (canUserAssignGroupRoles(groupInfo, res.locals.user.user_id) ||\n        res.locals.authz_data.has_course_instance_permission_edit);\n    res.send(\n      StudentAssessment({ resLocals: res.locals, groupConfig, groupInfo, userCanAssignRoles }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async function (req, res) {\n    // No, you do not need to verify authz_result.authorized_edit (indeed, this flag exists\n    // only for an assessment instance, not an assessment).\n    //\n    // The assessment that is created here will be owned by the effective user. The only\n    // reason to worry, therefore, is if the effective user has a different UID than the\n    // authn user. This is only allowed, however, if the authn user has permission to edit\n    // student data in the course instance (which has already been checked), exactly the\n    // permission required to create an assessment for the effective user.\n\n    if (req.body.__action === 'new_instance') {\n      // Before allowing the user to create a new assessment instance, we need\n      // to check if the current access rules require a password. If they do,\n      // we'll ensure that the password has already been entered before allowing\n      // students to create and start a new assessment instance.\n      if (!checkPasswordOrRedirect(req, res)) return;\n\n      if (res.locals.assessment.group_work) {\n        const groupConfig = await getGroupConfig(res.locals.assessment.id);\n        const groupId = await getGroupId(res.locals.assessment.id, res.locals.user.user_id);\n        if (groupId === null) {\n          throw new HttpStatusError(403, 'Cannot create a new instance while not in a group.');\n        }\n        const groupInfo = await getGroupInfo(groupId, groupConfig);\n        if (!groupInfo.start) {\n          throw new HttpStatusError(\n            403,\n            'Group has invalid composition or role assignment. Cannot start assessment.',\n          );\n        }\n      }\n\n      const time_limit_min =\n        res.locals.assessment.type === 'Exam' ? res.locals.authz_result.time_limit_min : null;\n      const client_fingerprint_id = await getClientFingerprintId(req, res);\n      const assessment_instance_id = await makeAssessmentInstance({\n        assessment: res.locals.assessment,\n        user_id: res.locals.user.user_id,\n        authn_user_id: res.locals.authn_user.user_id,\n        mode: res.locals.authz_data.mode,\n        time_limit_min,\n        date: res.locals.req_date,\n        client_fingerprint_id,\n      });\n      res.redirect(`${res.locals.urlPrefix}/assessment_instance/${assessment_instance_id}`);\n    } else if (req.body.__action === 'join_group') {\n      await joinGroup(\n        req.body.join_code,\n        res.locals.assessment.id,\n        res.locals.user.uid,\n        res.locals.authn_user.user_id,\n      ).catch((err) => {\n        if (err instanceof GroupOperationError) {\n          flash('error', err.message);\n        } else {\n          throw err;\n        }\n      });\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'create_group') {\n      await createGroup(\n        req.body.groupName,\n        res.locals.assessment.id,\n        [res.locals.user.uid],\n        res.locals.authn_user.user_id,\n      ).catch((err) => {\n        if (err instanceof GroupOperationError) {\n          flash('error', err.message);\n        } else {\n          throw err;\n        }\n      });\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'update_group_roles') {\n      // Check whether the user is currently in a group\n      const groupId = await getGroupId(res.locals.assessment.id, res.locals.user.user_id);\n      if (groupId == null) {\n        throw new HttpStatusError(403, 'Cannot change group roles while not in a group.');\n      }\n      await updateGroupRoles(\n        req.body,\n        res.locals.assessment.id,\n        groupId,\n        res.locals.user.user_id,\n        res.locals.authz_data.has_course_instance_permission_edit,\n        res.locals.authn_user.user_id,\n      );\n      res.redirect(req.originalUrl);\n    } else if (req.body.__action === 'leave_group') {\n      await leaveGroup(\n        res.locals.assessment.id,\n        res.locals.user.user_id,\n        res.locals.authn_user.user_id,\n      );\n      res.redirect(req.originalUrl);\n    } else {\n      throw new HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nexport default router;\n"]}