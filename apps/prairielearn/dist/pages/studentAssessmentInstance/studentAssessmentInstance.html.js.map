{"version":3,"file":"studentAssessmentInstance.html.js","sourceRoot":"","sources":["../../../src/pages/studentAssessmentInstance/studentAssessmentInstance.html.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { EncodedData } from '@prairielearn/browser-utils';\nimport { html, unsafeHtml } from '@prairielearn/html';\nimport { run } from '@prairielearn/run';\n\nimport {\n  RegenerateInstanceAlert,\n  RegenerateInstanceModal,\n} from '../../components/AssessmentRegenerate.html.js';\nimport { GroupWorkInfoContainer } from '../../components/GroupWorkInfoContainer.html.js';\nimport { HeadContents } from '../../components/HeadContents.html.js';\nimport { InstructorInfoPanel } from '../../components/InstructorInfoPanel.html.js';\nimport { Modal } from '../../components/Modal.html.js';\nimport { Navbar } from '../../components/Navbar.html.js';\nimport { PersonalNotesPanel } from '../../components/PersonalNotesPanel.html.js';\nimport {\n  ExamQuestionAvailablePoints,\n  ExamQuestionStatus,\n  InstanceQuestionPoints,\n  QuestionVariantHistory,\n} from '../../components/QuestionScore.html.js';\nimport { Scorebar } from '../../components/Scorebar.html.js';\nimport { StudentAccessRulesPopover } from '../../components/StudentAccessRulesPopover.html.js';\nimport { TimeLimitExpiredModal } from '../../components/TimeLimitExpiredModal.html.js';\nimport { compiledScriptTag } from '../../lib/assets.js';\nimport {\n  type AssessmentInstance,\n  DateFromISOString,\n  type GroupConfig,\n  IdSchema,\n  InstanceQuestionSchema,\n} from '../../lib/db-types.js';\nimport { formatPoints } from '../../lib/format.js';\nimport { type GroupInfo, getRoleNamesForUser } from '../../lib/groups.js';\nimport { SimpleVariantWithScoreSchema } from '../../models/variant.js';\n\nexport const InstanceQuestionRowSchema = InstanceQuestionSchema.extend({\n  start_new_zone: z.boolean(),\n  zone_id: IdSchema,\n  zone_title: z.string().nullable(),\n  question_title: z.string(),\n  max_points: z.number().nullable(),\n  max_manual_points: z.number().nullable(),\n  max_auto_points: z.number().nullable(),\n  init_points: z.number().nullable(),\n  row_order: z.number(),\n  question_number: z.string(),\n  zone_max_points: z.number().nullable(),\n  zone_has_max_points: z.boolean(),\n  zone_best_questions: z.number().nullable(),\n  zone_has_best_questions: z.boolean(),\n  file_count: z.number(),\n  sequence_locked: z.boolean(),\n  prev_advance_score_perc: z.number().nullable(),\n  prev_title: z.string().nullable(),\n  prev_sequence_locked: z.boolean().nullable(),\n  allow_grade_left_ms: z.coerce.number(),\n  allow_grade_date: DateFromISOString.nullable(),\n  allow_grade_interval: z.string(),\n  previous_variants: z.array(SimpleVariantWithScoreSchema).optional(),\n  group_role_permissions: z\n    .object({\n      can_view: z.boolean(),\n      can_submit: z.boolean(),\n    })\n    .optional(),\n});\nexport type InstanceQuestionRow = z.infer<typeof InstanceQuestionRowSchema>;\n\nexport function StudentAssessmentInstance({\n  instance_question_rows,\n  showTimeLimitExpiredModal,\n  groupConfig,\n  groupInfo,\n  userCanAssignRoles,\n  userCanDeleteAssessmentInstance,\n  resLocals,\n}: {\n  instance_question_rows: InstanceQuestionRow[];\n  showTimeLimitExpiredModal: boolean;\n  userCanDeleteAssessmentInstance: boolean;\n  resLocals: Record<string, any>;\n} & (\n  | {\n      groupConfig: GroupConfig;\n      groupInfo: GroupInfo;\n      userCanAssignRoles: boolean;\n    }\n  | {\n      groupConfig?: undefined;\n      groupInfo?: undefined;\n      userCanAssignRoles?: undefined;\n    }\n)) {\n  let savedAnswers = 0;\n  let suspendedSavedAnswers = 0;\n  instance_question_rows.forEach((question) => {\n    if (question.status === 'saved') {\n      if (question.allow_grade_left_ms > 0) {\n        suspendedSavedAnswers++;\n      } else if (question.max_auto_points || !question.max_manual_points) {\n        // Note that we exclude questions that are not auto-graded from the count.\n        // This count is used to determine whether the \"Grade X saved answers\"\n        // button should be enabled, and clicking that button won't do any good for\n        // manually-graded questions.\n        savedAnswers++;\n      }\n    }\n  });\n\n  // Keep this in sync with the `InstanceQuestionTableHeader` function below.\n  const zoneTitleColspan = run(() => {\n    const trailingColumnsCount =\n      resLocals.assessment.type === 'Exam'\n        ? resLocals.has_auto_grading_question && resLocals.assessment.allow_real_time_grading\n          ? 2\n          : resLocals.has_auto_grading_question && resLocals.has_manual_grading_question\n            ? 3\n            : 1\n        : (resLocals.has_auto_grading_question ? 2 : 0) + 1;\n\n    return resLocals.assessment.type === 'Exam'\n      ? resLocals.has_auto_grading_question &&\n        resLocals.has_manual_grading_question &&\n        resLocals.assessment.allow_real_time_grading\n        ? 6\n        : 2 + trailingColumnsCount\n      : resLocals.has_auto_grading_question && resLocals.has_manual_grading_question\n        ? 6\n        : 1 + trailingColumnsCount;\n  });\n\n  const userGroupRoles = groupInfo\n    ? getRoleNamesForUser(groupInfo, resLocals.authz_data.user).join(', ')\n    : null;\n\n  return html`\n    <!doctype html>\n    <html lang=\"en\">\n      <head>\n        ${HeadContents({ resLocals })}\n        ${resLocals.assessment.type === 'Exam'\n          ? html`${compiledScriptTag('examTimeLimitCountdown.ts')}\n            ${EncodedData(\n              {\n                serverRemainingMS: resLocals.assessment_instance_remaining_ms,\n                serverTimeLimitMS: resLocals.assessment_instance_time_limit_ms,\n                serverUpdateURL: `${resLocals.urlPrefix}/assessment_instance/${resLocals.assessment_instance.id}/time_remaining`,\n                canTriggerFinish: resLocals.authz_result.authorized_edit,\n                showsTimeoutWarning: true,\n                reloadOnFail: true,\n                csrfToken: resLocals.__csrf_token,\n              },\n              'time-limit-data',\n            )}`\n          : ''}\n      </head>\n      <body>\n        ${Navbar({ resLocals, navPage: 'assessment_instance' })}\n        ${resLocals.assessment.type === 'Exam' && resLocals.authz_result.authorized_edit\n          ? ConfirmFinishModal({\n              instance_question_rows,\n              csrfToken: resLocals.__csrf_token,\n            })\n          : ''}\n        ${showTimeLimitExpiredModal ? TimeLimitExpiredModal({ showAutomatically: true }) : ''}\n        ${userCanDeleteAssessmentInstance\n          ? RegenerateInstanceModal({ csrfToken: resLocals.__csrf_token })\n          : ''}\n\n        <main id=\"content\" class=\"container\">\n          ${userCanDeleteAssessmentInstance ? RegenerateInstanceAlert() : ''}\n          <div class=\"card mb-4\">\n            <div class=\"card-header bg-primary text-white d-flex align-items-center\">\n              <h1>\n                ${resLocals.assessment_set.abbreviation}${resLocals.assessment.number}:\n                ${resLocals.assessment.title}\n              </h1>\n              ${resLocals.assessment.group_work ? html`&nbsp;<i class=\"fas fa-users\"></i>` : ''}\n            </div>\n\n            <div class=\"card-body\">\n              ${!resLocals.assessment.allow_real_time_grading && resLocals.assessment_instance.open\n                ? html`\n                    <div class=\"alert alert-warning\">\n                      This assessment will only be graded after it is finished. You should save\n                      answers for all questions and your exam will be graded later. You can use the\n                      <span class=\"badge badge-outline text-bg-light\">Finish assessment</span>\n                      button below to finish and calculate your final grade.\n                    </div>\n                  `\n                : ''}\n              <div class=\"row align-items-center\">\n                ${!resLocals.assessment.allow_real_time_grading &&\n                resLocals.assessment_instance.open\n                  ? html`\n                      <div class=\"col-md-3 col-sm-12\">\n                        Total points: ${formatPoints(resLocals.assessment_instance.max_points)}\n                        ${resLocals.assessment_instance.max_bonus_points\n                          ? html`\n                              <br />\n                              (${resLocals.assessment_instance.max_bonus_points} bonus\n                              ${resLocals.assessment_instance.max_bonus_points > 1\n                                ? 'points'\n                                : 'point'}\n                              possible)\n                            `\n                          : ''}\n                      </div>\n                      <div class=\"col-md-9 col-sm-12\">\n                        ${AssessmentStatus({\n                          assessment_instance: resLocals.assessment_instance,\n                          authz_result: resLocals.authz_result,\n                        })}\n                      </div>\n                    `\n                  : html`\n                      <div class=\"col-md-3 col-sm-6\">\n                        Total points:\n                        ${formatPoints(resLocals.assessment_instance.points)}/${formatPoints(\n                          resLocals.assessment_instance.max_points,\n                        )}\n                        ${resLocals.assessment_instance.max_bonus_points\n                          ? html`\n                              <br />\n                              (${resLocals.assessment_instance.max_bonus_points} bonus\n                              ${resLocals.assessment_instance.max_bonus_points > 1\n                                ? 'points'\n                                : 'point'}\n                              possible)\n                            `\n                          : ''}\n                      </div>\n                      <div class=\"col-md-3 col-sm-6\">\n                        ${Scorebar(resLocals.assessment_instance.score_perc)}\n                      </div>\n                      <div class=\"col-md-6 col-sm-12\">\n                        ${AssessmentStatus({\n                          assessment_instance: resLocals.assessment_instance,\n                          authz_result: resLocals.authz_result,\n                        })}\n                      </div>\n                    `}\n                ${groupConfig != null\n                  ? html`\n                      <div class=\"col-lg-12\">\n                        ${GroupWorkInfoContainer({\n                          groupConfig,\n                          groupInfo,\n                          userCanAssignRoles,\n                          csrfToken: resLocals.__csrf_token,\n                        })}\n                      </div>\n                    `\n                  : ''}\n              </div>\n\n              ${resLocals.assessment_instance.open && resLocals.assessment_instance_remaining_ms\n                ? html`\n                    <div class=\"alert alert-secondary mt-4\" role=\"alert\">\n                      <div class=\"row\">\n                        <div class=\"col-md-2 col-sm-12 col-xs-12\">\n                          <div id=\"countdownProgress\"></div>\n                        </div>\n                        <div class=\"col-md-10 col-sm-12 col-xs-12\">\n                          Time remaining: <span id=\"countdownDisplay\"></span>\n                        </div>\n                      </div>\n                    </div>\n                  `\n                : ''}\n              ${resLocals.assessment_text_templated\n                ? html`\n                    <div class=\"card bg-light mb-0 mt-4\">\n                      <div class=\"card-body\">\n                        ${unsafeHtml(resLocals.assessment_text_templated)}\n                      </div>\n                    </div>\n                  `\n                : ''}\n            </div>\n\n            <table\n              class=\"table table-sm table-hover\"\n              aria-label=\"Questions\"\n              data-testid=\"assessment-questions\"\n            >\n              <thead>\n                ${InstanceQuestionTableHeader({ resLocals })}\n              </thead>\n              <tbody>\n                ${instance_question_rows.map(\n                  (instance_question_row) => html`\n                    ${instance_question_row.start_new_zone && instance_question_row.zone_title\n                      ? html`\n                          <tr>\n                            <th colspan=\"${zoneTitleColspan}\">\n                              <div class=\"d-flex align-items-center\">\n                                <span class=\"me-2\">${instance_question_row.zone_title}</span>\n                                ${instance_question_row.zone_has_max_points\n                                  ? ZoneInfoPopover({\n                                      label: `Maximum ${instance_question_row.zone_max_points} points`,\n                                      content: `Of the points that you are awarded for answering these questions, at most ${instance_question_row.zone_max_points} will count toward your total points.`,\n                                    })\n                                  : ''}\n                                ${instance_question_row.zone_has_best_questions\n                                  ? ZoneInfoPopover({\n                                      label: `Best ${instance_question_row.zone_best_questions} questions`,\n                                      content: `Of these questions, only the ${instance_question_row.zone_best_questions} with the highest number of awarded points will count toward your total points.`,\n                                    })\n                                  : ''}\n                              </div>\n                            </th>\n                          </tr>\n                        `\n                      : ''}\n                    <tr\n                      class=\"${instance_question_row.sequence_locked\n                        ? 'bg-light pl-sequence-locked'\n                        : ''}\"\n                    >\n                      <td>\n                        ${RowLabel({\n                          instance_question_row,\n                          userGroupRoles,\n                          urlPrefix: resLocals.urlPrefix,\n                          rowLabelText:\n                            resLocals.assessment.type === 'Exam'\n                              ? `Question ${instance_question_row.question_number}`\n                              : `${instance_question_row.question_number}. ${instance_question_row.question_title}`,\n                        })}\n                      </td>\n                      ${resLocals.assessment.type === 'Exam'\n                        ? html`\n                            <td class=\"text-center\">\n                              ${ExamQuestionStatus({\n                                instance_question: instance_question_row,\n                                assessment_question: instance_question_row, // Required fields are in instance_question\n                              })}\n                            </td>\n                            ${resLocals.has_auto_grading_question &&\n                            resLocals.assessment.allow_real_time_grading\n                              ? html`\n                                  <td class=\"text-center\">\n                                    ${instance_question_row.max_auto_points\n                                      ? ExamQuestionAvailablePoints({\n                                          open:\n                                            resLocals.assessment_instance.open &&\n                                            instance_question_row.open,\n                                          currentWeight:\n                                            (instance_question_row.points_list_original?.[\n                                              instance_question_row.number_attempts\n                                            ] ?? 0) -\n                                            (instance_question_row.max_manual_points ?? 0),\n                                          pointsList: instance_question_row.points_list?.map(\n                                            (p) =>\n                                              p - (instance_question_row.max_manual_points ?? 0),\n                                          ),\n                                          highestSubmissionScore:\n                                            instance_question_row.highest_submission_score,\n                                        })\n                                      : html`&mdash;`}\n                                  </td>\n                                `\n                              : ''}\n                            ${resLocals.assessment.allow_real_time_grading ||\n                            !resLocals.assessment_instance.open\n                              ? html`\n                                  ${resLocals.has_auto_grading_question &&\n                                  resLocals.has_manual_grading_question\n                                    ? html`\n                                        <td class=\"text-center\">\n                                          ${InstanceQuestionPoints({\n                                            instance_question: instance_question_row,\n                                            assessment_question: instance_question_row, // Required fields are present in instance_question\n                                            component: 'auto',\n                                          })}\n                                        </td>\n                                        <td class=\"text-center\">\n                                          ${InstanceQuestionPoints({\n                                            instance_question: instance_question_row,\n                                            assessment_question: instance_question_row, // Required fields are present in instance_question\n                                            component: 'manual',\n                                          })}\n                                        </td>\n                                      `\n                                    : ''}\n                                  <td class=\"text-center\">\n                                    ${InstanceQuestionPoints({\n                                      instance_question: instance_question_row,\n                                      assessment_question: instance_question_row, // Required fields are present in instance_question\n                                      component: 'total',\n                                    })}\n                                  </td>\n                                `\n                              : html`\n                                  ${resLocals.has_auto_grading_question &&\n                                  resLocals.has_manual_grading_question\n                                    ? html`\n                                        <td class=\"text-center\">\n                                          ${formatPoints(instance_question_row.max_auto_points)}\n                                        </td>\n                                        <td class=\"text-center\">\n                                          ${formatPoints(instance_question_row.max_manual_points)}\n                                        </td>\n                                      `\n                                    : ''}\n                                  <td class=\"text-center\">\n                                    ${formatPoints(instance_question_row.max_points)}\n                                  </td>\n                                `}\n                          `\n                        : html`\n                            ${resLocals.has_auto_grading_question\n                              ? html`\n                                  <td class=\"text-center\">\n                                    ${run(() => {\n                                      if (!instance_question_row.max_auto_points) {\n                                        return html`&mdash;`;\n                                      }\n\n                                      // Compute the current \"auto\" value by subtracting the manual points.\n                                      // We use this because `current_value` doesn't account for manual points.\n                                      // We don't want to mislead the student into thinking that they can earn\n                                      // more points than they actually can.\n                                      const currentAutoValue =\n                                        (instance_question_row.current_value ?? 0) -\n                                        (instance_question_row.max_manual_points ?? 0);\n\n                                      return formatPoints(currentAutoValue);\n                                    })}\n                                  </td>\n                                  <td class=\"text-center\">\n                                    ${QuestionVariantHistory({\n                                      urlPrefix: resLocals.urlPrefix,\n                                      instanceQuestionId: instance_question_row.id,\n                                      previousVariants: instance_question_row.previous_variants,\n                                    })}\n                                  </td>\n                                `\n                              : ''}\n                            ${resLocals.has_auto_grading_question &&\n                            resLocals.has_manual_grading_question\n                              ? html`\n                                  <td class=\"text-center\">\n                                    ${InstanceQuestionPoints({\n                                      instance_question: instance_question_row,\n                                      assessment_question: instance_question_row, // Required fields are present in instance_question\n                                      component: 'auto',\n                                    })}\n                                  </td>\n                                  <td class=\"text-center\">\n                                    ${InstanceQuestionPoints({\n                                      instance_question: instance_question_row,\n                                      assessment_question: instance_question_row, // Required fields are present in instance_question\n                                      component: 'manual',\n                                    })}\n                                  </td>\n                                `\n                              : ''}\n                            <td class=\"text-center\">\n                              ${InstanceQuestionPoints({\n                                instance_question: instance_question_row,\n                                assessment_question: instance_question_row, // Required fields are present in instance_question\n                                component: 'total',\n                              })}\n                            </td>\n                          `}\n                    </tr>\n                  `,\n                )}\n              </tbody>\n            </table>\n\n            <div class=\"card-footer\">\n              ${resLocals.assessment.type === 'Exam' &&\n              resLocals.assessment_instance.open &&\n              resLocals.authz_result.active\n                ? html`\n                    ${resLocals.assessment.allow_real_time_grading\n                      ? html`\n                          <form name=\"grade-form\" method=\"POST\">\n                            <input type=\"hidden\" name=\"__action\" value=\"grade\" />\n                            <input\n                              type=\"hidden\"\n                              name=\"__csrf_token\"\n                              value=\"${resLocals.__csrf_token}\"\n                            />\n                            ${savedAnswers > 0\n                              ? html`\n                                  <button\n                                    type=\"submit\"\n                                    class=\"btn btn-info my-2\"\n                                    ${!resLocals.authz_result.authorized_edit ? 'disabled' : ''}\n                                  >\n                                    Grade ${savedAnswers} saved\n                                    ${savedAnswers !== 1 ? 'answers' : 'answer'}\n                                  </button>\n                                `\n                              : html`\n                                  <button type=\"submit\" class=\"btn btn-info my-2\" disabled>\n                                    No saved answers to grade\n                                  </button>\n                                `}\n                          </form>\n                          <ul class=\"my-1\">\n                            ${suspendedSavedAnswers > 1\n                              ? html`\n                                  <li>\n                                    There are ${suspendedSavedAnswers} saved answers that cannot be\n                                    graded yet because their grade rate has not been reached. They\n                                    are marked with the\n                                    <i class=\"fa fa-hourglass-half\"></i> icon above. Reload this\n                                    page to update this information.\n                                  </li>\n                                `\n                              : suspendedSavedAnswers === 1\n                                ? html`\n                                    <li>\n                                      There is one saved answer that cannot be graded yet because\n                                      its grade rate has not been reached. It is marked with the\n                                      <i class=\"fa fa-hourglass-half\"></i> icon above. Reload this\n                                      page to update this information.\n                                    </li>\n                                  `\n                                : ''}\n                            <li>\n                              Submit your answer to each question with the\n                              <strong>Save & Grade</strong> or <strong>Save only</strong> buttons on\n                              the question page.\n                            </li>\n                            <li>\n                              Look at <strong>Status</strong> to confirm that each question has been\n                              graded. Questions with <strong>Available points</strong> can be\n                              attempted again for more points. Attempting questions again will never\n                              reduce the points you already have.\n                            </li>\n                            ${resLocals.authz_result.password != null ||\n                            !resLocals.authz_result.show_closed_assessment\n                              ? html`\n                                  <li>\n                                    After you have answered all the questions completely, click\n                                    here:\n                                    <button\n                                      class=\"btn btn-danger\"\n                                      data-bs-toggle=\"modal\"\n                                      data-bs-target=\"#confirmFinishModal\"\n                                      ${!resLocals.authz_result.authorized_edit ? 'disabled' : ''}\n                                    >\n                                      Finish assessment\n                                    </button>\n                                  </li>\n                                `\n                              : html`\n                                  <li>\n                                    When you are done, please logout and close your browser; there\n                                    is no need to do anything else. If you have any saved answers\n                                    when you leave, they will be automatically graded before your\n                                    final score is computed.\n                                  </li>\n                                `}\n                          </ul>\n                        `\n                      : html`\n                          <ul class=\"my-1\">\n                            <li>\n                              Submit your answer to each question with the\n                              <strong>Save</strong> button on the question page.\n                            </li>\n                            <li>\n                              After you have answered all the questions completely, click here:\n                              <button\n                                class=\"btn btn-danger\"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target=\"#confirmFinishModal\"\n                                ${!resLocals.authz_result.authorized_edit ? 'disabled' : ''}\n                              >\n                                Finish assessment\n                              </button>\n                            </li>\n                          </ul>\n                        `}\n                  `\n                : ''}\n              ${!resLocals.authz_result.authorized_edit\n                ? html`\n                    <div class=\"alert alert-warning mt-4\" role=\"alert\">\n                      You are viewing the assessment of a different user and so are not authorized\n                      to submit questions for grading or to mark the assessment as complete.\n                    </div>\n                  `\n                : ''}\n            </div>\n          </div>\n\n          ${resLocals.assessment.allow_personal_notes\n            ? PersonalNotesPanel({\n                fileList: resLocals.file_list,\n                context: 'assessment',\n                courseInstanceId: resLocals.course_instance.id,\n                assessment_instance: resLocals.assessment_instance,\n                csrfToken: resLocals.__csrf_token,\n                authz_result: resLocals.authz_result,\n              })\n            : ''}\n          ${InstructorInfoPanel({\n            course: resLocals.course,\n            course_instance: resLocals.course_instance,\n            assessment: resLocals.assessment,\n            assessment_instance: resLocals.assessment_instance,\n            instance_group: resLocals.instance_group,\n            instance_group_uid_list: resLocals.instance_group_uid_list,\n            instance_user: resLocals.instance_user,\n            authz_data: resLocals.authz_data,\n            questionContext:\n              resLocals.assessment.type === 'Exam' ? 'student_exam' : 'student_homework',\n            csrfToken: resLocals.__csrf_token,\n          })}\n        </main>\n      </body>\n    </html>\n  `.toString();\n}\n\nfunction AssessmentStatus({\n  assessment_instance,\n  authz_result,\n}: {\n  assessment_instance: AssessmentInstance;\n  authz_result: any;\n}) {\n  if (assessment_instance.open && authz_result.active) {\n    return html`\n      Assessment is <strong>open</strong> and you can answer questions.\n      <br />\n      Available credit: ${authz_result.credit_date_string}\n      ${StudentAccessRulesPopover({\n        accessRules: authz_result.access_rules,\n      })}\n    `;\n  }\n\n  return html`Assessment is <strong>closed</strong> and you cannot answer questions.`;\n}\n\nfunction InstanceQuestionTableHeader({ resLocals }: { resLocals: Record<string, any> }) {\n  const trailingColumns =\n    resLocals.assessment.type === 'Exam'\n      ? html`\n          ${resLocals.has_auto_grading_question && resLocals.assessment.allow_real_time_grading\n            ? html`\n                <th class=\"text-center\">Available points ${ExamQuestionHelpAvailablePoints()}</th>\n                <th class=\"text-center\">Awarded points ${ExamQuestionHelpAwardedPoints()}</th>\n              `\n            : resLocals.has_auto_grading_question && resLocals.has_manual_grading_question\n              ? html`\n                  <th class=\"text-center\">Auto-grading points</th>\n                  <th class=\"text-center\">Manual grading points</th>\n                  <th class=\"text-center\">Total points</th>\n                `\n              : html`<th class=\"text-center\">Points</th>`}\n        `\n      : html`\n          ${resLocals.has_auto_grading_question\n            ? html`\n                <th class=\"text-center\">Value</th>\n                <th class=\"text-center\">Variant history</th>\n              `\n            : ''}\n          <th class=\"text-center\">Awarded points</th>\n        `;\n\n  return html`\n    ${resLocals.assessment.type === 'Exam'\n      ? html`\n          ${resLocals.has_auto_grading_question &&\n          resLocals.has_manual_grading_question &&\n          resLocals.assessment.allow_real_time_grading\n            ? html`\n                <tr>\n                  <th rowspan=\"2\">Question</th>\n                  <th class=\"text-center\" rowspan=\"2\">Status</th>\n                  <th class=\"text-center\" colspan=\"2\">Auto-grading</th>\n                  <th class=\"text-center\" rowspan=\"2\">Manual grading points</th>\n                  <th class=\"text-center\" rowspan=\"2\">Total points</th>\n                </tr>\n                <tr>\n                  ${trailingColumns}\n                </tr>\n              `\n            : html`\n                <tr>\n                  <th>Question</th>\n                  <th class=\"text-center\">Status</th>\n                  ${trailingColumns}\n                </tr>\n              `}\n        `\n      : html`\n          ${resLocals.has_auto_grading_question && resLocals.has_manual_grading_question\n            ? html`\n                <tr>\n                  <th rowspan=\"2\">Question</th>\n                  <th class=\"text-center\" colspan=\"3\">Auto-grading</th>\n                  <th class=\"text-center\" rowspan=\"2\">Manual grading points</th>\n                  <th class=\"text-center\" rowspan=\"2\">Total points</th>\n                </tr>\n                <tr>\n                  ${trailingColumns}\n                </tr>\n              `\n            : html`\n                <tr>\n                  <th>Question</th>\n                  ${trailingColumns}\n                </tr>\n              `}\n        `}\n  `;\n}\n\nfunction ZoneInfoPopover({ label, content }: { label: string; content: string }) {\n  return html`\n    <button\n      type=\"button\"\n      class=\"btn btn-xs btn-secondary\"\n      data-bs-toggle=\"popover\"\n      data-bs-container=\"body\"\n      data-bs-html=\"true\"\n      data-bs-content=\"${content}\"\n    >\n      ${label}&nbsp;<i class=\"far fa-question-circle\" aria-hidden=\"true\"></i>\n    </button>\n  `;\n}\n\nfunction RowLabel({\n  instance_question_row,\n  userGroupRoles,\n  rowLabelText,\n  urlPrefix,\n}: {\n  instance_question_row: InstanceQuestionRow;\n  userGroupRoles: string | null;\n  rowLabelText: string;\n  urlPrefix: string;\n}) {\n  let lockedPopoverText: string | null = null;\n  if (instance_question_row.sequence_locked) {\n    lockedPopoverText = instance_question_row.prev_sequence_locked\n      ? 'A previous question must be completed before you can access this one.'\n      : `You must score at least ${instance_question_row.prev_advance_score_perc}% on ${instance_question_row.prev_title} to unlock this question.`;\n  } else if (!(instance_question_row.group_role_permissions?.can_view ?? true)) {\n    lockedPopoverText = `Your current group role (${userGroupRoles}) restricts access to this question.`;\n  }\n\n  return html`\n    ${lockedPopoverText != null\n      ? html`\n          <span class=\"text-muted\">${rowLabelText}</span>\n          <button\n            type=\"button\"\n            class=\"btn btn-xs border text-secondary ms-1\"\n            data-bs-toggle=\"popover\"\n            data-bs-container=\"body\"\n            data-bs-html=\"true\"\n            data-bs-content=\"${lockedPopoverText}\"\n            data-test-id=\"locked-instance-question-row\"\n            aria-label=\"Locked\"\n          >\n            <i class=\"fas fa-lock\" aria-hidden=\"true\"></i>\n          </button>\n        `\n      : html`\n          <a href=\"${urlPrefix}/instance_question/${instance_question_row.id}/\">${rowLabelText}</a>\n        `}\n    ${instance_question_row.file_count > 0\n      ? html`\n          <button\n            type=\"button\"\n            class=\"btn btn-xs border text-secondary ms-1\"\n            data-bs-toggle=\"popover\"\n            data-bs-container=\"body\"\n            data-bs-html=\"true\"\n            data-bs-content=\"Personal notes: ${instance_question_row.file_count}\"\n            aria-label=\"Has personal note attachments\"\n          >\n            <i class=\"fas fa-paperclip\"></i>\n          </button>\n        `\n      : ''}\n  `;\n}\n\nfunction ExamQuestionHelpAvailablePoints() {\n  return html`\n    <button\n      type=\"button\"\n      class=\"btn btn-xs btn-ghost\"\n      data-bs-toggle=\"popover\"\n      data-bs-container=\"body\"\n      data-bs-html=\"true\"\n      data-bs-placement=\"auto\"\n      data-bs-title=\"Available points\"\n      data-bs-content=\"The number of points that would be earned for a 100% correct answer on the next attempt. If retries are available for the question then a list of further points is shown, where the <i>n</i>-th value is the number of points that would be earned for a 100% correct answer on the <i>n</i>-th attempt.\"\n    >\n      <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n    </button>\n  `;\n}\n\nfunction ExamQuestionHelpAwardedPoints() {\n  return html`\n    <button\n      type=\"button\"\n      class=\"btn btn-xs btn-ghost\"\n      data-bs-toggle=\"popover\"\n      data-bs-container=\"body\"\n      data-bs-html=\"true\"\n      data-bs-placement=\"auto\"\n      data-bs-title=\"Awarded points\"\n      data-bs-content=\"The number of points already earned, as a fraction of the maximum possible points for the question.\"\n    >\n      <i class=\"fa fa-question-circle\" aria-hidden=\"true\"></i>\n    </button>\n  `;\n}\n\nfunction ConfirmFinishModal({\n  instance_question_rows,\n  csrfToken,\n}: {\n  instance_question_rows: InstanceQuestionRow[];\n  csrfToken: string;\n}) {\n  const all_questions_answered = instance_question_rows.every((iq) => iq.status !== 'unanswered');\n\n  return Modal({\n    id: 'confirmFinishModal',\n    title: 'All done?',\n    body: html`\n      ${!all_questions_answered\n        ? html`<div class=\"alert alert-warning\">There are still unanswered questions.</div>`\n        : ''}\n      <p class=\"text-danger\">\n        <strong>Warning</strong>: You will not be able to answer any more questions after finishing\n        the assessment.\n      </p>\n      <p>Are you sure you want to finish, complete, and close out the assessment?</p>\n    `,\n    footer: html`\n      <input type=\"hidden\" name=\"__action\" value=\"finish\" />\n      <input type=\"hidden\" name=\"__csrf_token\" value=\"${csrfToken}\" />\n      <button type=\"button\" data-bs-dismiss=\"modal\" class=\"btn btn-secondary\">Cancel</button>\n      <button type=\"submit\" class=\"btn btn-danger\">Finish assessment</button>\n    `,\n  });\n}\n"]}