{"version":3,"file":"studentAssessmentInstanceFile.js","sourceRoot":"","sources":["../../../src/pages/studentAssessmentInstanceFile/studentAssessmentInstanceFile.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,SAAS,CAAC;AACjC,OAAO,YAAY,MAAM,uBAAuB,CAAC;AAEjD,OAAO,EAAE,eAAe,EAAE,MAAM,qBAAqB,CAAC;AACtD,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAExE,OAAO,EAAE,UAAU,EAAE,MAAM,uBAAuB,CAAC;AACnD,OAAO,KAAK,SAAS,MAAM,yBAAyB,CAAC;AACrD,OAAO,iBAAiB,MAAM,wCAAwC,CAAC;AACvE,OAAO,WAAW,MAAM,kCAAkC,CAAC;AAC3D,OAAO,gCAAgC,MAAM,uDAAuD,CAAC;AACrG,OAAO,uBAAuB,MAAM,8CAA8C,CAAC;AAEnF,MAAM,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;AAE7C,MAAM,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;AAC7C,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACpC,MAAM,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;AAC9B,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,+BAA+B,CAAC,CAAC,CAAC;AAEzD,MAAM,CAAC,GAAG,CACR,iDAAiD,EACjD,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IACpC,oEAAoE;IACpE,sDAAsD;IACtD,MAAM,IAAI,GAAG,MAAM,gBAAgB,CACjC,GAAG,CAAC,WAAW,EACf;QACE,sBAAsB,EAAE,GAAG,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE;QACzD,cAAc,EAAE,GAAG,CAAC,MAAM,CAAC,cAAc;QACzC,uBAAuB,EAAE,GAAG,CAAC,MAAM,CAAC,uBAAuB;KAC5D,EACD,UAAU,CACX,CAAC;IACF,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC;QACjB,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAC;IACnD,CAAC;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,gBAAgB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,oBAAoB,EAAE,CAAC;QAClF,MAAM,IAAI,eAAe,CAAC,GAAG,EAAE,oDAAoD,CAAC,CAAC;IACvF,CAAC;IAED,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClD,gFAAgF;IAChF,wBAAwB;IACxB,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrC,CAAC,CAAC,CACH,CAAC;AAEF,eAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport { loadSqlEquiv, queryOptionalRow } from '@prairielearn/postgres';\n\nimport { FileSchema } from '../../lib/db-types.js';\nimport * as fileStore from '../../lib/file-store.js';\nimport clientFingerprint from '../../middlewares/clientFingerprint.js';\nimport logPageView from '../../middlewares/logPageView.js';\nimport selectAndAuthzAssessmentInstance from '../../middlewares/selectAndAuthzAssessmentInstance.js';\nimport studentAssessmentAccess from '../../middlewares/studentAssessmentAccess.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\nconst router = Router({ mergeParams: true });\n\nrouter.use(selectAndAuthzAssessmentInstance);\nrouter.use(studentAssessmentAccess);\nrouter.use(clientFingerprint);\nrouter.use(logPageView('studentAssessmentInstanceFile'));\n\nrouter.get(\n  '/:unsafe_file_id(\\\\d+)/:unsafe_display_filename',\n  asyncHandler(async (req, res, next) => {\n    // Assert that the file belongs to this assessment, that the display\n    // filename matches, and that the file is not deleted.\n    const file = await queryOptionalRow(\n      sql.select_file,\n      {\n        assessment_instance_id: res.locals.assessment_instance.id,\n        unsafe_file_id: req.params.unsafe_file_id,\n        unsafe_display_filename: req.params.unsafe_display_filename,\n      },\n      FileSchema,\n    );\n    if (file == null) {\n      throw new HttpStatusError(404, 'File not found');\n    }\n    if (file.type === 'student_upload' && !res.locals.assessment.allow_personal_notes) {\n      throw new HttpStatusError(403, 'Assessment does not allow access to personal notes');\n    }\n\n    const stream = await fileStore.getStream(file.id);\n    // Ensure the response is interpreted as an \"attachment\" (file to be downloaded)\n    // and not as a webpage.\n    res.attachment(file.display_filename);\n    stream.on('error', next).pipe(res);\n  }),\n);\n\nexport default router;\n"]}