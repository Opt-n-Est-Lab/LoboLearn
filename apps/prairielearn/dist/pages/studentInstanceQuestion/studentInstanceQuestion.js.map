{"version":3,"file":"studentInstanceQuestion.js","sourceRoot":"","sources":["../../../src/pages/studentInstanceQuestion/studentInstanceQuestion.ts"],"names":[],"mappings":"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","sourcesContent":["import { type Request, type Response, Router } from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport { HttpStatusError } from '@prairielearn/error';\nimport { loadSqlEquiv, queryOptionalRow } from '@prairielearn/postgres';\n\nimport checkPlanGrantsForQuestion from '../../ee/middlewares/checkPlanGrantsForQuestion.js';\nimport { canDeleteAssessmentInstance, gradeAssessmentInstance } from '../../lib/assessment.js';\nimport { setQuestionCopyTargets } from '../../lib/copy-question.js';\nimport { IdSchema } from '../../lib/db-types.js';\nimport { deleteFile, uploadFile } from '../../lib/file-store.js';\nimport { getQuestionGroupPermissions } from '../../lib/groups.js';\nimport { idsEqual } from '../../lib/id.js';\nimport { reportIssueFromForm } from '../../lib/issues.js';\nimport {\n  getAndRenderVariant,\n  renderPanelsForSubmission,\n  setRendererHeader,\n} from '../../lib/question-render.js';\nimport { processSubmission } from '../../lib/question-submission.js';\nimport clientFingerprint from '../../middlewares/clientFingerprint.js';\nimport { enterpriseOnly } from '../../middlewares/enterpriseOnly.js';\nimport { logPageView } from '../../middlewares/logPageView.js';\nimport selectAndAuthzInstanceQuestion from '../../middlewares/selectAndAuthzInstanceQuestion.js';\nimport studentAssessmentAccess from '../../middlewares/studentAssessmentAccess.js';\nimport { selectUserById } from '../../models/user.js';\nimport { selectAndAuthzVariant, selectVariantsByInstanceQuestion } from '../../models/variant.js';\n\nimport { StudentInstanceQuestion } from './studentInstanceQuestion.html.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nconst router = Router({ mergeParams: true });\n\nrouter.use(selectAndAuthzInstanceQuestion);\nrouter.use(studentAssessmentAccess);\nrouter.use(clientFingerprint);\nrouter.use(enterpriseOnly(() => checkPlanGrantsForQuestion));\n\nasync function processFileUpload(req: Request, res: Response) {\n  if (!res.locals.assessment_instance.open) {\n    throw new HttpStatusError(403, 'Assessment is not open');\n  }\n  if (!res.locals.assessment.allow_personal_notes) {\n    throw new HttpStatusError(403, 'This assessment does not allow personal notes.');\n  }\n  if (!res.locals.authz_result.active) {\n    throw new HttpStatusError(403, 'This assessment is not accepting submissions at this time.');\n  }\n  if (!req.file) {\n    throw new HttpStatusError(400, 'No file uploaded');\n  }\n\n  const variant = await selectAndAuthzVariant({\n    unsafe_variant_id: req.body.__variant_id,\n    variant_course: res.locals.course,\n    question_id: res.locals.question.id,\n    course_instance_id: res.locals.course_instance.id,\n    instance_question_id: res.locals.instance_question.id,\n    authz_data: res.locals.authz_data,\n    authn_user: res.locals.authn_user,\n    user: res.locals.user,\n    is_administrator: res.locals.is_administrator,\n  });\n\n  await uploadFile({\n    display_filename: req.file.originalname,\n    contents: req.file.buffer,\n    type: 'student_upload',\n    assessment_id: res.locals.assessment.id,\n    assessment_instance_id: res.locals.assessment_instance.id,\n    instance_question_id: res.locals.instance_question.id,\n    user_id: res.locals.user.user_id,\n    authn_user_id: res.locals.authn_user.user_id,\n  });\n\n  return variant.id;\n}\n\nasync function processTextUpload(req: Request, res: Response) {\n  if (!res.locals.assessment_instance.open) {\n    throw new HttpStatusError(403, 'Assessment is not open');\n  }\n  if (!res.locals.assessment.allow_personal_notes) {\n    throw new HttpStatusError(403, 'This assessment does not allow personal notes.');\n  }\n  if (!res.locals.authz_result.active) {\n    throw new HttpStatusError(403, 'This assessment is not accepting submissions at this time.');\n  }\n\n  const variant = await selectAndAuthzVariant({\n    unsafe_variant_id: req.body.__variant_id,\n    variant_course: res.locals.course,\n    question_id: res.locals.question.id,\n    course_instance_id: res.locals.course_instance.id,\n    instance_question_id: res.locals.instance_question.id,\n    authz_data: res.locals.authz_data,\n    authn_user: res.locals.authn_user,\n    user: res.locals.user,\n    is_administrator: res.locals.is_administrator,\n  });\n\n  await uploadFile({\n    display_filename: req.body.filename,\n    contents: Buffer.from(req.body.contents),\n    type: 'student_upload',\n    assessment_id: res.locals.assessment.id,\n    assessment_instance_id: res.locals.assessment_instance.id,\n    instance_question_id: res.locals.instance_question.id,\n    user_id: res.locals.user.user_id,\n    authn_user_id: res.locals.authn_user.user_id,\n  });\n\n  return variant.id;\n}\n\nasync function processDeleteFile(req: Request, res: Response) {\n  if (!res.locals.assessment_instance.open) {\n    throw new HttpStatusError(403, 'Assessment is not open');\n  }\n  if (!res.locals.assessment.allow_personal_notes) {\n    throw new HttpStatusError(403, 'This assessment does not allow personal notes.');\n  }\n  if (!res.locals.authz_result.active) {\n    throw new HttpStatusError(403, 'This assessment is not accepting submissions at this time.');\n  }\n\n  const variant = await selectAndAuthzVariant({\n    unsafe_variant_id: req.body.__variant_id,\n    variant_course: res.locals.course,\n    question_id: res.locals.question.id,\n    course_instance_id: res.locals.course_instance.id,\n    instance_question_id: res.locals.instance_question.id,\n    authz_data: res.locals.authz_data,\n    authn_user: res.locals.authn_user,\n    user: res.locals.user,\n    is_administrator: res.locals.is_administrator,\n  });\n\n  // Check the requested file belongs to the current instance question\n  const validFiles =\n    res.locals.file_list?.filter((file) => idsEqual(file.id, req.body.file_id)) ?? [];\n  if (validFiles.length === 0) {\n    throw new HttpStatusError(404, `No such file_id: ${req.body.file_id}`);\n  }\n  const file = validFiles[0];\n\n  if (file.type !== 'student_upload') {\n    throw new HttpStatusError(403, `Cannot delete file type ${file.type} for file_id=${file.id}`);\n  }\n\n  await deleteFile(file.id, res.locals.authn_user.user_id);\n\n  return variant.id;\n}\n\nasync function validateAndProcessSubmission(req: Request, res: Response) {\n  if (!res.locals.assessment_instance.open) {\n    throw new HttpStatusError(400, 'assessment_instance is closed');\n  }\n  if (!res.locals.instance_question.open) {\n    throw new HttpStatusError(400, 'instance_question is closed');\n  }\n  if (!res.locals.authz_result.active) {\n    throw new HttpStatusError(400, 'This assessment is not accepting submissions at this time.');\n  }\n  if (res.locals.group_config?.has_roles && !res.locals.group_role_permissions.can_submit) {\n    throw new HttpStatusError(\n      403,\n      'Your current group role does not give you permission to submit to this question.',\n    );\n  }\n  return await processSubmission(req, res, { studentSubmission: true });\n}\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res) => {\n    if (!res.locals.authz_result.authorized_edit) {\n      throw new HttpStatusError(403, 'Not authorized');\n    }\n\n    if (req.body.__action === 'grade' || req.body.__action === 'save') {\n      if (res.locals.assessment.type === 'Exam') {\n        if (res.locals.authz_result.time_limit_expired) {\n          throw new HttpStatusError(\n            403,\n            'Time limit is expired, please go back and finish your assessment',\n          );\n        }\n        if (req.body.__action === 'grade' && !res.locals.assessment.allow_real_time_grading) {\n          throw new HttpStatusError(403, 'Real-time grading is not allowed for this assessment');\n        }\n      }\n      const variant_id = await validateAndProcessSubmission(req, res);\n      if (res.locals.assessment.type === 'Exam') {\n        res.redirect(req.originalUrl);\n      } else {\n        res.redirect(\n          `${res.locals.urlPrefix}/instance_question/${res.locals.instance_question.id}/?variant_id=${variant_id}`,\n        );\n      }\n    } else if (req.body.__action === 'timeLimitFinish') {\n      if (res.locals.assessment.type !== 'Exam') {\n        throw new HttpStatusError(400, 'Only exams have a time limit');\n      }\n      // Only close if the timer expired due to time limit, not for access end\n      if (!res.locals.assessment_instance_time_limit_expired) {\n        return res.redirect(req.originalUrl);\n      }\n\n      const requireOpen = true;\n      const closeExam = true;\n      const overrideGradeRate = false;\n      await gradeAssessmentInstance(\n        res.locals.assessment_instance.id,\n        res.locals.user.user_id,\n        res.locals.authn_user.user_id,\n        requireOpen,\n        closeExam,\n        overrideGradeRate,\n        res.locals.client_fingerprint_id,\n      );\n      res.redirect(\n        `${res.locals.urlPrefix}/assessment_instance/${res.locals.assessment_instance.id}?timeLimitExpired=true`,\n      );\n    } else if (req.body.__action === 'attach_file') {\n      const variant_id = await processFileUpload(req, res);\n      res.redirect(\n        `${res.locals.urlPrefix}/instance_question/${res.locals.instance_question.id}/?variant_id=${variant_id}`,\n      );\n    } else if (req.body.__action === 'attach_text') {\n      const variant_id = await processTextUpload(req, res);\n      res.redirect(\n        `${res.locals.urlPrefix}/instance_question/${res.locals.instance_question.id}/?variant_id=${variant_id}`,\n      );\n    } else if (req.body.__action === 'delete_file') {\n      const variant_id = await processDeleteFile(req, res);\n      res.redirect(\n        `${res.locals.urlPrefix}/instance_question/${res.locals.instance_question.id}/?variant_id=${variant_id}`,\n      );\n    } else if (req.body.__action === 'report_issue') {\n      const variant_id = await reportIssueFromForm(req, res, true);\n      res.redirect(\n        `${res.locals.urlPrefix}/instance_question/${res.locals.instance_question.id}/?variant_id=${variant_id}`,\n      );\n    } else {\n      // The 'regenerate_instance' action is handled in the\n      // studentAssessmentAccess middleware, so it doesn't need to be handled\n      // here.\n      throw new HttpStatusError(400, `unknown __action: ${req.body.__action}`);\n    }\n  }),\n);\n\nrouter.get(\n  '/variant/:unsafe_variant_id(\\\\d+)/submission/:unsafe_submission_id(\\\\d+)',\n  asyncHandler(async (req, res) => {\n    const variant = await selectAndAuthzVariant({\n      unsafe_variant_id: req.params.unsafe_variant_id,\n      variant_course: res.locals.course,\n      question_id: res.locals.question.id,\n      course_instance_id: res.locals.course_instance.id,\n      instance_question_id: res.locals.instance_question.id,\n      authz_data: res.locals.authz_data,\n      authn_user: res.locals.authn_user,\n      user: res.locals.user,\n      is_administrator: res.locals.is_administrator,\n    });\n\n    const panels = await renderPanelsForSubmission({\n      unsafe_submission_id: req.params.unsafe_submission_id,\n      question: res.locals.question,\n      instance_question: res.locals.instance_question,\n      variant,\n      user: res.locals.user,\n      urlPrefix: res.locals.urlPrefix,\n      questionContext: res.locals.question.type === 'Exam' ? 'student_exam' : 'student_homework',\n      authorizedEdit: res.locals.authz_result.authorized_edit,\n      renderScorePanels: req.query.render_score_panels === 'true',\n      groupRolePermissions: res.locals.group_role_permissions,\n    });\n    res.json(panels);\n  }),\n);\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    let variant_id =\n      res.locals.assessment.type === 'Exam' || typeof req.query.variant_id !== 'string'\n        ? null\n        : req.query.variant_id;\n\n    const isAssessmentAvailable =\n      res.locals.assessment_instance.open && res.locals.authz_result.active;\n\n    if (variant_id === null && !isAssessmentAvailable) {\n      // We can't generate a new variant in this case, so we\n      // fetch and display the most recent non-broken variant.\n      // If no such variant exists, we tell the user that a new variant\n      // cannot be generated.\n      const last_variant_id = await queryOptionalRow(\n        sql.select_last_variant_id,\n        { instance_question_id: res.locals.instance_question.id },\n        IdSchema,\n      );\n      if (last_variant_id == null) {\n        res.status(403).send(\n          StudentInstanceQuestion({\n            resLocals: res.locals,\n            userCanDeleteAssessmentInstance: canDeleteAssessmentInstance(res.locals),\n          }),\n        );\n        return;\n      }\n\n      // For exams, we leave variant_id as null; getAndRenderVariant will handle it.\n      if (res.locals.assessment.type === 'Homework') {\n        variant_id = last_variant_id;\n      }\n    }\n    await getAndRenderVariant(variant_id, null, res.locals as any);\n\n    await logPageView('studentInstanceQuestion', req, res);\n    await setQuestionCopyTargets(res);\n\n    res.locals.instance_question_info.previous_variants = await selectVariantsByInstanceQuestion({\n      assessment_instance_id: res.locals.assessment_instance.id,\n      instance_question_id: res.locals.instance_question.id,\n    });\n\n    if (\n      res.locals.group_config?.has_roles &&\n      !res.locals.authz_data.has_course_instance_permission_view\n    ) {\n      if (res.locals.instance_question_info.prev_instance_question.id != null) {\n        res.locals.prev_instance_question_role_permissions = await getQuestionGroupPermissions(\n          res.locals.instance_question_info.prev_instance_question.id,\n          res.locals.assessment_instance.group_id,\n          res.locals.authz_data.user.user_id,\n        );\n      }\n      if (res.locals.instance_question_info.next_instance_question.id) {\n        res.locals.next_instance_question_role_permissions = await getQuestionGroupPermissions(\n          res.locals.instance_question_info.next_instance_question.id,\n          res.locals.assessment_instance.group_id,\n          res.locals.authz_data.user.user_id,\n        );\n      }\n    }\n    setRendererHeader(res);\n    const assignedGrader = res.locals.instance_question.assigned_grader\n      ? await selectUserById(res.locals.instance_question.assigned_grader)\n      : null;\n    const lastGrader = res.locals.instance_question.last_grader\n      ? await selectUserById(res.locals.instance_question.last_grader)\n      : null;\n    res.send(\n      StudentInstanceQuestion({\n        resLocals: res.locals,\n        userCanDeleteAssessmentInstance: canDeleteAssessmentInstance(res.locals),\n        assignedGrader,\n        lastGrader,\n      }),\n    );\n  }),\n);\n\nexport default router;\n"]}