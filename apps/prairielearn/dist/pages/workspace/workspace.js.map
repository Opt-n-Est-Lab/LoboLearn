{"version":3,"file":"workspace.js","sourceRoot":"","sources":["../../../src/pages/workspace/workspace.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from 'express';\nimport asyncHandler from 'express-async-handler';\n\nimport * as error from '@prairielearn/error';\nimport * as sqldb from '@prairielearn/postgres';\nimport { generateSignedToken } from '@prairielearn/signed-token';\nimport * as workspaceUtils from '@prairielearn/workspace-utils';\n\nimport { config } from '../../lib/config.js';\nimport { selectVariantIdForWorkspace } from '../../models/workspace.js';\n\nimport { Workspace } from './workspace.html.js';\n\nconst router = express.Router();\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nasync function getNavTitleHref(res: express.Response): Promise<string> {\n  const variant_id = await selectVariantIdForWorkspace(res.locals.workspace_id);\n\n  if (res.locals.assessment == null) {\n    // Instructor preview. This could be a preview at either the course or course\n    // instance level. Generate a link appropriately.\n    if (res.locals.course_instance_id) {\n      return `/pl/course_instance/${res.locals.course_instance_id}/instructor/question/${res.locals.question_id}/preview?variant_id=${variant_id}`;\n    } else {\n      return `/pl/course/${res.locals.course_id}/question/${res.locals.question_id}/preview?variant_id=${variant_id}`;\n    }\n  } else {\n    // Student assessment. If it's a homework, we'll include the variant ID in the URL\n    // in case this workspace is for a non-current variant.\n    const query = res.locals.assessment.type === 'Homework' ? `?variant_id=${variant_id}` : '';\n    return `/pl/course_instance/${res.locals.course_instance_id}/instance_question/${res.locals.instance_question_id}${query}`;\n  }\n}\n\nrouter.get(\n  '/',\n  asyncHandler(async (req, res) => {\n    let navTitle: string, pageTitle: string | undefined, pageNote: string | undefined;\n    if (res.locals.assessment == null) {\n      // instructor preview\n      pageTitle = 'Workspace Preview';\n      pageNote = res.locals.question.qid;\n      navTitle = res.locals.question.qid;\n    } else {\n      // student assessment\n      pageTitle = 'Workspace';\n      navTitle = `${res.locals.instance_question_info.question_number} - ${res.locals.course.short_name}`;\n    }\n\n    const navTitleHref = await getNavTitleHref(res);\n\n    res.send(\n      Workspace({\n        pageTitle,\n        pageNote,\n        navTitle,\n        navTitleHref,\n        showLogs:\n          res.locals.authz_data.has_course_instance_permission_view ||\n          res.locals.authz_data.has_course_permission_preview,\n        heartbeatIntervalSec: config.workspaceHeartbeatIntervalSec,\n        visibilityTimeoutSec: config.workspaceVisibilityTimeoutSec,\n        socketToken: generateSignedToken(\n          { workspace_id: res.locals.workspace_id.toString() },\n          config.secretKey,\n        ),\n        resLocals: res.locals,\n      }),\n    );\n  }),\n);\n\nrouter.post(\n  '/',\n  asyncHandler(async (req, res, next) => {\n    const workspace_id = res.locals.workspace_id;\n\n    if (req.body.__action === 'reboot') {\n      await workspaceUtils.updateWorkspaceState(workspace_id, 'stopped', 'Rebooting container');\n      await sqldb.queryAsync(sql.update_workspace_rebooted_at_now, {\n        workspace_id,\n      });\n      res.redirect(`/pl/workspace/${workspace_id}`);\n    } else if (req.body.__action === 'reset') {\n      await workspaceUtils.updateWorkspaceState(\n        workspace_id,\n        'uninitialized',\n        'Resetting container',\n      );\n      await sqldb.queryAsync(sql.increment_workspace_version, { workspace_id });\n      res.redirect(`/pl/workspace/${workspace_id}`);\n    } else {\n      return next(new error.HttpStatusError(400, `unknown __action: ${req.body.__action}`));\n    }\n  }),\n);\n\nexport default router;\n"]}