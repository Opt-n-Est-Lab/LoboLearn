{"version":3,"file":"calculation-worker.js","sourceRoot":"","sources":["../../src/question-servers/calculation-worker.js"],"names":[],"mappings":"AAAA,YAAY;AAEZ,+EAA+E;AAC/E,iFAAiF;AACjF,qEAAqE;AACrE,2CAA2C;AAC3C,EAAE;AACF,4EAA4E;AAC5E,+DAA+D;AAC/D,EAAE;AACF,8EAA8E;AAC9E,4EAA4E;AAC5E,+EAA+E;AAC/E,yCAAyC;AAEzC,OAAO,MAAM,MAAM,aAAa,CAAC;AACjC,OAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAClC,OAAO,EAAE,eAAe,EAAE,MAAM,eAAe,CAAC;AAEhD,OAAO,eAAe,MAAM,4BAA4B,CAAC;AAEzD;;;;;;;GAOG;AACH,KAAK,UAAU,UAAU,CAAC,kBAAkB,EAAE,UAAU;IACtD,MAAM,aAAa,GAAG,eAAe,CAAC,MAAM,CAAC;QAC3C,KAAK,EAAE;YACL,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC;YAC7D,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC;YAC7D,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC;YACtD,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC;SACvD;KACF,CAAC,CAAC;IAEH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,aAAa,CACX,CAAC,kBAAkB,CAAC,EACpB,UAAU,MAAM;YACd,IAAI,MAAM,KAAK,SAAS,EAAE,CAAC;gBACzB,MAAM,CAAC,IAAI,KAAK,CAAC,kBAAkB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3E,CAAC;YACD,yEAAyE;YACzE,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACvC,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,iBAAiB,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,EAAE;gBACxE,KAAK,EAAE,GAAG;aACX,CAAC,CAAC;YACH,MAAM,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;;;;;GAMG;AACH,SAAS,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY;IAC1D,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,gCAAgC,CAAC,CAAC;IAE7D,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC3E,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,IAAI,EAAE,CAAC;IAEvC,MAAM,YAAY,GAAG,MAAM,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACxE,OAAO;QACL,MAAM,EAAE,YAAY,CAAC,MAAM,IAAI,IAAI;QACnC,WAAW,EAAE,YAAY,CAAC,UAAU,IAAI,IAAI;QAC5C,OAAO,EAAE,YAAY,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,IAAI,EAAE;KACxD,CAAC;AACJ,CAAC;AAED;;;;;;;GAOG;AACH,SAAS,KAAK,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ;IAC9D,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,gCAAgC,CAAC,CAAC;IAE7D,MAAM,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC;IAEjC,gFAAgF;IAChF,2EAA2E;IAC3E,4EAA4E;IAC5E,sBAAsB;IACtB,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAC9B,MAAM,UAAU,GAAG,OAAO,CAAC,WAAW,CAAC;IAEvC,MAAM,eAAe,GAAG,UAAU,CAAC,gBAAgB,CAAC;IACpD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAChC,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;IAE3E,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,CAChC,GAAG,EACH,MAAM,EACN,UAAU,EACV,eAAe,EACf,OAAO,EACP,WAAW,CACZ,CAAC;IAEF,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;IAC1B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;QAC7B,gFAAgF;QAChF,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,OAAO;QACL,KAAK;QACL,QAAQ,EAAE,OAAO,CAAC,KAAK;QACvB,QAAQ,EAAE,OAAO,CAAC,QAAQ,IAAI,IAAI;QAClC,cAAc,EAAE,EAAE;QAClB,gBAAgB,EAAE,UAAU,CAAC,gBAAgB,IAAI,EAAE;QACnD,oBAAoB,EAAE,UAAU,CAAC,oBAAoB,IAAI,EAAE;QAC3D,aAAa,EAAE,EAAE;QACjB,QAAQ,EAAE,IAAI;QAEd,+EAA+E;QAC/E,6CAA6C;QAC7C,MAAM,EAAE,OAAO,CAAC,MAAM,IAAI,EAAE;QAC5B,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,EAAE;KACvC,CAAC;AACJ,CAAC;AAED;;;GAGG;AACH,SAAS,WAAW,CAAC,EAAE;IACrB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE;YACrB,IAAI,UAAU;gBAAE,OAAO;YACvB,UAAU,GAAG,IAAI,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;YAClB,IAAI,UAAU;gBAAE,OAAO;YACvB,UAAU,GAAG,IAAI,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,8DAA8D;AAC9D,2EAA2E;AAC3E,WAAW;AACX,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC9D,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAEjE,CAAC,KAAK,IAAI,EAAE;IACV,MAAM,EAAE,GAAG,eAAe,CAAC;QACzB,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;KACvB,CAAC,CAAC;IAEH,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,EAAE,CAAC,CAAC;IAEnC,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAC1D,CAAC;IAED,4CAA4C;IAC5C,EAAE,CAAC,KAAK,EAAE,CAAC;IAEX,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAE/B,MAAM;IACJ,iCAAiC;IACjC,kBAAkB,EAClB,IAAI,EACJ,UAAU,EACV,QAAQ;IAER,qEAAqE;IACrE,cAAc;IACd,YAAY,EACZ,OAAO,EACP,UAAU,GACX,GAAG,KAAK,CAAC;IAEV,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;IAEhE,IAAI,IAAI,CAAC;IACT,IAAI,IAAI,KAAK,UAAU,EAAE,CAAC;QACxB,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;IAC9D,CAAC;SAAM,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;QAC5B,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IAClE,CAAC;SAAM,CAAC;QACN,MAAM,IAAI,KAAK,CAAC,qBAAqB,IAAI,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED,uCAAuC;IACvC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IACnE,WAAW,CAAC,IAAI,CAAC,CAAC;IAElB,uDAAuD;IACvD,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;IACjB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC","sourcesContent":["// @ts-check\n\n// This is meant to be invoked from a Python code caller via `lib/code-caller`.\n// This allows us to isolate code from the main process that's handling requests,\n// and to execute code inside Docker containers in environments where\n// containerized code execution is enabled.\n//\n// It's important that nothing in this file relies on config or other global\n// server state, as this won't be executed in the main process.\n//\n// Note that the zygote will load the *transpiled* version of this file in the\n// `dist` directory, not the original source file in `src`. If you're making\n// changes to this file, you'll need to run `yarn build` in `apps/prairielearn`\n// in order to update the file in `dist`.\n\nimport assert from 'node:assert';\nimport * as path from 'node:path';\nimport { createInterface } from 'node:readline';\n\nimport requireFrontend from '../lib/require-frontend.js';\n\n/**\n * Attempts to load the server module that should be used for a particular\n * question.\n *\n * @param {string} questionServerPath The path to the JavaScript question server\n * @param {string} coursePath The path to the course root directory\n * @returns {Promise<any>}\n */\nasync function loadServer(questionServerPath, coursePath) {\n  const configRequire = requireFrontend.config({\n    paths: {\n      clientFilesCourse: path.join(coursePath, 'clientFilesCourse'),\n      serverFilesCourse: path.join(coursePath, 'serverFilesCourse'),\n      clientCode: path.join(coursePath, 'clientFilesCourse'),\n      serverCode: path.join(coursePath, 'serverFilesCourse'),\n    },\n  });\n\n  return new Promise((resolve, reject) => {\n    configRequire(\n      [questionServerPath],\n      function (server) {\n        if (server === undefined) {\n          reject(new Error(`Could not load ${path.basename(questionServerPath)}`));\n        }\n        // This was added as a workaround for requireJS error handling weirdness.\n        setTimeout(() => resolve(server), 0);\n      },\n      (err) => {\n        const e = new Error(`Error loading ${path.basename(questionServerPath)}`, {\n          cause: err,\n        });\n        reject(e);\n      },\n    );\n  });\n}\n\n/**\n * @param {any} server\n * @param {string} coursePath\n * @param {import('../lib/db-types.js').Question} question\n * @param {string} variant_seed\n * @returns {import('./types.ts').GenerateResultData}\n */\nfunction generate(server, coursePath, question, variant_seed) {\n  assert(question.directory, 'Question directory is required');\n\n  const questionDir = path.join(coursePath, 'questions', question.directory);\n  const options = question.options || {};\n\n  const questionData = server.getData(variant_seed, options, questionDir);\n  return {\n    params: questionData.params ?? null,\n    true_answer: questionData.trueAnswer ?? null,\n    options: questionData.options || question.options || {},\n  };\n}\n\n/**\n * @param {any} server\n * @param {string} coursePath\n * @param {import('../lib/db-types.js').Submission} submission\n * @param {import('../lib/db-types.js').Variant} variant\n * @param {import('../lib/db-types.js').Question} question\n * @returns {import('./types.ts').GradeResultData}\n */\nfunction grade(server, coursePath, submission, variant, question) {\n  assert(question.directory, 'Question directory is required');\n\n  const vid = variant.variant_seed;\n\n  // Note: v3 questions use `params` and `true_answer` from the submission instead\n  // of the variant. That change isn't necessary for v2 questions because the\n  // submission grading process isn't permitted to modify either the params or\n  // the correct answer.\n  const params = variant.params;\n  const trueAnswer = variant.true_answer;\n\n  const submittedAnswer = submission.submitted_answer;\n  const options = variant.options;\n  const questionDir = path.join(coursePath, 'questions', question.directory);\n\n  const grading = server.gradeAnswer(\n    vid,\n    params,\n    trueAnswer,\n    submittedAnswer,\n    options,\n    questionDir,\n  );\n\n  let score = grading.score;\n  if (!question.partial_credit) {\n    // legacy Calculation questions round the score to 0 or 1 (with 0.5 rounding up)\n    score = grading.score >= 0.5 ? 1 : 0;\n  }\n\n  return {\n    score,\n    v2_score: grading.score,\n    feedback: grading.feedback ?? null,\n    partial_scores: {},\n    submitted_answer: submission.submitted_answer ?? {},\n    raw_submitted_answer: submission.raw_submitted_answer ?? {},\n    format_errors: {},\n    gradable: true,\n\n    // Note: v3 questions can change `params` and `true_answer` during grading, but\n    // this was not implemented for v2 questions.\n    params: variant.params ?? {},\n    true_answer: variant.true_answer ?? {},\n  };\n}\n\n/**\n * @param {import('readline').Interface} rl\n * @returns {Promise<string | null>}\n */\nfunction getLineOnce(rl) {\n  return new Promise((resolve) => {\n    let didResolve = false;\n    rl.on('line', (line) => {\n      if (didResolve) return;\n      didResolve = true;\n      resolve(line);\n    });\n    rl.on('close', () => {\n      if (didResolve) return;\n      didResolve = true;\n      resolve(null);\n    });\n  });\n}\n\n// Redirect `stdout` to `stderr` so that we can ensure that no\n// user code can write to `stdout`; we need to use `stdout` to send results\n// instead.\nconst stdoutWrite = process.stdout.write.bind(process.stdout);\nprocess.stdout.write = process.stderr.write.bind(process.stderr);\n\n(async () => {\n  const rl = createInterface({\n    input: process.stdin,\n    output: process.stdout,\n  });\n\n  const line = await getLineOnce(rl);\n\n  if (!line) {\n    throw new Error('Did not get data from parent process');\n  }\n\n  // Close the reader to empty the event loop.\n  rl.close();\n\n  const input = JSON.parse(line);\n\n  const {\n    // These first four are required.\n    questionServerPath,\n    func,\n    coursePath,\n    question,\n\n    // Depending on which function is being invoked, these may or may not\n    // be present.\n    variant_seed,\n    variant,\n    submission,\n  } = input;\n\n  const server = await loadServer(questionServerPath, coursePath);\n\n  let data;\n  if (func === 'generate') {\n    data = generate(server, coursePath, question, variant_seed);\n  } else if (func === 'grade') {\n    data = grade(server, coursePath, submission, variant, question);\n  } else {\n    throw new Error(`Unknown function: ${func}`);\n  }\n\n  // Write data back to invoking process.\n  stdoutWrite(JSON.stringify({ val: data, present: true }), 'utf-8');\n  stdoutWrite('\\n');\n\n  // If we get here, everything went well - exit cleanly.\n  process.exit(0);\n})().catch((err) => {\n  console.error(err);\n  process.exit(1);\n});\n"]}