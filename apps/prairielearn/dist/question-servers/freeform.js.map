{"version":3,"file":"freeform.js","sourceRoot":"","sources":["../../src/question-servers/freeform.js"],"names":[],"mappings":"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","sourcesContent":["// @ts-check\nimport * as path from 'path';\n\nimport * as async from 'async';\n// Use slim export, which relies on htmlparser2 instead of parse5. This provides\n// support for questions with legacy renderer.\nimport * as cheerio from 'cheerio/slim';\nimport debugfn from 'debug';\nimport fs from 'fs-extra';\nimport _ from 'lodash';\nimport mustache from 'mustache';\nimport objectHash from 'object-hash';\nimport * as parse5 from 'parse5';\n\nimport { cache } from '@prairielearn/cache';\nimport { logger } from '@prairielearn/logger';\nimport { instrumented, instrumentedWithMetrics, metrics } from '@prairielearn/opentelemetry';\nimport { run } from '@prairielearn/run';\n\nimport { stripHtmlForAiGrading } from '../lib/ai-grading.js';\nimport * as assets from '../lib/assets.js';\nimport { canonicalLogger } from '../lib/canonical-logger.js';\nimport * as chunks from '../lib/chunks.js';\nimport { FunctionMissingError, withCodeCaller } from '../lib/code-caller/index.js';\nimport { config } from '../lib/config.js';\nimport { features } from '../lib/features/index.js';\nimport { idsEqual } from '../lib/id.js';\nimport * as markdown from '../lib/markdown.js';\nimport { APP_ROOT_PATH } from '../lib/paths.js';\nimport { getOrUpdateCourseCommitHash } from '../models/course.js';\nimport {\n  ElementCoreJsonSchema,\n  ElementCourseJsonSchema,\n  ElementExtensionJsonSchema,\n} from '../schemas/index.js';\n\nconst debug = debugfn('prairielearn:freeform');\n\n/**\n * @typedef {Object} QuestionProcessingContext\n * @property {import('../lib/db-types.js').Course} course\n * @property {import('../lib/db-types.js').Question} question\n * @property {string} course_dir\n * @property {string} course_dir_host\n * @property {string} question_dir\n * @property {string} question_dir_host\n * @property {'experimental' | 'default' | 'legacy'} renderer\n * @property {ElementNameMap} course_elements\n * @property {ElementExtensionNameDirMap} course_element_extensions\n */\n\n/** @typedef {import('../schemas/index.js').ElementCoreJson} ElementCoreJson */\n/** @typedef {import('../schemas/index.js').ElementCourseJson} ElementCourseJson */\n/** @typedef {import('./types.js').ElementExtensionJsonExtension} ElementExtensionJsonExtension */\n/** @typedef {Record<string, Record<string, ElementExtensionJsonExtension>>} ElementExtensionNameDirMap */\n/** @typedef {Record<string, ((ElementCoreJson & { type: 'core' }) | (ElementCourseJson & { type: 'course' })) & { name: string, directory: string }>} ElementNameMap */\n\n// Maps core element names to element info\n/** @type {ElementNameMap} */\nlet coreElementsCache = {};\n// Maps course IDs to course element info\n/** @type {Record<string, { commit_hash: string | null, data: ElementNameMap }>} */\nlet courseElementsCache = {};\n// Maps course IDs to course element extension info\n/** @type {Record<string, { commit_hash: string | null, data: ElementExtensionNameDirMap }>} */\nlet courseExtensionsCache = {};\n\n/**\n * @typedef {Object} CourseIssueErrorOptions\n * @property {any} [data]\n * @property {boolean} [fatal]\n * @property {Error} [cause]\n */\nclass CourseIssueError extends Error {\n  /**\n   *\n   * @param {string} message\n   * @param {CourseIssueErrorOptions} options\n   */\n  constructor(message, options) {\n    super(message, { cause: options?.cause });\n    this.name = 'CourseIssueError';\n    this.data = options.data;\n    this.fatal = options.fatal;\n  }\n}\n\nexport async function init() {\n  // Populate the list of PrairieLearn elements\n  coreElementsCache = await loadElements(path.join(APP_ROOT_PATH, 'elements'), 'core');\n}\n\n/**\n * Takes a directory containing element directories and returns an object\n * mapping element names to that element's controller, dependencies, etc.\n *\n * @param {string} sourceDir Absolute path to the directory of elements\n * @param {'core' | 'course'} elementType The type of element to be loaded\n */\nasync function loadElements(sourceDir, elementType) {\n  const elementSchema = run(() => {\n    if (elementType === 'core') return ElementCoreJsonSchema;\n    if (elementType === 'course') return ElementCourseJsonSchema;\n    throw new Error(`Unknown element type ${elementType}`);\n  });\n\n  let files;\n  try {\n    files = await fs.readdir(sourceDir);\n  } catch (err) {\n    if (err && err.code === 'ENOENT') {\n      // Directory doesn't exist, most likely a course with no elements.\n      // Proceed with an empty object.\n      return {};\n    }\n\n    throw err;\n  }\n\n  // Filter out any non-directories.\n  const elementNames = await async.filter(files, async (file) => {\n    const stats = await fs.promises.lstat(path.join(sourceDir, file));\n    return stats.isDirectory();\n  });\n\n  // Construct a dictionary mapping element names to their info.\n  /** @type {ElementNameMap} */\n  const elements = {};\n  await async.each(elementNames, async (elementName) => {\n    const elementInfoPath = path.join(sourceDir, elementName, 'info.json');\n    let rawInfo;\n    try {\n      rawInfo = await fs.readJSON(elementInfoPath);\n    } catch (err) {\n      if (err && err.code === 'ENOENT') {\n        // This must not be an element directory, skip it\n        return;\n      }\n\n      throw err;\n    }\n\n    elements[elementName] = {\n      name: elementName,\n      directory: path.join(sourceDir, elementName),\n      type: elementType,\n      ...elementSchema.parse(rawInfo),\n    };\n\n    // For backwards compatibility.\n    // TODO remove once everyone is using the new version.\n    if (elementType === 'core') {\n      elements[elementName.replace(/-/g, '_')] = elements[elementName];\n\n      if ('additionalNames' in elements[elementName]) {\n        elements[elementName].additionalNames?.forEach((name) => {\n          elements[name] = elements[elementName];\n          elements[name.replace(/-/g, '_')] = elements[elementName];\n        });\n      }\n    }\n  });\n\n  return elements;\n}\n\n/**\n * @param {import('../lib/db-types.js').Course} course\n */\nexport async function loadElementsForCourse(course) {\n  if (\n    courseElementsCache[course.id] !== undefined &&\n    courseElementsCache[course.id].commit_hash &&\n    courseElementsCache[course.id].commit_hash === course.commit_hash\n  ) {\n    return courseElementsCache[course.id].data;\n  }\n\n  const coursePath = chunks.getRuntimeDirectoryForCourse(course);\n  const elements = await loadElements(path.join(coursePath, 'elements'), 'course');\n  courseElementsCache[course.id] = {\n    commit_hash: course.commit_hash,\n    data: elements,\n  };\n  return elements;\n}\n\n/**\n * Takes a directory containing an extension directory and returns a new\n * object mapping element names to each extension, which itself an object\n * that contains relevant extension scripts and styles.\n *\n * @param {string} sourceDir Absolute path to the directory of extensions\n * @param {string} runtimeDir The path that the worker will load extensions from\n */\nexport async function loadExtensions(sourceDir, runtimeDir) {\n  // Load each root element extension folder\n  /** @type {string[]} */\n  let elementFolders;\n  try {\n    elementFolders = await fs.readdir(sourceDir);\n  } catch (err) {\n    if (err.code === 'ENOENT') {\n      // We don't really care if there are no extensions, just return an empty object.\n      return {};\n    }\n\n    throw err;\n  }\n\n  // Get extensions from each element folder.  Each is stored as\n  // `['element name', 'extension name']`\n  const elementArrays = (\n    await async.map(elementFolders, async (element) => {\n      const extensions = await fs.readdir(path.join(sourceDir, element));\n      return extensions.map((ext) => [element, ext]);\n    })\n  ).flat();\n\n  // Populate element map\n  const elements = {};\n  elementArrays.forEach((extension) => {\n    if (!(extension[0] in elements)) {\n      elements[extension[0]] = {};\n    }\n  });\n\n  // Load extensions\n  await async.each(elementArrays, async (extension) => {\n    const [element, extensionDir] = extension;\n    const infoPath = path.join(sourceDir, element, extensionDir, 'info.json');\n\n    let rawInfo;\n    try {\n      rawInfo = await fs.readJson(infoPath);\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        // Not an extension directory, skip it.\n        return;\n      } else if (err.code === 'ENOTDIR') {\n        // Random file, skip it as well.\n        return;\n      } else {\n        throw err;\n      }\n    }\n\n    elements[element][extensionDir] = {\n      name: extensionDir,\n      directory: path.join(runtimeDir, element, extensionDir),\n      ...ElementExtensionJsonSchema.parse(rawInfo),\n    };\n  });\n\n  return elements;\n}\n\nasync function loadExtensionsForCourse(context) {\n  const { course, course_dir, course_dir_host } = context;\n  if (\n    courseExtensionsCache[course.id] !== undefined &&\n    courseExtensionsCache[course.id].commit_hash &&\n    courseExtensionsCache[course.id].commit_hash === course.commit_hash\n  ) {\n    return courseExtensionsCache[course.id].data;\n  }\n\n  const extensions = await loadExtensions(\n    path.join(course_dir_host, 'elementExtensions'),\n    path.join(course_dir, 'elementExtensions'),\n  );\n  courseExtensionsCache[course.id] = {\n    commit_hash: course.commit_hash,\n    data: extensions,\n  };\n  return extensions;\n}\n\n/**\n * Wipes the element and extension cache.  This is only needed in\n * dev mode because each cache tracks Git commit hashes.\n */\nexport function flushElementCache() {\n  courseElementsCache = {};\n  courseExtensionsCache = {};\n}\n\n/**\n * @param {string} elementName\n * @param {QuestionProcessingContext} context\n */\nfunction resolveElement(elementName, context) {\n  if (Object.prototype.hasOwnProperty.call(context.course_elements, elementName)) {\n    return context.course_elements[elementName];\n  } else if (Object.prototype.hasOwnProperty.call(coreElementsCache, elementName)) {\n    return coreElementsCache[elementName];\n  } else {\n    throw new Error(`No such element: ${elementName}`);\n  }\n}\n\nfunction getElementController(elementName, context) {\n  const element = resolveElement(elementName, context);\n  return path.join(element.directory, element.controller);\n}\n\n/**\n * Add clientFiles urls for elements and extensions.\n * Returns a copy of data with the new urls inserted.\n */\nfunction getElementClientFiles(data, elementName, context) {\n  let dataCopy = structuredClone(data);\n  // The options field wont contain URLs unless in the 'render' stage, so\n  // check if it is populated before adding the element url\n  if ('base_url' in data.options) {\n    dataCopy.options.client_files_element_url = assets.courseElementAssetPath(\n      context.course.commit_hash,\n      data.options.base_url,\n      `${elementName}/clientFilesElement`,\n    );\n    dataCopy.options.client_files_extensions_url = {};\n\n    if (Object.prototype.hasOwnProperty.call(context.course_element_extensions, elementName)) {\n      Object.keys(context.course_element_extensions[elementName]).forEach((extension) => {\n        const url = assets.courseElementExtensionAssetPath(\n          context.course.commit_hash,\n          data.options.base_url,\n          `${elementName}/${extension}/clientFilesExtension`,\n        );\n        dataCopy.options.client_files_extensions_url[extension] = url;\n      });\n    }\n  }\n  return dataCopy;\n}\n\nasync function elementFunction(codeCaller, fcn, elementName, elementHtml, data, context) {\n  const resolvedElement = resolveElement(elementName, context);\n  const { controller, type: resolvedElementType, name: resolvedElementName } = resolvedElement;\n  const dataCopy = getElementClientFiles(data, elementName, context);\n\n  const pythonArgs = [elementHtml, dataCopy];\n  const pythonFile = controller.replace(/\\.[pP][yY]$/, '');\n  const type = `${resolvedElementType}-element`;\n  const directory = resolvedElementName;\n\n  try {\n    return await codeCaller.call(type, directory, pythonFile, fcn, pythonArgs);\n  } catch (err) {\n    if (err instanceof FunctionMissingError) {\n      // function wasn't present in server\n      return {\n        result: defaultElementFunctionRet(fcn, dataCopy),\n        output: '',\n      };\n    }\n    throw err;\n  }\n}\n\nfunction defaultElementFunctionRet(phase, data) {\n  if (phase === 'render') {\n    return '';\n  } else if (phase === 'file') {\n    return '';\n  } else {\n    return data;\n  }\n}\n\nfunction defaultServerRet(phase, data, html, _context) {\n  if (phase === 'render') {\n    return html;\n  } else if (phase === 'file') {\n    return '';\n  } else {\n    return data;\n  }\n}\n\nasync function execPythonServer(codeCaller, phase, data, html, context) {\n  const pythonFile = 'server';\n  const pythonFunction = phase;\n  const pythonArgs = [data];\n  if (phase === 'render') pythonArgs.push(html);\n  const fullFilename = path.join(context.question_dir_host, 'server.py');\n  const type = 'question';\n  const directory = context.question.directory;\n\n  try {\n    await fs.access(fullFilename, fs.constants.R_OK);\n  } catch {\n    // server.py does not exist\n    return { result: defaultServerRet(phase, data, html, context), output: '' };\n  }\n\n  debug(\n    `execPythonServer(): codeCaller.call(pythonFile=${pythonFile}, pythonFunction=${pythonFunction})`,\n  );\n  try {\n    const { result, output } = await codeCaller.call(\n      type,\n      directory,\n      pythonFile,\n      pythonFunction,\n      pythonArgs,\n    );\n    debug('execPythonServer(): completed');\n    return { result, output };\n  } catch (err) {\n    if (err instanceof FunctionMissingError) {\n      // function wasn't present in server\n      debug('execPythonServer(): function not present');\n      return {\n        result: defaultServerRet(phase, data, html, context),\n        output: '',\n      };\n    }\n    throw err;\n  }\n}\n\nasync function execTemplate(htmlFilename, data) {\n  const rawFile = await fs.readFile(htmlFilename, { encoding: 'utf8' });\n  let html = mustache.render(rawFile, data);\n  html = markdown.processQuestion(html);\n  const $ = cheerio.load(html, {\n    xml: {\n      // This is necessary for Cheerio to use `htmlparser2` instead of `parse5`.\n      xmlMode: false,\n      recognizeSelfClosing: true,\n    },\n  });\n  return { html, $ };\n}\n\nfunction checkData(data, origData, phase) {\n  const checked = [];\n  const checkProp = (prop, type, presentPhases, editPhases) => {\n    if (!presentPhases.includes(phase)) return null;\n    if (!Object.prototype.hasOwnProperty.call(data, prop)) {\n      return `\"${prop}\" is missing from \"data\"`;\n    }\n    if (type === 'integer') {\n      if (!Number.isInteger(data[prop])) {\n        return `data.${prop} is not an integer: ${String(data[prop])}`;\n      }\n    } else if (type === 'number') {\n      if (!Number.isFinite(data[prop])) {\n        return `data.${prop} is not a number: ${String(data[prop])}`;\n      }\n    } else if (type === 'string') {\n      if (typeof data[prop] !== 'string') {\n        return `data.${prop} is not a string: ${String(data[prop])}`;\n      }\n    } else if (type === 'boolean') {\n      if (data[prop] !== true && data[prop] !== false) {\n        return `data.${prop} is not a boolean: ${String(data[prop])}`;\n      }\n    } else if (type === 'object') {\n      if (data[prop] == null || typeof data[prop] !== 'object') {\n        return `data.${prop} is not an object: ${String(data[prop])}`;\n      }\n    } else {\n      return `invalid type: ${String(type)}`;\n    }\n    if (!editPhases.includes(phase)) {\n      if (!Object.prototype.hasOwnProperty.call(origData, prop)) {\n        return `\"${prop}\" is missing from \"origData\"`;\n      }\n      if (!_.isEqual(data[prop], origData[prop])) {\n        return `data.${prop} has been illegally modified, new value: \"${JSON.stringify(\n          data[prop],\n        )}\", original value: \"${JSON.stringify(origData[prop])}\"`;\n      }\n    }\n    checked.push(prop);\n    return null;\n  };\n\n  let err;\n  let allPhases = ['generate', 'prepare', 'render', 'parse', 'grade', 'test', 'file'];\n\n  if (!allPhases.includes(phase)) return `unknown phase: ${phase}`;\n\n  // The following code is deliberately formatted as it is to aid in comprehension,\n  // so we prevent Prettier from reformatting the code to span multiple lines.\n  // prettier-ignore\n  /**************************************************************************************************************************************/\n  //              property                 type       presentPhases                         changePhases\n  /**************************************************************************************************************************************/\n  err =   checkProp('params',                'object',  allPhases,                            ['generate', 'prepare', 'parse', 'grade'])\n       || checkProp('correct_answers',       'object',  allPhases,                            ['generate', 'prepare', 'parse', 'grade'])\n       || checkProp('variant_seed',          'integer', allPhases,                            [])\n       || checkProp('options',               'object',  allPhases,                            [])\n       || checkProp('submitted_answers',     'object',  ['render', 'parse', 'grade'],         ['parse', 'grade'])\n       || checkProp('format_errors',         'object',  ['render', 'parse', 'grade', 'test'], ['parse', 'grade', 'test'])\n       || checkProp('raw_submitted_answers', 'object',  ['render', 'parse', 'grade', 'test'], ['test'])\n       || checkProp('partial_scores',        'object',  ['render', 'grade', 'test'],          ['grade', 'test'])\n       || checkProp('score',                 'number',  ['render', 'grade', 'test'],          ['grade', 'test'])\n       || checkProp('feedback',              'object',  ['render', 'parse', 'grade', 'test'], ['grade', 'parse', 'test'])\n       || checkProp('editable',              'boolean', ['render'],                           [])\n       || checkProp('manual_grading',        'boolean', ['render'],                           [])\n       || checkProp('panel',                 'string',  ['render'],                           [])\n       || checkProp('num_valid_submissions','integer',  ['render'],                           [])\n       || checkProp('gradable',              'boolean', ['parse', 'grade', 'test'],           [])\n       || checkProp('filename',              'string',  ['file'],                             [])\n       || checkProp('test_type',             'string',  ['test'],                             [])\n       || checkProp('answers_names',         'object',  ['prepare'],                          ['prepare']);\n  if (err) return err;\n\n  const extraProps = _.difference(Object.keys(data), checked);\n  if (extraProps.length > 0) return `\"data\" has invalid extra keys: ${extraProps.join(', ')}`;\n\n  return null;\n}\n\n/**\n * @template T\n * @param {string} phase\n * @param {import('../lib/code-caller/index.js').CodeCaller} codeCaller\n * @param {T} data\n * @param {QuestionProcessingContext} context\n * @param {string} html\n */\nasync function experimentalProcess(phase, codeCaller, data, context, html) {\n  const pythonContext = {\n    html,\n    elements: {\n      ...coreElementsCache,\n      // Course elements should always take precedence over core elements.\n      ...context.course_elements,\n    },\n    element_extensions: context.course_element_extensions,\n    course_path: config.workersExecutionMode === 'container' ? '/course' : context.course_dir_host,\n  };\n  const courseIssues = [];\n  let result = null;\n  let output = null;\n\n  try {\n    const res = await codeCaller.call(\n      'question',\n      context.question.directory,\n      'question.html',\n      phase,\n      [pythonContext, data],\n    );\n    result = res.result;\n    output = res.output;\n  } catch (err) {\n    courseIssues.push(\n      new CourseIssueError(err.message, {\n        data: err.data,\n        cause: err,\n        fatal: true,\n      }),\n    );\n  }\n\n  if ((output?.length ?? 0) > 0) {\n    courseIssues.push(\n      new CourseIssueError(`output logged on console during ${phase}()`, {\n        data: { outputBoth: output },\n        fatal: false,\n      }),\n    );\n  }\n\n  return {\n    courseIssues,\n    // Casting to the type of the argument is safe; a given phase is never allowed\n    // to change the top-level shape of the data.\n    data: /** @type T */ (result?.data) ?? data,\n    html: result?.html ?? '',\n    fileData: Buffer.from(result?.file ?? '', 'base64'),\n    renderedElementNames: result?.processed_elements ?? [],\n  };\n}\n\n/**\n * @template T\n * @param {string} phase\n * @param {import('../lib/code-caller/index.js').CodeCaller} codeCaller\n * @param {T} data\n * @param {QuestionProcessingContext} context\n * @param {string} html\n */\nasync function traverseQuestionAndExecuteFunctions(phase, codeCaller, data, context, html) {\n  const origData = structuredClone(data);\n  const renderedElementNames = [];\n  const courseIssues = [];\n  let fileData = Buffer.from('');\n  const questionElements = new Set([\n    ...Object.keys(coreElementsCache),\n    ...Object.keys(context.course_elements),\n  ]);\n\n  const visitNode = async (node) => {\n    if (node.tagName && questionElements.has(node.tagName)) {\n      const elementName = node.tagName;\n      const elementFile = getElementController(elementName, context);\n      if (phase === 'render' && !renderedElementNames.includes(elementName)) {\n        renderedElementNames.push(elementName);\n      }\n\n      // Populate any extensions used by this element.\n      const extensions = run(() => {\n        if (Object.prototype.hasOwnProperty.call(context.course_element_extensions, elementName)) {\n          return context.course_element_extensions[elementName];\n        }\n        return {};\n      });\n\n      // We need to wrap it in another node, since only child nodes\n      // are serialized\n      const serializedNode = parse5.serialize({\n        nodeName: '#document-fragment',\n        childNodes: [node],\n      });\n      let ret_val, consoleLog;\n      try {\n        ({ result: ret_val, output: consoleLog } = await elementFunction(\n          codeCaller,\n          phase,\n          elementName,\n          serializedNode,\n          { ...data, extensions },\n          context,\n        ));\n      } catch (e) {\n        // We'll catch this and add it to the course issues list\n        throw new CourseIssueError(`${elementFile}: Error calling ${phase}(): ${e.toString()}`, {\n          cause: e,\n          data: e.data,\n          fatal: true,\n        });\n      }\n\n      // Remove any element extensions since they're not used elsewhere.\n      delete ret_val.extensions;\n\n      if (typeof consoleLog === 'string' && consoleLog.length > 0) {\n        courseIssues.push(\n          new CourseIssueError(`${elementFile}: output logged on console during ${phase}()`, {\n            data: { outputBoth: consoleLog },\n            fatal: false,\n          }),\n        );\n      }\n      if (phase === 'render') {\n        if (typeof ret_val !== 'string') {\n          throw new CourseIssueError(\n            `${elementFile}: Error calling ${phase}(): return value is not a string`,\n            { data: ret_val, fatal: true },\n          );\n        }\n        node = parse5.parseFragment(ret_val);\n      } else if (phase === 'file') {\n        // Convert ret_val from base64 back to buffer (this always works,\n        // whether or not ret_val is valid base64)\n        const buf = Buffer.from(ret_val, 'base64');\n        // If the buffer has non-zero length...\n        if (buf.length > 0) {\n          if (fileData.length > 0) {\n            // If fileData already has non-zero length, throw an error\n            throw new CourseIssueError(\n              `${elementFile}: Error calling ${phase}(): attempting to overwrite non-empty fileData`,\n              { fatal: true },\n            );\n          } else {\n            // If not, replace fileData with buffer\n            fileData = buf;\n          }\n        }\n      } else {\n        // the following line is safe because we can't be in multiple copies of this function simultaneously\n        data = ret_val;\n        const checkErr = checkData(data, origData, phase);\n        if (checkErr) {\n          throw new CourseIssueError(\n            `${elementFile}: Invalid state after ${phase}(): ${checkErr}`,\n            { fatal: true },\n          );\n        }\n      }\n    }\n    const newChildren = [];\n    for (let i = 0; i < (node.childNodes || []).length; i++) {\n      const childRes = await visitNode(node.childNodes[i]);\n      if (childRes) {\n        if (childRes.nodeName === '#document-fragment') {\n          newChildren.push(...childRes.childNodes);\n        } else {\n          newChildren.push(childRes);\n        }\n      }\n    }\n    // the following line is safe because we can't be in multiple copies of this function simultaneously\n    node.childNodes = newChildren;\n    return node;\n  };\n  let questionHtml = '';\n  try {\n    const res = await visitNode(parse5.parseFragment(html));\n    questionHtml = parse5.serialize(res);\n  } catch (e) {\n    courseIssues.push(e);\n  }\n\n  return {\n    courseIssues,\n    data,\n    html: questionHtml,\n    fileData,\n    renderedElementNames,\n  };\n}\n\n/**\n * @template T\n * @param {string} phase\n * @param {import('../lib/code-caller/index.js').CodeCaller} codeCaller\n * @param {T} data\n * @param {QuestionProcessingContext} context\n * @param {cheerio.CheerioAPI} $\n */\nasync function legacyTraverseQuestionAndExecuteFunctions(phase, codeCaller, data, context, $) {\n  const origData = structuredClone(data);\n  const renderedElementNames = [];\n  const courseIssues = [];\n  let fileData = Buffer.from('');\n  const questionElements = new Set([\n    ...Object.keys(coreElementsCache),\n    ...Object.keys(context.course_elements),\n  ]).values();\n\n  try {\n    await async.eachSeries(questionElements, async (elementName) => {\n      await async.eachSeries($(elementName).toArray(), async (element) => {\n        if (phase === 'render' && !renderedElementNames.includes(elementName)) {\n          renderedElementNames.push(elementName);\n        }\n\n        const elementFile = getElementController(elementName, context);\n\n        // Populate any extensions used by this element.\n        const extensions = run(() => {\n          if (\n            Object.prototype.hasOwnProperty.call(context.course_element_extensions, elementName)\n          ) {\n            return context.course_element_extensions[elementName];\n          }\n          return {};\n        });\n\n        const elementHtml = $(element).clone().wrap('<container/>').parent().html();\n\n        let result, output;\n        try {\n          ({ result, output } = await elementFunction(\n            codeCaller,\n            phase,\n            elementName,\n            elementHtml,\n            { ...data, extensions },\n            context,\n          ));\n        } catch (err) {\n          const courseIssue = new CourseIssueError(\n            `${elementFile}: Error calling ${phase}(): ${err.toString()}`,\n            { data: err.data, fatal: true },\n          );\n          courseIssues.push(courseIssue);\n\n          // We won't actually use this error, but we do still need to throw\n          // it to abort the current traversal.\n          throw courseIssue;\n        }\n\n        // Remove any element extensions since they're not used elsewhere.\n        delete result.extensions;\n\n        if (typeof output === 'string' && output.length > 0) {\n          courseIssues.push(\n            new CourseIssueError(`${elementFile}: output logged on console during ${phase}()`, {\n              data: { outputBoth: output },\n              fatal: false,\n            }),\n          );\n        }\n\n        if (phase === 'render') {\n          if (typeof result !== 'string') {\n            const courseIssue = new CourseIssueError(\n              `${elementFile}: Error calling ${phase}(): return value is not a string`,\n              { data: { result }, fatal: true },\n            );\n            courseIssues.push(courseIssue);\n\n            // As above, we just throw to abort the traversal.\n            throw courseIssue;\n          }\n\n          $(element).replaceWith(result);\n        } else if (phase === 'file') {\n          // Convert ret_val from base64 back to buffer (this always works,\n          // whether or not ret_val is valid base64)\n          const buf = Buffer.from(result, 'base64');\n\n          // If the buffer has non-zero length...\n          if (buf.length > 0) {\n            if (fileData.length > 0) {\n              // If fileData already has non-zero length, throw an error\n              const courseIssue = new CourseIssueError(\n                `${elementFile}: Error calling ${phase}(): attempting to overwrite non-empty fileData`,\n                { fatal: true },\n              );\n              courseIssues.push(courseIssue);\n\n              // As above, throw the error to abort the traversal.\n              throw courseIssue;\n            } else {\n              // If not, replace fileData with buffer\n              fileData = buf;\n            }\n          }\n        } else {\n          data = result;\n          const checkErr = checkData(data, origData, phase);\n          if (checkErr) {\n            const courseIssue = new CourseIssueError(\n              `${elementFile}: Invalid state after ${phase}(): ${checkErr}`,\n              { fatal: true },\n            );\n            courseIssues.push(courseIssue);\n\n            // As above, throw the error to abort the traversal.\n            throw courseIssue;\n          }\n        }\n      });\n    });\n  } catch {\n    // Black-hole any errors, they were (should have been) handled by course issues\n  }\n\n  return {\n    courseIssues,\n    data,\n    html: $.html(),\n    fileData,\n    renderedElementNames,\n  };\n}\n\n/**\n * @param {unknown} val\n * @return {{ score: number, weight: number }}\n */\nfunction getPartialScoreValues(val) {\n  const obj = /** @type {Record<string, unknown>} */ (\n    typeof val === 'object' && val != null ? val : {}\n  );\n  return {\n    score: typeof obj.score === 'number' ? obj.score : 0,\n    weight: typeof obj.weight === 'number' ? obj.weight : 1,\n  };\n}\n\n/**\n * @template {import('./types.js').ExecutionData} T\n * @param {string} phase\n * @param {import('../lib/code-caller/index.js').CodeCaller} codeCaller\n * @param {T} data\n * @param {QuestionProcessingContext} context\n */\nasync function processQuestionHtml(phase, codeCaller, data, context) {\n  // We deliberately reuse the same `data` object for both the \"new\" and \"original\"\n  // arguments to avoid an unnecessary deep clone and comparison.\n  const checkErr = checkData(data, data, phase);\n  if (checkErr) {\n    return {\n      courseIssues: [\n        new CourseIssueError(`Invalid state before ${phase}(): ${checkErr}`, { fatal: true }),\n      ],\n      data,\n      html: '',\n      fileData: Buffer.from(''),\n      renderedElementNames: [],\n    };\n  }\n\n  const htmlFilename = path.join(context.question_dir_host, 'question.html');\n  let html, $;\n  try {\n    ({ html, $ } = await execTemplate(htmlFilename, data));\n  } catch (err) {\n    return {\n      courseIssues: [new CourseIssueError(`${htmlFilename}: ${err.toString()}`, { fatal: true })],\n      data,\n      html: '',\n      fileData: Buffer.from(''),\n      renderedElementNames: [],\n    };\n  }\n\n  const {\n    courseIssues,\n    data: resultData,\n    html: processedHtml,\n    fileData,\n    renderedElementNames,\n  } = await run(async () => {\n    if (context.renderer === 'experimental') {\n      return await experimentalProcess(phase, codeCaller, data, context, html);\n    } else if (context.renderer === 'default') {\n      return await traverseQuestionAndExecuteFunctions(phase, codeCaller, data, context, html);\n    } else {\n      return await legacyTraverseQuestionAndExecuteFunctions(phase, codeCaller, data, context, $);\n    }\n  });\n\n  if (phase === 'grade' || phase === 'test') {\n    if (context.question.partial_credit) {\n      let total_weight = 0;\n      let total_weight_score = 0;\n      for (const value of Object.values(resultData.partial_scores ?? {})) {\n        const { score, weight } = getPartialScoreValues(value);\n        total_weight += weight;\n        total_weight_score += weight * score;\n      }\n      resultData.score = total_weight_score / (total_weight === 0 ? 1 : total_weight);\n    } else {\n      let score = 0;\n      if (\n        Object.keys(resultData.partial_scores ?? {}).length > 0 &&\n        Object.values(resultData.partial_scores ?? {}).every(\n          (value) => getPartialScoreValues(value).score >= 1,\n        )\n      ) {\n        score = 1;\n      }\n      resultData.score = score;\n    }\n  }\n\n  return {\n    courseIssues,\n    data: resultData,\n    html: processedHtml,\n    fileData,\n    renderedElementNames,\n  };\n}\n\n/**\n * @template T\n * @param {string} phase\n * @param {import('../lib/code-caller/code-caller-shared.js').CodeCaller} codeCaller\n * @param {T} data\n * @param {string} html\n * @param {any} fileData\n * @param {QuestionProcessingContext} context\n */\nasync function processQuestionServer(phase, codeCaller, data, html, fileData, context) {\n  const courseIssues = [];\n  const origData = structuredClone(data);\n\n  const checkErrBefore = checkData(data, origData, phase);\n  if (checkErrBefore) {\n    courseIssues.push(\n      new CourseIssueError(`Invalid state before calling server ${phase}(): ${checkErrBefore}`, {\n        fatal: true,\n      }),\n    );\n    return { courseIssues, data, html: '', fileData: Buffer.from(''), renderedElementNames: [] };\n  }\n\n  let result, output;\n  try {\n    ({ result, output } = await execPythonServer(codeCaller, phase, data, html, context));\n  } catch (err) {\n    const serverFile = path.join(context.question_dir, 'server.py');\n    courseIssues.push(\n      new CourseIssueError(`${serverFile}: Error calling ${phase}(): ${err.toString()}`, {\n        data: err.data,\n        fatal: true,\n        cause: err,\n      }),\n    );\n    return { courseIssues, data };\n  }\n\n  if (typeof output === 'string' && output.length > 0) {\n    const serverFile = path.join(context.question_dir, 'server.py');\n    courseIssues.push(\n      new CourseIssueError(`${serverFile}: output logged on console`, {\n        data: { outputBoth: output },\n        fatal: false,\n      }),\n    );\n  }\n\n  if (phase === 'render') {\n    html = result;\n  } else if (phase === 'file') {\n    // Convert ret_val from base64 back to buffer (this always works,\n    // whether or not ret_val is valid base64)\n    var buf = Buffer.from(result, 'base64');\n\n    // If the buffer has non-zero length...\n    if (buf.length > 0) {\n      if (fileData.length > 0) {\n        // If fileData already has non-zero length, throw an error\n        const serverFile = path.join(context.question_dir, 'server.py');\n        courseIssues.push(\n          new CourseIssueError(\n            `${serverFile}: Error calling ${phase}(): attempting to overwrite non-empty fileData`,\n            { fatal: true },\n          ),\n        );\n        return { courseIssues, data };\n      } else {\n        // If not, replace fileData with a copy of buffer\n        fileData = Buffer.from(buf);\n      }\n    }\n  } else {\n    data = result;\n  }\n  const checkErrAfter = checkData(data, origData, phase);\n  if (checkErrAfter) {\n    const serverFile = path.join(context.question_dir, 'server.py');\n    courseIssues.push(\n      new CourseIssueError(`${serverFile}: Invalid state after ${phase}(): ${checkErrAfter}`, {\n        fatal: true,\n      }),\n    );\n    return { courseIssues, data };\n  }\n\n  return { courseIssues, data, html, fileData };\n}\n\n/**\n * @template {import('./types.js').ExecutionData} T\n * @param {string} phase\n * @param {import('../lib/code-caller/index.js').CodeCaller} codeCaller\n * @param {T} data\n * @param {QuestionProcessingContext} context\n */\nasync function processQuestion(phase, codeCaller, data, context) {\n  const meter = metrics.getMeter('prairielearn');\n  return instrumentedWithMetrics(\n    meter,\n    `freeform.${phase}`,\n    async () => {\n      if (phase === 'generate') {\n        return processQuestionServer(phase, codeCaller, data, '', Buffer.from(''), context);\n      } else {\n        const {\n          courseIssues,\n          data: htmlData,\n          html,\n          fileData,\n          renderedElementNames,\n        } = await processQuestionHtml(phase, codeCaller, data, context);\n        const hasFatalError = courseIssues.some((issue) => issue.fatal);\n        if (hasFatalError) {\n          return {\n            courseIssues,\n            data,\n            html,\n            fileData,\n            renderedElementNames,\n          };\n        }\n        const {\n          courseIssues: serverCourseIssues,\n          data: serverData,\n          html: serverHtml,\n          fileData: serverFileData,\n        } = await processQuestionServer(phase, codeCaller, htmlData, html, fileData, context);\n        courseIssues.push(...serverCourseIssues);\n        return {\n          courseIssues,\n          data: serverData,\n          html: serverHtml,\n          fileData: serverFileData,\n          renderedElementNames,\n        };\n      }\n    },\n    (duration) => {\n      canonicalLogger.increment(`freeform.${phase}.count`, 1);\n      canonicalLogger.increment(`freeform.${phase}.duration`, duration);\n    },\n  );\n}\n\n/**\n * Gets any options that are available in any freeform phase.\n * These include file paths that are relevant for questions and elements.\n * URLs are not included here because those are only applicable during 'render'.\n */\nfunction getContextOptions(context) {\n  let options = {};\n  options.question_path = context.question_dir;\n  options.client_files_question_path = path.join(context.question_dir, 'clientFilesQuestion');\n  options.client_files_course_path = path.join(context.course_dir, 'clientFilesCourse');\n  options.server_files_course_path = path.join(context.course_dir, 'serverFilesCourse');\n  options.course_extensions_path = path.join(context.course_dir, 'elementExtensions');\n  return options;\n}\n\n/**\n * @param {import('../lib/db-types.js').Question} question\n * @param {import('../lib/db-types.js').Course} course\n * @param {string} variant_seed\n * @returns {import('./types.js').QuestionServerReturnValue<import('./types.js').GenerateResultData>}\n */\nexport async function generate(question, course, variant_seed) {\n  return instrumented('freeform.generate', async () => {\n    const context = await getContext(question, course);\n\n    /** @satisfies {import('./types.js').ExecutionData} */\n    const data = {\n      params: {},\n      correct_answers: {},\n      variant_seed: parseInt(variant_seed, 36),\n      options: { ...course.options, ...question.options, ...getContextOptions(context) },\n    };\n\n    return await withCodeCaller(course, async (codeCaller) => {\n      const { courseIssues, data: resultData } = await processQuestion(\n        'generate',\n        codeCaller,\n        data,\n        context,\n      );\n      return {\n        courseIssues,\n        data: {\n          params: resultData.params,\n          true_answer: resultData.correct_answers,\n        },\n      };\n    });\n  });\n}\n\n/**\n * @param {import('../lib/db-types.js').Question} question\n * @param {import('../lib/db-types.js').Course} course\n * @param {import('../lib/db-types.js').Variant} variant\n * @returns {import('./types.js').QuestionServerReturnValue<import('./types.js').PrepareResultData>}\n */\nexport async function prepare(question, course, variant) {\n  return instrumented('freeform.prepare', async () => {\n    if (variant.broken_at) throw new Error('attempted to prepare broken variant');\n\n    const context = await getContext(question, course);\n\n    /** @satisfies {import('./types.js').ExecutionData} */\n    const data = {\n      // These should never be null, but that can't be encoded in the schema.\n      params: variant.params ?? {},\n      correct_answers: variant.true_answer ?? {},\n      variant_seed: parseInt(variant.variant_seed, 36),\n      options: { ...(variant.options ?? {}), ...getContextOptions(context) },\n      answers_names: {},\n    };\n\n    return await withCodeCaller(course, async (codeCaller) => {\n      const { courseIssues, data: resultData } = await processQuestion(\n        'prepare',\n        codeCaller,\n        data,\n        context,\n      );\n      return {\n        courseIssues,\n        data: {\n          params: resultData.params,\n          true_answer: resultData.correct_answers,\n        },\n      };\n    });\n  });\n}\n\n/**\n * @typedef {Object} RenderPanelResult\n * @property {any[]} courseIssues\n * @property {string} html\n * @property {string} [renderer]\n * @property {string[]} [renderedElementNames]\n * @property {boolean} [cacheHit]\n */\n\n/**\n * @param {'question' | 'answer' | 'submission'} panel\n * @param {import('../lib/code-caller/index.js').CodeCaller} codeCaller\n * @param {import('../lib/db-types.js').Variant} variant\n * @param {import('../lib/db-types.js').Submission?} submission\n * @param {import('../lib/db-types.js').Course} course\n * @param {Record<string, any>} locals\n * @param {QuestionProcessingContext} context\n * @returns {Promise<RenderPanelResult>}\n */\nasync function renderPanel(panel, codeCaller, variant, submission, course, locals, context) {\n  debug(`renderPanel(${panel})`);\n  // broken variant kills all rendering\n  if (variant.broken_at) {\n    return {\n      courseIssues: [],\n      html: 'Broken question due to error in question code',\n    };\n  }\n\n  // broken submission kills the submission panel, but we can\n  // proceed with other panels, treating the submission as\n  // missing\n  if (submission && submission.broken) {\n    if (panel === 'submission') {\n      return {\n        courseIssues: [],\n        html: 'Broken submission due to error in question code',\n      };\n    } else {\n      submission = null;\n    }\n  }\n\n  if (panel === 'question' && locals.questionRenderContext === 'ai_grading') {\n    // For AI grading, the question panel is always rendered without a specific\n    // submission. The question panel is meant to provide context to the LLM;\n    // all student submissions will be provided by rendering the submission panel.\n    submission = null;\n  }\n\n  // This URL is submission-specific, so we have to compute it here (that is,\n  // it won't be present in `locals`). This URL will only have meaning if\n  // there's a submission, so it will be `null` otherwise.\n  const submissionFilesUrl = submission\n    ? locals.questionUrl + `submission/${submission?.id}/file`\n    : null;\n\n  const options = {\n    ...(variant.options ?? {}),\n    client_files_question_url: locals.clientFilesQuestionUrl,\n    client_files_course_url: locals.clientFilesCourseUrl,\n    client_files_question_dynamic_url: locals.clientFilesQuestionGeneratedFileUrl,\n    course_element_files_url: assets.courseElementAssetBasePath(\n      course.commit_hash,\n      locals.urlPrefix,\n    ),\n    course_element_extension_files_url: assets.courseElementExtensionAssetBasePath(\n      course.commit_hash,\n      locals.urlPrefix,\n    ),\n    submission_files_url: submission ? submissionFilesUrl : null,\n    base_url: locals.baseUrl,\n    workspace_url: locals.workspaceUrl || null,\n    ...getContextOptions(context),\n  };\n\n  /** @satisfies {import('./types.js').ExecutionData} */\n  const data = {\n    // `params` and `true_answer` are allowed to change during `parse()`/`grade()`,\n    // so we'll use the submission's values if they exist.\n    //\n    // These should never be null, but that can't be encoded in the schema.\n    params: submission?.params ?? variant.params ?? {},\n    correct_answers: submission?.true_answer ?? variant.true_answer ?? {},\n    submitted_answers: submission?.submitted_answer ?? {},\n    format_errors: submission?.format_errors ?? {},\n    partial_scores: submission?.partial_scores ?? {},\n    score: submission?.score ?? 0,\n    feedback: submission?.feedback ?? {},\n    variant_seed: parseInt(variant.variant_seed ?? '0', 36),\n    options,\n    raw_submitted_answers: submission?.raw_submitted_answer ?? {},\n    editable: !!(\n      locals.allowAnswerEditing &&\n      !['manual_grading', 'ai_grading'].includes(locals.questionRenderContext)\n    ),\n    manual_grading: run(() => {\n      if (locals.questionRenderContext === 'manual_grading') return true;\n      if (locals.questionRenderContext === 'ai_grading') {\n        // We deliberately do not set `manualGradingInterface: true` when rendering\n        // the submission for AI grading. The expectation is that instructors will\n        // use elements like `<pl-manual-grading-only>` to provide extra instructions\n        // to the LLM. We don't want to mix in instructions like that with the\n        // student's response.\n        return panel !== 'submission';\n      }\n      return false;\n    }),\n    panel,\n    num_valid_submissions: variant.num_tries ?? null,\n  };\n\n  const { data: cachedData, cacheHit } = await getCachedDataOrCompute(\n    course,\n    data,\n    context,\n    async () => {\n      const { courseIssues, html, renderedElementNames } = await processQuestion(\n        'render',\n        codeCaller,\n        data,\n        context,\n      );\n      return { courseIssues, html, renderedElementNames };\n    },\n  );\n\n  return {\n    ...cachedData,\n    // We need to transform the resulting HTML to strip out any data that\n    // isn't relevant during AI grading.\n    html:\n      locals.questionRenderContext === 'ai_grading'\n        ? await stripHtmlForAiGrading(cachedData.html)\n        : cachedData.html,\n    cacheHit,\n  };\n}\n\nasync function renderPanelInstrumented(\n  panel,\n  codeCaller,\n  submission,\n  variant,\n  question,\n  course,\n  locals,\n  context,\n) {\n  return instrumented(`freeform.renderPanel:${panel}`, async (span) => {\n    span.setAttributes({\n      panel,\n      'variant.id': variant.id,\n      'question.id': question.id,\n      'course.id': course.id,\n    });\n    /** @type {RenderPanelResult} */\n    const result = await renderPanel(\n      panel,\n      codeCaller,\n      variant,\n      submission,\n      course,\n      locals,\n      context,\n    );\n    span.setAttribute('cache.status', result.cacheHit ? 'hit' : 'miss');\n    return result;\n  });\n}\n\nexport async function render(\n  renderSelection,\n  variant,\n  question,\n  submission,\n  submissions,\n  course,\n  locals,\n) {\n  return instrumented('freeform.render', async () => {\n    debug('render()');\n    const htmls = {\n      extraHeadersHtml: '',\n      questionHtml: '',\n      submissionHtmls: submissions.map(() => ''),\n      answerHtml: '',\n    };\n    let allRenderedElementNames = [];\n    const courseIssues = [];\n    const context = await getContext(question, course);\n\n    // Hack: we need to propagate this back up to the original caller so\n    // they can expose the selected renderer to the client via a header, but\n    // parent functions don't actually return things. So we'll just stick it\n    // in the `locals` object that the parent will be able to read from.\n    //\n    // See the `setRendererHeader` function in `lib/question-render`\n    // for where this is actually used.\n    locals.question_renderer = context.renderer;\n\n    return withCodeCaller(course, async (codeCaller) => {\n      if (renderSelection.question) {\n        const {\n          courseIssues: newCourseIssues,\n          html,\n          renderedElementNames,\n        } = await renderPanelInstrumented(\n          'question',\n          codeCaller,\n          submission,\n          variant,\n          question,\n          course,\n          locals,\n          context,\n        );\n\n        courseIssues.push(...newCourseIssues);\n        htmls.questionHtml = html;\n        allRenderedElementNames = _.union(allRenderedElementNames, renderedElementNames);\n      }\n\n      if (renderSelection.submissions) {\n        htmls.submissionHtmls = await async.mapSeries(submissions, async (submission) => {\n          const {\n            courseIssues: newCourseIssues,\n            html,\n            renderedElementNames,\n          } = await renderPanelInstrumented(\n            'submission',\n            codeCaller,\n            submission,\n            variant,\n            question,\n            course,\n            locals,\n            context,\n          );\n\n          courseIssues.push(...newCourseIssues);\n          allRenderedElementNames = _.union(allRenderedElementNames, renderedElementNames);\n          return html;\n        });\n      }\n\n      if (renderSelection.answer) {\n        const {\n          courseIssues: newCourseIssues,\n          html,\n          renderedElementNames,\n        } = await renderPanelInstrumented(\n          'answer',\n          codeCaller,\n          submission,\n          variant,\n          question,\n          course,\n          locals,\n          context,\n        );\n\n        courseIssues.push(...newCourseIssues);\n        htmls.answerHtml = html;\n        allRenderedElementNames = _.union(allRenderedElementNames, renderedElementNames);\n      }\n\n      const extensions = context.course_element_extensions;\n      const dependencies = {\n        coreStyles: [],\n        coreScripts: [],\n        nodeModulesStyles: [],\n        nodeModulesScripts: [],\n        coreElementStyles: [],\n        coreElementScripts: [],\n        courseElementStyles: [],\n        courseElementScripts: [],\n        extensionStyles: [],\n        extensionScripts: [],\n        clientFilesCourseStyles: [],\n        clientFilesCourseScripts: [],\n        clientFilesQuestionStyles: [],\n        clientFilesQuestionScripts: [],\n      };\n      const dynamicDependencies = {\n        nodeModulesScripts: {},\n        coreElementScripts: {},\n        courseElementScripts: {},\n        extensionScripts: {},\n        clientFilesCourseScripts: {},\n      };\n\n      for (let type in question.dependencies) {\n        if (!(type in dependencies)) continue;\n\n        for (let dep of question.dependencies[type]) {\n          if (!dependencies[type].includes(dep)) {\n            dependencies[type].push(dep);\n          }\n        }\n      }\n\n      // Gather dependencies for all rendered elements\n      allRenderedElementNames.forEach((elementName) => {\n        let resolvedElement = resolveElement(elementName, context);\n        const elementDependencies = structuredClone(resolvedElement.dependencies) ?? {};\n        const elementDynamicDependencies =\n          structuredClone(resolvedElement.dynamicDependencies) ?? {};\n\n        // Transform non-global dependencies to be prefixed by the element name,\n        // since they'll be served from their element's directory\n        if ('elementStyles' in elementDependencies) {\n          elementDependencies.elementStyles = elementDependencies.elementStyles?.map(\n            (dep) => `${resolvedElement.name}/${dep}`,\n          );\n        }\n        if ('elementScripts' in elementDependencies) {\n          elementDependencies.elementScripts = elementDependencies.elementScripts?.map(\n            (dep) => `${resolvedElement.name}/${dep}`,\n          );\n        }\n        if ('elementScripts' in elementDynamicDependencies) {\n          elementDynamicDependencies.elementScripts = _.mapValues(\n            elementDynamicDependencies.elementScripts,\n            (dep) => `${resolvedElement.name}/${dep}`,\n          );\n        }\n\n        for (const type in elementDependencies) {\n          // Rename properties so we can track core and course element dependencies separately.\n          const resolvedType = run(() => {\n            if (resolvedElement.type === 'course') {\n              if (type === 'elementStyles') return 'courseElementStyles';\n              if (type === 'elementScripts') return 'courseElementScripts';\n            } else {\n              if (type === 'elementStyles') return 'coreElementStyles';\n              if (type === 'elementScripts') return 'coreElementScripts';\n            }\n            return type;\n          });\n\n          if (!(resolvedType in dependencies)) continue;\n\n          for (const dep of elementDependencies[type]) {\n            if (!dependencies[resolvedType].includes(dep)) {\n              dependencies[resolvedType].push(dep);\n            }\n          }\n        }\n\n        for (const type in elementDynamicDependencies) {\n          // Rename properties so we can track core and course element dependencies separately.\n          const resolvedType = run(() => {\n            if (resolvedElement.type === 'course') {\n              if (type === 'elementScripts') return 'courseElementScripts';\n            } else {\n              if (type === 'elementScripts') return 'coreElementScripts';\n            }\n            return type;\n          });\n\n          for (const key in elementDynamicDependencies[type]) {\n            if (!Object.hasOwn(dynamicDependencies[resolvedType], key)) {\n              dynamicDependencies[resolvedType][key] = elementDynamicDependencies[type][key];\n            } else if (\n              dynamicDependencies[resolvedType][key] !== elementDynamicDependencies[type][key]\n            ) {\n              courseIssues.push(\n                new CourseIssueError(`Dynamic dependency ${key} assigned to conflicting files`, {\n                  data: {\n                    dependencyType: type,\n                    values: [dynamicDependencies[type][key], elementDynamicDependencies[type][key]],\n                  },\n                  fatal: true,\n                }),\n              );\n            }\n          }\n        }\n\n        // Load any extensions if they exist\n        if (Object.prototype.hasOwnProperty.call(extensions, elementName)) {\n          for (const extensionName of Object.keys(extensions[elementName])) {\n            if (\n              !('dependencies' in extensions[elementName][extensionName]) &&\n              !('dynamicDependencies' in extensions[elementName][extensionName])\n            ) {\n              continue;\n            }\n\n            const extension =\n              structuredClone(extensions[elementName][extensionName].dependencies) ?? {};\n            const extensionDynamic =\n              structuredClone(extensions[elementName][extensionName].dynamicDependencies) ?? {};\n            if ('extensionStyles' in extension) {\n              extension.extensionStyles = extension.extensionStyles?.map(\n                (dep) => `${elementName}/${extensionName}/${dep}`,\n              );\n            }\n            if ('extensionScripts' in extension) {\n              extension.extensionScripts = extension.extensionScripts?.map(\n                (dep) => `${elementName}/${extensionName}/${dep}`,\n              );\n            }\n            if ('extensionScripts' in extensionDynamic) {\n              extensionDynamic.extensionScripts = _.mapValues(\n                extensionDynamic.extensionScripts,\n                (dep) => `${elementName}/${extensionName}/${dep}`,\n              );\n            }\n\n            for (const type in extension) {\n              if (!(type in dependencies)) continue;\n\n              for (const dep of extension[type]) {\n                if (!dependencies[type].includes(dep)) {\n                  dependencies[type].push(dep);\n                }\n              }\n            }\n            for (const type in extensionDynamic) {\n              for (const key in extensionDynamic[type]) {\n                if (!Object.hasOwn(dynamicDependencies[type], key)) {\n                  dynamicDependencies[type][key] = extensionDynamic[type][key];\n                } else if (dynamicDependencies[type][key] !== extensionDynamic[type][key]) {\n                  courseIssues.push(\n                    new CourseIssueError(\n                      `Dynamic dependency ${key} assigned to conflicting files`,\n                      {\n                        data: {\n                          dependencyType: type,\n                          values: [dynamicDependencies[type][key], extensionDynamic[type][key]],\n                        },\n                        fatal: true,\n                      },\n                    ),\n                  );\n                }\n              }\n            }\n          }\n        }\n      });\n\n      // Transform dependency list into style/link tags\n      const coreScriptUrls = [];\n      const scriptUrls = [];\n      const styleUrls = [];\n      dependencies.coreStyles.forEach((file) =>\n        styleUrls.push(assets.assetPath(`stylesheets/${file}`)),\n      );\n      dependencies.coreScripts.forEach((file) =>\n        coreScriptUrls.push(assets.assetPath(`javascripts/${file}`)),\n      );\n      dependencies.nodeModulesStyles.forEach((file) =>\n        styleUrls.push(assets.nodeModulesAssetPath(file)),\n      );\n      dependencies.nodeModulesScripts.forEach((file) =>\n        coreScriptUrls.push(assets.nodeModulesAssetPath(file)),\n      );\n      dependencies.clientFilesCourseStyles.forEach((file) =>\n        styleUrls.push(`${locals.urlPrefix}/clientFilesCourse/${file}`),\n      );\n      dependencies.clientFilesCourseScripts.forEach((file) =>\n        scriptUrls.push(`${locals.urlPrefix}/clientFilesCourse/${file}`),\n      );\n      dependencies.clientFilesQuestionStyles.forEach((file) =>\n        styleUrls.push(`${locals.clientFilesQuestionUrl}/${file}`),\n      );\n      dependencies.clientFilesQuestionScripts.forEach((file) =>\n        scriptUrls.push(`${locals.clientFilesQuestionUrl}/${file}`),\n      );\n      dependencies.coreElementStyles.forEach((file) =>\n        styleUrls.push(assets.coreElementAssetPath(file)),\n      );\n      dependencies.coreElementScripts.forEach((file) =>\n        scriptUrls.push(assets.coreElementAssetPath(file)),\n      );\n      const courseElementUrlPrefix =\n        locals.urlPrefix +\n        (!idsEqual(question.course_id, variant.course_id)\n          ? `/sharedElements/course/${course.id}`\n          : '');\n      dependencies.courseElementStyles.forEach((file) =>\n        styleUrls.push(\n          assets.courseElementAssetPath(course.commit_hash, courseElementUrlPrefix, file),\n        ),\n      );\n      dependencies.courseElementScripts.forEach((file) =>\n        scriptUrls.push(\n          assets.courseElementAssetPath(course.commit_hash, courseElementUrlPrefix, file),\n        ),\n      );\n      dependencies.extensionStyles.forEach((file) =>\n        styleUrls.push(\n          assets.courseElementExtensionAssetPath(course.commit_hash, locals.urlPrefix, file),\n        ),\n      );\n      dependencies.extensionScripts.forEach((file) =>\n        scriptUrls.push(\n          assets.courseElementExtensionAssetPath(course.commit_hash, locals.urlPrefix, file),\n        ),\n      );\n\n      const importMap = {\n        imports: {\n          ..._.mapValues(dynamicDependencies.nodeModulesScripts, (file) =>\n            assets.nodeModulesAssetPath(file),\n          ),\n          ..._.mapValues(\n            dynamicDependencies.clientFilesCourseScripts,\n            (file) => `${locals.urlPrefix}/clientFilesCourse/${file}`,\n          ),\n          ..._.mapValues(dynamicDependencies.coreElementScripts, (file) =>\n            assets.coreElementAssetPath(file),\n          ),\n          ..._.mapValues(dynamicDependencies.courseElementScripts, (file) =>\n            assets.courseElementAssetPath(course.commit_hash, courseElementUrlPrefix, file),\n          ),\n          ..._.mapValues(dynamicDependencies.extensionScripts, (file) =>\n            assets.courseElementExtensionAssetPath(course.commit_hash, locals.urlPrefix, file),\n          ),\n        },\n      };\n\n      // Check if any of the keys was found in more than one dependency type\n      Object.keys(importMap.imports).forEach((key) => {\n        const types = Object.entries(dynamicDependencies)\n          .filter(([, value]) => Object.prototype.hasOwnProperty.call(value, key))\n          .map(([type]) => type);\n        if (types.length > 1) {\n          courseIssues.push(\n            new CourseIssueError(\n              `Dynamic dependency key ${key} assigned to multiple types of dependencies`,\n              { data: { types }, fatal: true },\n            ),\n          );\n        }\n      });\n\n      const headerHtmls = [\n        ...styleUrls.map((url) => `<link href=\"${url}\" rel=\"stylesheet\" />`),\n        // The import map must come before any scripts that use imports\n        !_.isEmpty(importMap.imports)\n          ? `<script type=\"importmap\">${JSON.stringify(importMap)}</script>`\n          : '',\n        // It's important that any library-style scripts come first\n        ...coreScriptUrls.map((url) => `<script type=\"text/javascript\" src=\"${url}\"></script>`),\n        ...scriptUrls.map((url) => `<script type=\"text/javascript\" src=\"${url}\"></script>`),\n      ];\n      htmls.extraHeadersHtml = headerHtmls.join('\\n');\n\n      return { courseIssues, data: htmls };\n    });\n  });\n}\n\n/**\n * @param {string} filename\n * @param {import('../lib/db-types.js').Variant} variant\n * @param {import('../lib/db-types.js').Question} question\n * @param {import('../lib/db-types.js').Course} course\n * @returns {import('./types.js').QuestionServerReturnValue<Buffer>}\n */\nexport async function file(filename, variant, question, course) {\n  return instrumented('freeform.file', async (span) => {\n    debug('file()');\n    if (variant.broken_at) throw new Error('attempted to get a file for a broken variant');\n\n    const context = await getContext(question, course);\n\n    /** @satisfies {import('./types.js').ExecutionData} */\n    const data = {\n      // These should never be null, but that can't be encoded in the schema.\n      params: variant.params ?? {},\n      correct_answers: variant.true_answer ?? {},\n      variant_seed: parseInt(variant.variant_seed, 36),\n      options: { ...(variant.options ?? {}), ...getContextOptions(context) },\n      filename,\n    };\n\n    const { data: cachedData, cacheHit } = await getCachedDataOrCompute(\n      course,\n      data,\n      context,\n      async () => {\n        // function to compute the file data and return the cachedData\n        return withCodeCaller(course, async (codeCaller) => {\n          const { courseIssues, fileData } = await processQuestion(\n            'file',\n            codeCaller,\n            data,\n            context,\n          );\n          const fileDataBase64 = (fileData || '').toString('base64');\n          return { courseIssues, fileDataBase64 };\n        });\n      },\n    );\n\n    span.setAttribute('cache.status', cacheHit ? 'hit' : 'miss');\n\n    const { courseIssues, fileDataBase64 } = cachedData;\n    const fileData = Buffer.from(fileDataBase64, 'base64');\n    return { courseIssues, data: fileData };\n  });\n}\n\n/**\n * @param {import('../lib/db-types.js').Submission} submission\n * @param {import('../lib/db-types.js').Variant} variant\n * @param {import('../lib/db-types.js').Question} question\n * @param {import('../lib/db-types.js').Course} course\n * @returns {import('./types.js').QuestionServerReturnValue<import('./types.js').ParseResultData>}\n */\nexport async function parse(submission, variant, question, course) {\n  return instrumented('freeform.parse', async () => {\n    debug('parse()');\n    if (variant.broken_at) throw new Error('attempted to parse broken variant');\n\n    const context = await getContext(question, course);\n\n    /** @satisfies {import('./types.js').ExecutionData} */\n    const data = {\n      // These should never be null, but that can't be encoded in the schema.\n      params: variant.params ?? {},\n      correct_answers: variant.true_answer ?? {},\n      submitted_answers: submission.submitted_answer ?? {},\n      feedback: submission.feedback ?? {},\n      format_errors: submission.format_errors ?? {},\n      variant_seed: parseInt(variant.variant_seed, 36),\n      options: { ...(variant.options ?? {}), ...getContextOptions(context) },\n      raw_submitted_answers: submission.raw_submitted_answer ?? {},\n      gradable: submission.gradable ?? true,\n    };\n\n    return withCodeCaller(course, async (codeCaller) => {\n      const { courseIssues, data: resultData } = await processQuestion(\n        'parse',\n        codeCaller,\n        data,\n        context,\n      );\n\n      if (Object.keys(resultData.format_errors).length > 0) resultData.gradable = false;\n      return {\n        courseIssues,\n        data: {\n          params: resultData.params,\n          true_answer: resultData.correct_answers,\n          submitted_answer: resultData.submitted_answers,\n          feedback: resultData.feedback,\n          raw_submitted_answer: resultData.raw_submitted_answers,\n          format_errors: resultData.format_errors,\n          gradable: resultData.gradable,\n        },\n      };\n    });\n  });\n}\n\n/**\n * @param {import('../lib/db-types.js').Submission} submission\n * @param {import('../lib/db-types.js').Variant} variant\n * @param {import('../lib/db-types.js').Question} question\n * @param {import('../lib/db-types.js').Course} question_course\n * @returns {import('./types.js').QuestionServerReturnValue<import('./types.js').GradeResultData>}\n */\nexport async function grade(submission, variant, question, question_course) {\n  return instrumented('freeform.grade', async () => {\n    debug('grade()');\n    if (variant.broken_at) throw new Error('attempted to grade broken variant');\n    if (submission.broken) throw new Error('attempted to grade broken submission');\n\n    const context = await getContext(question, question_course);\n\n    /** @satisfies {import('./types.js').ExecutionData} */\n    let data = {\n      // Note that `params` and `true_answer` can change during `parse()`, so we\n      // use the submission's values when grading.\n      //\n      // These should never be null, but that can't be encoded in the schema.\n      params: submission.params ?? {},\n      correct_answers: submission.true_answer ?? {},\n      submitted_answers: submission.submitted_answer ?? {},\n      format_errors: submission.format_errors ?? {},\n      partial_scores: submission.partial_scores == null ? {} : submission.partial_scores,\n      score: submission.score == null ? 0 : submission.score,\n      feedback: submission.feedback == null ? {} : submission.feedback,\n      variant_seed: parseInt(variant.variant_seed, 36),\n      options: { ...(variant.options ?? {}), ...getContextOptions(context) },\n      raw_submitted_answers: submission.raw_submitted_answer ?? {},\n      gradable: submission.gradable ?? true,\n    };\n\n    return withCodeCaller(question_course, async (codeCaller) => {\n      const { courseIssues, data: resultData } = await processQuestion(\n        'grade',\n        codeCaller,\n        data,\n        context,\n      );\n\n      if (Object.keys(resultData.format_errors).length > 0) resultData.gradable = false;\n      return {\n        courseIssues,\n        data: {\n          params: resultData.params,\n          true_answer: resultData.correct_answers,\n          submitted_answer: resultData.submitted_answers,\n          format_errors: resultData.format_errors,\n          raw_submitted_answer: resultData.raw_submitted_answers,\n          partial_scores: resultData.partial_scores,\n          score: resultData.score,\n          feedback: resultData.feedback,\n          gradable: resultData.gradable,\n        },\n      };\n    });\n  });\n}\n\n/**\n * @param {import('../lib/db-types.js').Variant} variant\n * @param {import('../lib/db-types.js').Question} question\n * @param {import('../lib/db-types.js').Course} course\n * @param {'correct' | 'incorrect' | 'invalid'} test_type\n * @returns {import('./types.js').QuestionServerReturnValue<import('./types.js').TestResultData>}\n */\nexport async function test(variant, question, course, test_type) {\n  return instrumented('freeform.test', async () => {\n    debug('test()');\n    if (variant.broken_at) throw new Error('attempted to test broken variant');\n\n    const context = await getContext(question, course);\n\n    /** @satisfies {import('./types.js').ExecutionData & { test_type: 'correct' | 'incorrect' | 'invalid' }} */\n    let data = {\n      // These should never be null, but that can't be encoded in the schema.\n      params: variant.params ?? {},\n      correct_answers: variant.true_answer ?? {},\n      format_errors: {},\n      partial_scores: {},\n      score: 0,\n      feedback: {},\n      variant_seed: parseInt(variant.variant_seed, 36),\n      options: { ...(variant.options ?? {}), ...getContextOptions(context) },\n      raw_submitted_answers: {},\n      gradable: /** @type {boolean} */ (true),\n      test_type,\n    };\n\n    return withCodeCaller(course, async (codeCaller) => {\n      const { courseIssues, data: resultData } = await processQuestion(\n        'test',\n        codeCaller,\n        data,\n        context,\n      );\n      if (Object.keys(resultData.format_errors).length > 0) resultData.gradable = false;\n      return {\n        courseIssues,\n        data: {\n          params: resultData.params,\n          true_answer: resultData.correct_answers,\n          format_errors: resultData.format_errors,\n          raw_submitted_answer: resultData.raw_submitted_answers,\n          partial_scores: resultData.partial_scores,\n          score: resultData.score,\n          gradable: resultData.gradable,\n        },\n      };\n    });\n  });\n}\n\n/**\n * @param {Object} question\n * @param {Object} course\n * @returns {Promise<QuestionProcessingContext>}\n */\nasync function getContext(question, course) {\n  const coursePath = chunks.getRuntimeDirectoryForCourse(course);\n  await chunks.ensureChunksForCourseAsync(course.id, [\n    { type: 'question', questionId: question.id },\n    { type: 'clientFilesCourse' },\n    { type: 'serverFilesCourse' },\n    { type: 'elements' },\n    { type: 'elementExtensions' },\n  ]);\n\n  // Select which rendering strategy we'll use. This is computed here so that\n  // in can factor into the cache key.\n  const useNewQuestionRenderer = course?.options?.useNewQuestionRenderer ?? false;\n  const useExperimentalRenderer = !(await features.enabled('process-questions-in-server', {\n    institution_id: course.institution_id,\n    course_id: course.id,\n  }));\n\n  const renderer = useExperimentalRenderer\n    ? 'experimental'\n    : useNewQuestionRenderer\n      ? 'default'\n      : 'legacy';\n\n  // The `*Host` values here refer to the paths relative to PrairieLearn;\n  // the other values refer to the paths as they will be seen by the worker\n  // that actually executes the question.\n  const courseDirectory = config.workersExecutionMode === 'native' ? coursePath : '/course';\n  const courseDirectoryHost = coursePath;\n  const questionDirectory = path.join(courseDirectory, 'questions', question.directory);\n  const questionDirectoryHost = path.join(coursePath, 'questions', question.directory);\n\n  // Load elements and any extensions\n  const elements = await loadElementsForCourse(course);\n  const extensions = await loadExtensionsForCourse({\n    course,\n    course_dir: courseDirectory,\n    course_dir_host: courseDirectoryHost,\n  });\n\n  return {\n    question,\n    course,\n    course_dir: courseDirectory,\n    course_dir_host: courseDirectoryHost,\n    question_dir: questionDirectory,\n    question_dir_host: questionDirectoryHost,\n    course_elements: elements,\n    course_element_extensions: extensions,\n    renderer,\n  };\n}\n\nasync function getCacheKey(course, data, context) {\n  try {\n    const commitHash = await getOrUpdateCourseCommitHash(course);\n    const dataHash = objectHash({ data, context }, { algorithm: 'sha1', encoding: 'base64' });\n    return `question:${commitHash}-${dataHash}`;\n  } catch {\n    return null;\n  }\n}\n\nasync function getCachedDataOrCompute(course, data, context, computeFcn) {\n  // This function will compute the cachedData and cache it if\n  // cacheKey is not null\n  const doCompute = async (cacheKey) => {\n    const computedData = await computeFcn();\n\n    // Course issues during question/file rendering aren't actually\n    // treated as errors - that is, the above function won't throw\n    // an error, even if there are course issues. However, we\n    // still want to avoid caching anything that produced a course\n    // issue, as that might be a transient error that would go away\n    // if the user refreshed, even if they didn't create a new variant.\n    // Also, the `Error` objects that we use for course issues can't be\n    // easily round-tripped through a cache, which means that pulling\n    // an error out of the cache means the instructor would see an\n    // error message of `[object Object]` which is useless.\n    //\n    // tl;dr: don't cache any results that would create course issues.\n    const hasCourseIssues = computedData?.courseIssues?.length > 0;\n    if (cacheKey && !hasCourseIssues) {\n      cache.set(cacheKey, computedData, config.questionRenderCacheTtlSec * 1000);\n    }\n\n    return {\n      data: computedData,\n      cacheHit: false,\n    };\n  };\n\n  // This function will check the cache for the specified\n  // cacheKey and either return the cachedData for a cache hit,\n  // or compute the cachedData for a cache miss\n  const getFromCacheOrCompute = async (cacheKey) => {\n    let cachedData;\n\n    try {\n      cachedData = await cache.get(cacheKey);\n    } catch (err) {\n      // We don't actually want to fail if the cache has an error; we'll\n      // just compute the cachedData as normal\n      logger.error('Error in cache.get()', err);\n    }\n\n    // Previously, there was a bug where we would cache operations\n    // that failed with a course issue. We've since fixed that bug,\n    // but so that we can gracefully deploy the fix alongside code\n    // that may still be incorrectly caching errors, we'll ignore\n    // any result from the cache that has course issues and\n    // unconditionally recompute it.\n    //\n    // TODO: once this has been deployed in production for a while,\n    // we can safely remove this check, as we can guarantee that the\n    // cache will no longer contain any entries with `courseIssues`.\n    const hasCachedCourseIssues = cachedData?.courseIssues?.length > 0;\n    if (cachedData && !hasCachedCourseIssues) {\n      return {\n        data: cachedData,\n        cacheHit: true,\n      };\n    } else {\n      return doCompute(cacheKey);\n    }\n  };\n\n  if (config.devMode) {\n    // In dev mode, we should skip caching so that we'll immediately\n    // pick up new changes from disk\n    return doCompute(null);\n  } else {\n    const cacheKey = await getCacheKey(course, data, context);\n    // If for some reason we failed to get a cache key, don't\n    // actually fail the request, just skip the cache entirely\n    // and compute as usual\n    if (!cacheKey) {\n      return doCompute(null);\n    } else {\n      return getFromCacheOrCompute(cacheKey);\n    }\n  }\n}\n"]}