{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/question-servers/types.ts"],"names":[],"mappings":"AAAA,OAAO,EAA6D,MAAM,oBAAoB,CAAC","sourcesContent":["import { type Course, type Question, type Submission, type Variant } from '../lib/db-types.js';\nimport type { ElementExtensionJson } from '../schemas/index.js';\n\nexport type QuestionType = Question['type'];\nexport type EffectiveQuestionType = 'Calculation' | 'Freeform';\n\nexport interface RenderSelection {\n  question?: boolean;\n  submissions?: boolean;\n  answer?: boolean;\n}\n\nexport type QuestionServerReturnValue<T> = Promise<{\n  courseIssues: (Error & { fatal?: boolean; data?: any })[];\n  data: T;\n}>;\n\nexport interface GenerateResultData {\n  params: Record<string, unknown>;\n  true_answer: Record<string, unknown>;\n  options?: Record<string, unknown>;\n}\n\nexport type PrepareResultData = GenerateResultData;\n\nexport interface RenderResultData {\n  extraHeadersHtml: string;\n  questionHtml: string;\n  submissionHtmls: string[];\n  answerHtml: string;\n}\n\nexport interface ParseResultData {\n  params: Record<string, unknown>;\n  true_answer: Record<string, unknown>;\n  submitted_answer: Record<string, unknown>;\n  feedback: Record<string, unknown>;\n  raw_submitted_answer: Record<string, unknown>;\n  format_errors: Record<string, unknown>;\n  gradable: boolean;\n}\n\nexport interface GradeResultData {\n  params: Record<string, unknown>;\n  true_answer: Record<string, unknown>;\n  submitted_answer: Record<string, unknown>;\n  format_errors: Record<string, unknown>;\n  raw_submitted_answer: Record<string, unknown>;\n  partial_scores: Record<string, unknown>;\n  score: number;\n  feedback: Record<string, unknown>;\n  gradable: boolean;\n  v2_score?: number;\n}\n\nexport interface TestResultData {\n  params: Record<string, any>;\n  true_answer: Record<string, unknown>;\n  format_errors: Record<string, unknown>;\n  raw_submitted_answer: Record<string, unknown>;\n  partial_scores: Record<string, unknown>;\n  score: number;\n  gradable: boolean;\n}\n\nexport interface QuestionServer {\n  generate: (\n    question: Question,\n    course: Course,\n    variant_seed: string,\n  ) => QuestionServerReturnValue<Partial<GenerateResultData>>;\n  prepare: (\n    question: Question,\n    course: Course,\n    variant: Pick<Variant, 'variant_seed' | 'params' | 'true_answer' | 'options' | 'broken'>,\n  ) => QuestionServerReturnValue<PrepareResultData>;\n  render: (\n    renderSelection: RenderSelection,\n    variant: Variant,\n    question: Question,\n    submission: Submission | null,\n    submissions: Submission[],\n    course: Course,\n    locals: Record<string, any>,\n  ) => QuestionServerReturnValue<RenderResultData>;\n  parse: (\n    submission: Pick<\n      Partial<Submission>,\n      'submitted_answer' | 'feedback' | 'format_errors' | 'raw_submitted_answer' | 'gradable'\n    >,\n    variant: Variant,\n    question: Question,\n    course: Course,\n  ) => QuestionServerReturnValue<ParseResultData>;\n  grade: (\n    submission: Submission,\n    variant: Variant,\n    question: Question,\n    course: Course,\n  ) => QuestionServerReturnValue<Partial<GradeResultData>>;\n  file?: (\n    filename: string,\n    variant: Variant,\n    question: Question,\n    course: Course,\n  ) => QuestionServerReturnValue<Buffer>;\n  test?: (\n    variant: Variant,\n    question: Question,\n    course: Course,\n    test_type: 'correct' | 'incorrect' | 'invalid',\n  ) => QuestionServerReturnValue<TestResultData>;\n}\n\nexport type ElementExtensionJsonExtension = ElementExtensionJson & {\n  name: string;\n  directory: string;\n};\n\n// This data object changes over the lifetime of the question grading process.\n// That is why many fields are optional, as they are only present in later phases.\nexport interface ExecutionData {\n  params: Record<string, any>;\n  correct_answers: Record<string, unknown>;\n  variant_seed: number;\n  options: Record<string, unknown> & {\n    question_path: string;\n    client_files_question_path: string;\n    client_files_course_path: string;\n    server_files_course_path: string;\n    course_extensions_path: string;\n  };\n  answers_names?: Record<string, string>;\n  submitted_answers?: Record<string, unknown>;\n  format_errors?: Record<string, unknown>;\n  partial_scores?: Record<string, unknown>;\n  score?: number;\n  feedback?: Record<string, unknown>;\n  raw_submitted_answers?: Record<string, unknown>;\n  editable?: boolean;\n  manual_grading?: boolean;\n  panel?: 'question' | 'answer' | 'submission';\n  num_valid_submissions?: number;\n  filename?: string;\n  gradable?: boolean;\n  extensions?: Record<string, ElementExtensionJsonExtension>;\n}\n"]}