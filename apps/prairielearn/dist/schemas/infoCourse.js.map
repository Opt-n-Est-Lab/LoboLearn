{"version":3,"file":"infoCourse.js","sourceRoot":"","sources":["../../src/schemas/infoCourse.ts"],"names":[],"mappings":"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","sourcesContent":["import { z } from 'zod';\n\nimport { CommentJsonSchema } from './comment.js';\n\nexport const ColorJsonSchema = z\n  .enum([\n    'red1',\n    'red2',\n    'red3',\n    'pink1',\n    'pink2',\n    'pink3',\n    'purple1',\n    'purple2',\n    'purple3',\n    'blue1',\n    'blue2',\n    'blue3',\n    'turquoise1',\n    'turquoise2',\n    'turquoise3',\n    'green1',\n    'green2',\n    'green3',\n    'yellow1',\n    'yellow2',\n    'yellow3',\n    'orange1',\n    'orange2',\n    'orange3',\n    'brown1',\n    'brown2',\n    'brown3',\n    'gray1',\n    'gray2',\n    'gray3',\n  ])\n  .describe('A color name.');\n\nexport type ColorJson = z.infer<typeof ColorJsonSchema>;\nexport const TopicJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    name: z.string().describe('Long descriptive name (preferably less than 10 words).'),\n    color: ColorJsonSchema,\n    description: z.string().describe('Description of the topic.').optional(),\n  })\n  .describe(\"A single topic, can represent a unit of learning (e.g. 'vectors').\");\n\nexport type TopicJson = z.infer<typeof TopicJsonSchema>;\nexport type TopicJsonInput = z.input<typeof TopicJsonSchema>;\n\nexport const TagJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    shortName: z.string().describe('Short name (preferably 2 to 7 characters).').optional(),\n    name: z.string().describe('Long descriptive name (preferably less than 10 words).'),\n    color: ColorJsonSchema,\n    description: z.string().describe('Description of the tag.').optional(),\n  })\n  .describe('A single tag description.');\n\nexport type TagJson = z.infer<typeof TagJsonSchema>;\nexport type TagJsonInput = z.input<typeof TagJsonSchema>;\n\nexport const AssessmentSetJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    abbreviation: z\n      .string()\n      .describe(\"Abbreviation (preferably 1 to 3 characters), e.g., 'HW', 'Q', 'PQ', etc.\"),\n    name: z\n      .string()\n      .describe(\n        \"Full singular name (preferably 1 to 3 words), e.g., 'Homework', 'Quiz', 'Practice Quiz'.\",\n      ),\n    heading: z\n      .string()\n      .describe(\n        \"Plural heading for a group of assessments (preferably 1 to 3 words), e.g., 'Homeworks', 'Quizzes'.\",\n      ),\n    color: ColorJsonSchema,\n  })\n  .describe('A single assessment set description.');\n\nexport type AssessmentSetJson = z.infer<typeof AssessmentSetJsonSchema>;\nexport type AssessmentSetJsonInput = z.input<typeof AssessmentSetJsonSchema>;\n\nexport const CourseOptionsJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    useNewQuestionRenderer: z\n      .boolean()\n      .describe('Feature flag to enable the new question renderer.')\n      .optional()\n      .default(false),\n    devModeFeatures: z\n      .union([\n        z\n          .array(z.string().describe('A single feature flag.'))\n          .describe('Legacy format; use an object instead.'),\n        z.record(z.string(), z.boolean()),\n      ])\n      .describe('Feature flags to enable/disable in development mode.')\n      .optional(),\n  })\n  .strict()\n  .describe('Options for this course.');\n\nexport type CourseOptionsJson = z.infer<typeof CourseOptionsJsonSchema>;\n\nexport const CourseJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    uuid: z\n      .string()\n      .regex(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/)\n      .describe('Unique identifier (UUID v4).'),\n    name: z.string().describe(\"The course name (e.g., 'TAM 212').\"),\n    title: z.string().describe(\"The course title (e.g., 'Introductory Dynamics').\"),\n    timezone: z\n      .string()\n      .describe(\n        'The timezone for all date input and display (e.g., \"America/Chicago\"). Must be an official timezone identifier, as listed at <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>. A canonical identifier is preferred.',\n      )\n      .optional(),\n    options: CourseOptionsJsonSchema.optional(),\n    assessmentSets: z.array(AssessmentSetJsonSchema).describe('Assessment sets.').optional(),\n    assessmentModules: z\n      .array(\n        z\n          .object({\n            name: z\n              .string()\n              .describe(\"Short name for a module (preferably 1 to 3 words), e.g., 'Introduction'.\"),\n            heading: z.string().describe('Full name of the module (visible to students)'),\n          })\n          .describe('A single course module description.'),\n      )\n      .describe('Course modules.')\n      .optional(),\n    topics: z.array(TopicJsonSchema).describe('Question topics (visible to students).'),\n    tags: z.array(TagJsonSchema).describe('Question tags (not visible to students).').optional(),\n    sharingSets: z\n      .array(\n        z\n          .object({\n            name: z.string().describe('Name of the sharing set.'),\n            description: z.string().describe('Description of the sharing set.').optional(),\n          })\n          .describe('A sharing set description.'),\n      )\n      .describe('Sharing sets')\n      .optional(),\n  })\n  .strict()\n  .describe('The specification file for a course.');\n\nexport type CourseJson = z.infer<typeof CourseJsonSchema>;\nexport type CourseJsonInput = z.input<typeof CourseJsonSchema>;\n"]}