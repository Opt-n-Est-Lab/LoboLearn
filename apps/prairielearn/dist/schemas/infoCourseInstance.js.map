{"version":3,"file":"infoCourseInstance.js","sourceRoot":"","sources":["../../src/schemas/infoCourseInstance.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAEjD,MAAM,oBAAoB,GAAG,CAAC;KAC3B,MAAM,CAAC;IACN,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE;IACrC,IAAI,EAAE,CAAC;SACJ,IAAI,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;SAClD,QAAQ,CAAC,2BAA2B,CAAC;SACrC,QAAQ,EAAE;IACb,IAAI,EAAE,CAAC;SACJ,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SACjB,QAAQ,CACP,oFAAoF,CACrF;SACA,QAAQ,EAAE;IACb,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,iDAAiD,CAAC,CAAC,QAAQ,EAAE;IAC5F,OAAO,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,+CAA+C,CAAC,CAAC,QAAQ,EAAE;IACxF,WAAW,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,iDAAiD,CAAC,CAAC,QAAQ,EAAE;CAC/F,CAAC;KACD,MAAM,EAAE;KACR,QAAQ,CACP,yJAAyJ,CAC1J,CAAC;AAEJ,MAAM,uBAAuB,GAAG,CAAC;KAC9B,KAAK,CAAC,oBAAoB,CAAC;KAC3B,QAAQ,CACP,oGAAoG,CACrG,CAAC;AAEJ,MAAM,CAAC,MAAM,wBAAwB,GAAG,CAAC;KACtC,MAAM,CAAC;IACN,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE;IACrC,IAAI,EAAE,CAAC;SACJ,MAAM,EAAE;SACR,KAAK,CAAC,+EAA+E,CAAC;SACtF,QAAQ,CAAC,8BAA8B,CAAC;IAC3C,QAAQ,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,8DAA8D,CAAC;IAC7F,SAAS,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,QAAQ,EAAE;IACtE,QAAQ,EAAE,CAAC;SACR,MAAM,EAAE;SACR,QAAQ,CACP,8RAA8R,CAC/R;SACA,QAAQ,EAAE;IACb,mBAAmB,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;IAC/F,gBAAgB,EAAE,CAAC;SAChB,OAAO,EAAE;SACT,QAAQ,CACP,uIAAuI,CACxI;SACA,QAAQ,EAAE;SACV,OAAO,CAAC,KAAK,CAAC;IACjB,SAAS,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC,QAAQ,EAAE;IAC1F,WAAW,EAAE,uBAAuB,CAAC,QAAQ,EAAE;IAC/C,kBAAkB,EAAE,CAAC;SAClB,IAAI,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;SACvB,QAAQ,CACP,yGAAyG,CAC1G;SACA,QAAQ,EAAE;SACV,OAAO,CAAC,KAAK,CAAC;CAClB,CAAC;KACD,MAAM,EAAE;KACR,QAAQ,CAAC,+CAA+C,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nimport { CommentJsonSchema } from './comment.js';\n\nconst AccessRuleJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    role: z\n      .enum(['Student', 'TA', 'Instructor', 'Superuser'])\n      .describe('DEPRECATED -- do not use.')\n      .optional(),\n    uids: z\n      .array(z.string())\n      .describe(\n        \"A list of UIDs (like 'username@example.com'), one of which is required for access.\",\n      )\n      .optional(),\n    startDate: z.string().describe('The earliest date on which access is permitted.').optional(),\n    endDate: z.string().describe('The latest date on which access is permitted.').optional(),\n    institution: z.string().describe('The institution from which access is permitted.').optional(),\n  })\n  .strict()\n  .describe(\n    'An access rule that permits people to access this course instance. All restrictions present in the rule must be satisfied for the rule to allow access.',\n  );\n\nconst AccessControlJsonSchema = z\n  .array(AccessRuleJsonSchema)\n  .describe(\n    'List of access rules for the course instance. Access is permitted if any access rule is satisfied.',\n  );\n\nexport const CourseInstanceJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    uuid: z\n      .string()\n      .regex(/^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/)\n      .describe('Unique identifier (UUID v4).'),\n    longName: z.string().describe(\"The long name of this course instance (e.g., 'Spring 2015').\"),\n    shortName: z.string().describe('DEPRECATED -- do not use.').optional(),\n    timezone: z\n      .string()\n      .describe(\n        'The timezone for all date input and display (e.g., \"America/Chicago\"). Must be an official timezone identifier, as listed at <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>. A canonical identifier is preferred. If not specified, the timezone of the course will be used.',\n      )\n      .optional(),\n    allowIssueReporting: z.boolean().describe('DEPRECATED -- do not use.').optional().default(true),\n    hideInEnrollPage: z\n      .boolean()\n      .describe(\n        'If set to true, hides the course instance in the enrollment page, so that only direct links to the course can be used for enrollment.',\n      )\n      .optional()\n      .default(false),\n    userRoles: z.object({}).catchall(z.any()).describe('DEPRECATED -- do not use.').optional(),\n    allowAccess: AccessControlJsonSchema.optional(),\n    groupAssessmentsBy: z\n      .enum(['Set', 'Module'])\n      .describe(\n        'Determines which assessment category will be used to group assessments on the student assessments page.',\n      )\n      .optional()\n      .default('Set'),\n  })\n  .strict()\n  .describe('The specification file for a course instance.');\n\nexport type CourseInstanceJson = z.infer<typeof CourseInstanceJsonSchema>;\nexport type CourseInstanceJsonInput = z.input<typeof CourseInstanceJsonSchema>;\n"]}