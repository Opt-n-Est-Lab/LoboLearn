{"version":3,"file":"infoElementExtension.js","sourceRoot":"","sources":["../../src/schemas/infoElementExtension.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAEjD,MAAM,oBAAoB,GAAG,CAAC;KAC3B,MAAM,CAAC;IACN,UAAU,EAAE,CAAC;SACV,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,6CAA6C,CAAC,CAAC;SACzE,QAAQ,CACP,0FAA0F,CAC3F;SACA,QAAQ,EAAE;IACb,WAAW,EAAE,CAAC;SACX,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,4CAA4C,CAAC,CAAC;SACxE,QAAQ,CACP,2FAA2F,CAC5F;SACA,QAAQ,EAAE;IACb,iBAAiB,EAAE,CAAC;SACjB,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,uCAAuC,CAAC,CAAC;SACnE,QAAQ,CAAC,2DAA2D,CAAC;SACrE,QAAQ,EAAE;IACb,kBAAkB,EAAE,CAAC;SAClB,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,sCAAsC,CAAC,CAAC;SAClE,QAAQ,CAAC,4DAA4D,CAAC;SACtE,QAAQ,EAAE;IACb,uBAAuB,EAAE,CAAC;SACvB,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,2CAA2C,CAAC,CAAC;SACvE,QAAQ,CAAC,+DAA+D,CAAC;SACzE,QAAQ,EAAE;IACb,wBAAwB,EAAE,CAAC;SACxB,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,0CAA0C,CAAC,CAAC;SACtE,QAAQ,CAAC,gEAAgE,CAAC;SAC1E,QAAQ,EAAE;IACb,eAAe,EAAE,CAAC;SACf,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,mDAAmD,CAAC,CAAC;SAC/E,QAAQ,CAAC,uEAAuE,CAAC;SACjF,QAAQ,EAAE;IACb,gBAAgB,EAAE,CAAC;SAChB,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,kDAAkD,CAAC,CAAC;SAC9E,QAAQ,CAAC,wEAAwE,CAAC;SAClF,QAAQ,EAAE;CACd,CAAC;KACD,MAAM,EAAE;KACR,QAAQ,CAAC,2CAA2C,CAAC,CAAC;AAEzD,MAAM,CAAC,MAAM,0BAA0B,GAAG,CAAC;KACxC,MAAM,CAAC;IACN,UAAU,EAAE,CAAC;SACV,MAAM,EAAE;SACR,QAAQ,CAAC,qDAAqD,CAAC;SAC/D,QAAQ,EAAE;IACb,YAAY,EAAE,oBAAoB,CAAC,QAAQ,EAAE;IAC7C,mBAAmB,EAAE,CAAC;SACnB,MAAM,CAAC;QACN,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE;QACrC,kBAAkB,EAAE,CAAC;aAClB,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;aAClB,QAAQ,CAAC,0EAA0E,CAAC;aACpF,QAAQ,EAAE;QACb,wBAAwB,EAAE,CAAC;aACxB,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;aAClB,QAAQ,CAAC,6EAA6E,CAAC;aACvF,QAAQ,EAAE;QACb,gBAAgB,EAAE,CAAC;aAChB,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;aAClB,QAAQ,CAAC,wEAAwE,CAAC;aAClF,QAAQ,EAAE;KACd,CAAC;SACD,MAAM,EAAE;SACR,QAAQ,CAAC,iDAAiD,CAAC;SAC3D,QAAQ,EAAE;CACd,CAAC;KACD,MAAM,EAAE;KACR,QAAQ,CAAC,uCAAuC,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nimport { CommentJsonSchema } from './comment.js';\n\nconst DependencyJsonSchema = z\n  .object({\n    coreStyles: z\n      .array(z.string().describe('A .css file located in /public/stylesheets.'))\n      .describe(\n        '[DEPRECATED, DO NOT USE] The styles required by this extension from /public/stylesheets.',\n      )\n      .optional(),\n    coreScripts: z\n      .array(z.string().describe('A .js file located in /public/javascripts.'))\n      .describe(\n        '[DEPRECATED, DO NOT USE] The scripts required by this extension from /public/javascripts.',\n      )\n      .optional(),\n    nodeModulesStyles: z\n      .array(z.string().describe('A .css file located in /node_modules.'))\n      .describe('The styles required by this extension from /node_modules.')\n      .optional(),\n    nodeModulesScripts: z\n      .array(z.string().describe('A .js file located in /node_modules.'))\n      .describe('The scripts required by this extension from /node_modules.')\n      .optional(),\n    clientFilesCourseStyles: z\n      .array(z.string().describe('A .css file located in clientFilesCourse.'))\n      .describe('The styles required by this extension from clientFilesCourse.')\n      .optional(),\n    clientFilesCourseScripts: z\n      .array(z.string().describe('A .js file located in clientFilesCourse.'))\n      .describe('The scripts required by this extension from clientFilesCourse.')\n      .optional(),\n    extensionStyles: z\n      .array(z.string().describe(\"A .css file located in the extension's directory.\"))\n      .describe(\"The styles required by this extension from the extension's directory.\")\n      .optional(),\n    extensionScripts: z\n      .array(z.string().describe(\"A .js file located in the extension's directory.\"))\n      .describe(\"The scripts required by this extension from the extension's directory.\")\n      .optional(),\n  })\n  .strict()\n  .describe(\"The extension's client-side dependencies.\");\n\nexport const ElementExtensionJsonSchema = z\n  .object({\n    controller: z\n      .string()\n      .describe(\"The name of the extension's Python controller file.\")\n      .optional(),\n    dependencies: DependencyJsonSchema.optional(),\n    dynamicDependencies: z\n      .object({\n        comment: CommentJsonSchema.optional(),\n        nodeModulesScripts: z\n          .record(z.string())\n          .describe('The scripts required by this element from /node_modules as an importmap.')\n          .optional(),\n        clientFilesCourseScripts: z\n          .record(z.string())\n          .describe('The styles required by this element from clientFilesCourse as an importmap.')\n          .optional(),\n        extensionScripts: z\n          .record(z.string())\n          .describe(\"The scripts required by this extension from the extension's directory.\")\n          .optional(),\n      })\n      .strict()\n      .describe(\"The element's client-side dynamic dependencies.\")\n      .optional(),\n  })\n  .strict()\n  .describe('Info files for v3 element extensions.');\n\nexport type ElementExtensionJson = z.infer<typeof ElementExtensionJsonSchema>;\n"]}