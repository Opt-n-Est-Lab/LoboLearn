{"version":3,"file":"questionOptionsMultipleTrueFalse.js","sourceRoot":"","sources":["../../src/schemas/questionOptionsMultipleTrueFalse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAEjD,MAAM,CAAC,MAAM,0CAA0C,GAAG,CAAC;KACxD,MAAM,CAAC;IACN,OAAO,EAAE,iBAAiB,CAAC,QAAQ,EAAE;IACrC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,oDAAoD,CAAC,CAAC,QAAQ,EAAE;IAC1F,cAAc,EAAE,CAAC;SACd,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SACjB,QAAQ,CAAC,qEAAqE,CAAC;IAClF,eAAe,EAAE,CAAC;SACf,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;SACjB,QAAQ,CAAC,sEAAsE,CAAC;CACpF,CAAC;KACD,MAAM,EAAE;KACR,QAAQ,CAAC,2CAA2C,CAAC,CAAC","sourcesContent":["import { z } from 'zod';\n\nimport { CommentJsonSchema } from './comment.js';\n\nexport const QuestionMultipleTrueFalseOptionsJsonSchema = z\n  .object({\n    comment: CommentJsonSchema.optional(),\n    text: z.string().describe('Text to precede the set of statements being given.').optional(),\n    trueStatements: z\n      .array(z.string())\n      .describe('A list of true statements for the question. Each is an HTML string.'),\n    falseStatements: z\n      .array(z.string())\n      .describe('A list of false statements for the question. Each is an HTML string.'),\n  })\n  .strict()\n  .describe('Options for a MultipleTrueFalse question.');\n\nexport type QuestionMultipleTrueFalseOptionsJson = z.infer<\n  typeof QuestionMultipleTrueFalseOptionsJsonSchema\n>;\n"]}