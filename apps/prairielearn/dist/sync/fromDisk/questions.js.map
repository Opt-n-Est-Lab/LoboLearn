{"version":3,"file":"questions.js","sourceRoot":"","sources":["../../../src/sync/fromDisk/questions.ts"],"names":[],"mappings":"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","sourcesContent":["import * as shlex from 'shlex';\nimport { z } from 'zod';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { IdSchema } from '../../lib/db-types.js';\nimport { type QuestionJson } from '../../schemas/index.js';\nimport { type CourseData } from '../course-db.js';\nimport * as infofile from '../infofile.js';\nimport { isDraftQid } from '../question.js';\n\nfunction getParamsForQuestion(qid: string, q: QuestionJson | null | undefined) {\n  if (!q) return null;\n\n  let partialCredit;\n  if (q.partialCredit != null) {\n    partialCredit = q.partialCredit;\n  } else {\n    if (q.type === 'v3') {\n      partialCredit = true;\n    } else {\n      partialCredit = false;\n    }\n  }\n  let external_grading_entrypoint = q.externalGradingOptions?.entrypoint;\n  if (Array.isArray(external_grading_entrypoint)) {\n    external_grading_entrypoint = shlex.join(external_grading_entrypoint);\n  }\n  let workspace_args = q.workspaceOptions?.args;\n  if (Array.isArray(workspace_args)) {\n    workspace_args = shlex.join(workspace_args);\n  }\n  return {\n    type: q.type === 'v3' ? 'Freeform' : q.type,\n    title: q.title,\n    partial_credit: partialCredit,\n    template_directory: q.template,\n    options: q.options,\n    client_files: q.clientFiles || [],\n    draft: isDraftQid(qid),\n    topic: q.topic,\n    grading_method: q.gradingMethod || 'Internal',\n    single_variant: !!q.singleVariant,\n    show_correct_answer: q.showCorrectAnswer === undefined ? true : q.showCorrectAnswer,\n    external_grading_enabled: q.externalGradingOptions && q.externalGradingOptions.enabled,\n    external_grading_image: q.externalGradingOptions && q.externalGradingOptions.image,\n    external_grading_files: q.externalGradingOptions && q.externalGradingOptions.serverFilesCourse,\n    external_grading_entrypoint,\n    external_grading_timeout: q.externalGradingOptions && q.externalGradingOptions.timeout,\n    external_grading_enable_networking:\n      q.externalGradingOptions && q.externalGradingOptions.enableNetworking,\n    external_grading_environment: q.externalGradingOptions?.environment ?? {},\n    dependencies: q.dependencies || {},\n    workspace_image: q.workspaceOptions && q.workspaceOptions.image,\n    workspace_port: q.workspaceOptions && q.workspaceOptions.port,\n    workspace_args,\n    workspace_home: q.workspaceOptions && q.workspaceOptions.home,\n    workspace_graded_files: q.workspaceOptions && q.workspaceOptions.gradedFiles,\n    workspace_url_rewrite: q.workspaceOptions && q.workspaceOptions.rewriteUrl,\n    workspace_enable_networking: q.workspaceOptions && q.workspaceOptions.enableNetworking,\n    workspace_environment: q.workspaceOptions?.environment ?? {},\n    share_publicly: q.sharePublicly ?? false,\n    share_source_publicly: q.shareSourcePublicly ?? false,\n  };\n}\n\nexport async function sync(\n  courseId: string,\n  courseData: CourseData,\n): Promise<Record<string, string>> {\n  const questionParams = Object.entries(courseData.questions).map(([qid, question]) => {\n    return JSON.stringify([\n      qid,\n      question.uuid,\n      infofile.stringifyErrors(question),\n      infofile.stringifyWarnings(question),\n      getParamsForQuestion(qid, question.data),\n    ]);\n  });\n\n  const result = await sqldb.callRow(\n    'sync_questions',\n    [questionParams, courseId],\n    z.record(z.string(), IdSchema),\n  );\n\n  return result;\n}\n"]}