{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../src/tests/accessibility/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { A11yError, A11yResults } from '@sa11y/format';\nimport axe from 'axe-core';\nimport { HTMLRewriter } from 'html-rewriter-wasm';\nimport { HtmlValidate, formatterFactory } from 'html-validate';\nimport { JSDOM, VirtualConsole } from 'jsdom';\nimport { test } from 'mocha';\nimport fetch from 'node-fetch';\n\nimport expressListEndpoints, { type Endpoint } from '@prairielearn/express-list-endpoints';\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../../lib/config.js';\nimport { features } from '../../lib/features/index.js';\nimport { TEST_COURSE_PATH } from '../../lib/paths.js';\nimport * as news_items from '../../news_items/index.js';\nimport * as server from '../../server.js';\nimport * as helperServer from '../helperServer.js';\n\nimport Bootstrap4ConstructPlugin from './bootstrap4-construct-plugin.js';\n\nconst SITE_URL = 'http://localhost:' + config.serverPort;\n\n/**\n * Loads the given URL into a JSDOM object.\n */\nasync function loadPageJsdom(url: string): Promise<{ text: string; jsdom: JSDOM }> {\n  const text = await fetch(url).then((res) => {\n    if (!res.ok) {\n      throw new Error(`Error loading page: ${res.status}`);\n    }\n    return res.text();\n  });\n\n  const encoder = new TextEncoder();\n  const decoder = new TextDecoder();\n\n  let output = '';\n  const rewriter = new HTMLRewriter((chunk) => {\n    output += decoder.decode(chunk);\n  });\n\n  // We need to mimic what Bootstrap will do at runtime for tooltips and popovers:\n  // it will copy the `data-bs-title` attribute to the `aria-label` attribute if\n  // the element doesn't already have an `aria-label` attribute and if its text\n  // content is empty.\n  //\n  // Without this, we'll get a bunch of false positives that don't reflect\n  // the actual behavior at runtime.\n  rewriter.on('a, button', {\n    element(el) {\n      // This is slightly different than what we do at runtime. In practice, we'll\n      // only add an `aria-label` if the element is empty. But here, we can't\n      // inspect the element's children, so we'll only use the presence of an\n      // `aria-label` attribute to determine if we should add one.\n      if (el.hasAttribute('aria-label')) return;\n      const title = el.getAttribute('data-bs-title');\n      if (title) {\n        el.setAttribute('aria-label', title);\n      }\n    },\n  });\n\n  await rewriter.write(encoder.encode(text));\n  await rewriter.end();\n\n  // JSDOM can be very verbose regarding unimplemented features (e.g., canvas).\n  // We don't have a need to see these warnings, so we create a virtual console\n  // that does not log anything.\n  const virtualConsole = new VirtualConsole();\n  return { text: output, jsdom: new JSDOM(output, { virtualConsole }) };\n}\n\n/**\n * Checks the given URL for accessibility violations.\n */\nasync function checkPage(url: string) {\n  const { text, jsdom } = await loadPageJsdom(SITE_URL + url);\n\n  let messages = '';\n\n  // Since the accessibility checks are already programmatically loading\n  // pretty much every page in the application, we'll piggyback on them\n  // to also run HTML validation.\n  const validator = new HtmlValidate();\n  const validationResults = await validator.validateString(text, {\n    plugins: [Bootstrap4ConstructPlugin],\n    rules: {\n      'bootstrap4-construct': 'error',\n      'attribute-boolean-style': 'off',\n      'attribute-empty-style': 'off',\n      deprecated: ['error', { exclude: ['tt'] }],\n      'doctype-style': 'off',\n      // This rule is mostly relevant for SEO, which doesn't matter since our\n      // pages aren't ever crawled by search engines.\n      'long-title': 'off',\n      'no-inline-style': 'off',\n      'no-trailing-whitespace': 'off',\n      'script-type': 'off',\n      'unique-landmark': 'off',\n      'void-style': 'off',\n      'wcag/h63': 'off',\n    },\n  });\n\n  // Filter out some validation results that don't apply to us.\n  for (const result of validationResults.results) {\n    result.messages = result.messages.filter((m) => {\n      // This doesn't appear to be an actual issue and isn't flagged by\n      // other tools like https://validator.w3.org/nu.\n      if (m.message.match(/<tt> element is not permitted as content under <(small|strong)>/)) {\n        return false;\n      }\n\n      // The way Bootstrap styles navbars means we can't use native `<button>`\n      // elements for the navbar dropdowns.\n      if (\n        m.ruleId === 'prefer-native-element' &&\n        m.selector &&\n        [\n          '#navbarDropdownMenuCourseAdminLink',\n          '#navbarDropdownMenuInstanceAdminLink',\n          '#navbarDropdownMenuInstanceChooseLink',\n          '#navbarDropdownMenuLink',\n          '#navbarDropdown',\n        ].includes(m.selector)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n    result.errorCount = result.messages.length;\n  }\n\n  const formatter = formatterFactory('codeframe');\n  messages += formatter(validationResults.results);\n\n  const axeResults = await axe.run(jsdom.window.document.documentElement, {\n    resultTypes: ['violations', 'incomplete'],\n  });\n  if (axeResults.violations.length > 0) {\n    const err = new A11yError(\n      axeResults.violations,\n      A11yResults.convert(axeResults.violations).sort(),\n    );\n    messages += err.format({});\n  }\n\n  return messages.trim();\n}\n\nconst STATIC_ROUTE_PARAMS = {\n  // These are trivially known because there will only be one course and course\n  // instance in the database after syncing the test course.\n  course_id: 1,\n  course_instance_id: 1,\n};\n\nfunction getRouteParams(url: string) {\n  const routeParams = url.match(/:([^/]+)/g);\n\n  if (!routeParams) return [];\n\n  // Strip leading colon.\n  return routeParams.map((p) => p.slice(1));\n}\n\nfunction getMissingRouteParams(url: string, params: Record<string, any>) {\n  const routeParams = getRouteParams(url);\n  return routeParams.filter((p) => !(p in params));\n}\n\nfunction substituteParams(path: string, params: Record<string, string>) {\n  const routeParams = getRouteParams(path);\n  let newPath = path;\n  for (const param of routeParams) {\n    newPath = newPath.replace(`:${param}`, params[param]);\n  }\n  return newPath;\n}\n\nconst SKIP_ROUTES = [\n  // This is not a real page.\n  '/*',\n\n  // Special-case: `express-list-endpoints` doesn't handle regexp routes well.\n  // This matches the serialized path for regexp routes. Yes, there is a trailing\n  // space here.\n  '/ RegExp(/\\\\/pl\\\\/shibcallback/) ',\n\n  // This page is not user-visible.\n  '/pl/webhooks/ping',\n\n  // These routes just render JSON.\n  /^\\/pl\\/api\\/v1\\//,\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/instances/raw_data.json',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/assessment_question/:assessment_question_id/instances.json',\n  '/pl/course_instance/:course_instance_id/instructor/ai_generate_question_drafts/generation_logs.json',\n  '/pl/course/:course_id/ai_generate_question_drafts/generation_logs.json',\n\n  // Static assets.\n  '/assets/elements/:cachebuster/*',\n  '/pl/static/elements/*',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/instances/client.js',\n\n  // File downloads.\n  '/pl/course_instance/:course_instance_id/assessment_instance/:assessment_instance_id/file/:unsafe_file_id/:unsafe_display_filename',\n  '/pl/course_instance/:course_instance_id/assessment/:assessment_id/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/assessment/:assessment_id/clientFilesCourseInstance/*',\n  '/pl/course_instance/:course_instance_id/assessment/:assessment_id/clientFilesAssessment/*',\n  '/pl/course_instance/:course_instance_id/cacheableElementExtensions/:cachebuster/*',\n  '/pl/course_instance/:course_instance_id/cacheableElements/:cachebuster/*',\n  '/pl/course_instance/:course_instance_id/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/clientFilesCourseInstance/*',\n  '/pl/course_instance/:course_instance_id/elementExtensions/*',\n  '/pl/course_instance/:course_instance_id/elements/*',\n  '/pl/course_instance/:course_instance_id/gradebook/:filename',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/file/:filename',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/clientFilesQuestion/*',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/generatedFilesQuestion/variant/:unsafe_variant_id/*',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/submission/:unsafe_submission_id/file/*',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/text/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/assessment_instance/:assessment_instance_id/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/assessment_statistics/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/clientFilesCourseInstance/*',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/clientFilesAssessment/*',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/downloads/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/file_download/*',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/question_statistics/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/cacheableElementExtensions/:cachebuster/*',\n  '/pl/course_instance/:course_instance_id/instructor/cacheableElements/:cachebuster/*',\n  '/pl/course_instance/:course_instance_id/instructor/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/instructor/clientFilesCourseInstance/*',\n  '/pl/course_instance/:course_instance_id/instructor/course_admin/file_download/*',\n  '/pl/course_instance/:course_instance_id/instructor/elements/*',\n  '/pl/course_instance/:course_instance_id/instructor/elementExtensions/*',\n  '/pl/course_instance/:course_instance_id/instructor/grading_job/:job_id/file/:file',\n  '/pl/course_instance/:course_instance_id/instructor/instance_admin/assessments/file/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/instance_admin/file_download/*',\n  '/pl/course_instance/:course_instance_id/instructor/instance_admin/gradebook/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/instance_admin/gradebook/raw_data.json',\n  '/pl/course_instance/:course_instance_id/instructor/instance_question/:instance_question_id/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/instructor/instance_question/:instance_question_id/clientFilesQuestion/*',\n  '/pl/course_instance/:course_instance_id/instructor/instance_question/:instance_question_id/generatedFilesQuestion/variant/:unsafe_variant_id/*',\n  '/pl/course_instance/:course_instance_id/instructor/instance_question/:instance_question_id/submission/:unsafe_submission_id/file/*',\n  '/pl/course_instance/:course_instance_id/instructor/news_item/:news_item_id/*',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/clientFilesCourse/*',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/clientFilesQuestion/*',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/generatedFilesQuestion/variant/:unsafe_variant_id/*',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/file_download/*',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/file/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/preview/file/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/preview/text/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/statistics/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/submission/:unsafe_submission_id/file/*',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/text/:filename',\n  '/pl/course_instance/:course_instance_id/news_item/:news_item_id/*',\n  '/pl/course_instance/:course_instance_id/sharedElements/course/:producing_course_id/cacheableElements/:cachebuster/*',\n  '/pl/course_instance/:course_instance_id/sharedElements/course/:producing_course_id/elements/*',\n  '/pl/course_instance/:course_instance_id/instructor/sharedElements/course/:producing_course_id/cacheableElements/:cachebuster/*',\n  '/pl/course_instance/:course_instance_id/instructor/sharedElements/course/:producing_course_id/elements/*',\n  '/pl/course/:course_id/cacheableElementExtensions/:cachebuster/*',\n  '/pl/course/:course_id/cacheableElements/:cachebuster/*',\n  '/pl/course/:course_id/clientFilesCourse/*',\n  '/pl/course/:course_id/course_admin/file_download/*',\n  '/pl/course/:course_id/news_item/:news_item_id/*',\n  '/pl/course/:course_id/question/:question_id/clientFilesCourse/*',\n  '/pl/course/:course_id/question/:question_id/clientFilesQuestion/*',\n  '/pl/course/:course_id/elements/*',\n  '/pl/course/:course_id/elementExtensions/*',\n  '/pl/course/:course_id/question/:question_id/file_download/*',\n  '/pl/course/:course_id/question/:question_id/file/:filename',\n  '/pl/course/:course_id/question/:question_id/generatedFilesQuestion/variant/:unsafe_variant_id/*',\n  '/pl/course/:course_id/question/:question_id/preview/file/:filename',\n  '/pl/course/:course_id/question/:question_id/preview/text/:filename',\n  '/pl/course/:course_id/question/:question_id/statistics/:filename',\n  '/pl/course/:course_id/question/:question_id/submission/:unsafe_submission_id/file/*',\n  '/pl/course/:course_id/question/:question_id/text/:filename',\n  '/pl/course/:course_id/grading_job/:job_id/file/:file',\n  '/pl/course/:course_id/sharedElements/course/:producing_course_id/cacheableElements/:cachebuster/*',\n  '/pl/course/:course_id/sharedElements/course/:producing_course_id/elements/*',\n  '/pl/news_item/:news_item_id/*',\n  '/pl/public/course/:course_id/cacheableElements/:cachebuster/*',\n  '/pl/public/course/:course_id/elements/*',\n  '/pl/public/course/:course_id/question/:question_id/clientFilesQuestion/*',\n  '/pl/public/course/:course_id/question/:question_id/file_download/*',\n  '/pl/public/course/:course_id/question/:question_id/generatedFilesQuestion/variant/:unsafe_variant_id/*',\n  '/pl/public/course/:course_id/question/:question_id/submission/:unsafe_submission_id/file/*',\n\n  // Renders partial HTML documents, not a full page.\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/instance_question/:instance_question_id/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n  '/pl/course_instance/:course_instance_id/instructor/instance_admin/assessments/stats/:assessment_id',\n  '/pl/course_instance/:course_instance_id/instructor/question/:question_id/preview/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n  '/pl/course_instance/:course_instance_id/assessment_instance/:assessment_instance_id/time_remaining',\n  '/pl/course/:course_id/question/:question_id/preview/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n  '/pl/public/course/:course_id/question/:question_id/preview/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n  '/pl/course_instance/:course_instance_id/instructor/ai_generate_editor/:question_id/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n  '/pl/course/:course_id/ai_generate_editor/:question_id/variant/:unsafe_variant_id/submission/:unsafe_submission_id',\n\n  // These pages just redirect to other pages and thus don't have to be tested.\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/assessment_question/:assessment_question_id/next_ungraded',\n  '/pl/course_instance/:course_instance_id/instructor/course_admin/questions/qid/*',\n  '/pl/course_instance/:course_instance_id/instructor/loadFromDisk',\n  '/pl/course_instance/:course_instance_id/loadFromDisk',\n  '/pl/course/:course_id/course_admin/questions/qid/*',\n  '/pl/course/:course_id/file_transfer/:file_transfer_id',\n  '/pl/course/:course_id/loadFromDisk',\n  '/pl/loadFromDisk',\n  '/pl/oauth2callback',\n  '/pl/oauth2login',\n\n  // Admin page; we aren't guaranteed to have subpages to navigate to.\n  '/pl/administrator/batchedMigrations/:batched_migration_id',\n  '/pl/administrator/features/:feature',\n  '/pl/administrator/features/:feature/modal',\n\n  // These are only HTML fragments rendered by HTMX; we can't test them as full\n  // HTML documents.\n  /^\\/pl\\/navbar\\/course/,\n\n  // TODO: add tests for file editing/viewing.\n  /\\/file_edit\\/\\*$/,\n  /\\/file_view\\/\\*$/,\n\n  // TODO: add tests for job sequence pages.\n  /\\/:job_sequence_id$/,\n\n  // TODO: add tests for workspace pages. These will require us to open a question\n  // in order to create a workspace.\n  // TODO: open a question and create a workspace so we can test this page.\n  /^\\/pl\\/workspace\\//,\n\n  // TODO: run a query so we can test this page.\n  '/pl/administrator/query/:query',\n\n  // TODO: create an assessment instance and create an instance question so we can test these pages.\n  '/pl/course_instance/:course_instance_id/assessment_instance/:assessment_instance_id',\n  '/pl/course_instance/:course_instance_id/instance_question/:instance_question_id',\n  '/pl/course_instance/:course_instance_id/instructor/instance_question/:instance_question_id/file/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/instance_question/:instance_question_id/text/:filename',\n  '/pl/course_instance/:course_instance_id/instructor/assessment_instance/:assessment_instance_id',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/assessment_question/:assessment_question_id',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/assessment_question/:assessment_question_id/ai_grading_runs',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/instance_question/:instance_question_id',\n  '/pl/course_instance/:course_instance_id/instructor/assessment/:assessment_id/manual_grading/instance_question/:instance_question_id/grading_rubric_panels',\n\n  // TODO: submit an answer to a question so we can test this page.\n  '/pl/course_instance/:course_instance_id/instructor/grading_job/:job_id',\n  '/pl/course/:course_id/grading_job/:job_id',\n\n  // TODO: create a test course with AI generation feature flag enabled to test page\n  '/pl/course_instance/:course_instance_id/instructor/ai_generate_editor/:question_id',\n  '/pl/course/:course_id/ai_generate_editor/:question_id',\n  '/pl/course_instance/:course_instance_id/instructor/ai_generate_question_drafts/:job_id',\n];\n\nfunction shouldSkipPath(path) {\n  return SKIP_ROUTES.some((r) => {\n    if (typeof r === 'string') {\n      return r === path;\n    } else if (r instanceof RegExp) {\n      return r.test(path);\n    } else {\n      throw new Error(`Invalid route: ${r}`);\n    }\n  });\n}\n\ndescribe('accessibility', () => {\n  let endpoints: Endpoint[] = [];\n  let routeParams: Record<string, any> = {};\n  before('set up testing server', async function () {\n    config.cronActive = false;\n    // We use the test course since editing functionality is disabled in the\n    // example course.\n    await helperServer.before(TEST_COURSE_PATH).call(this);\n    config.cronActive = true;\n\n    // We want to test a news item page, so we need to \"init\" them.\n    await news_items.init({\n      notifyIfPreviouslyEmpty: true,\n      errorIfLockNotAcquired: true,\n    });\n\n    const app = await server.initExpress();\n    endpoints = expressListEndpoints(app);\n    endpoints.sort((a, b) => a.path.localeCompare(b.path));\n\n    const firstNewsItemResult = await sqldb.queryOneRowAsync(\n      'SELECT id FROM news_items ORDER BY id ASC LIMIT 1',\n      {},\n    );\n\n    const assessmentResult = await sqldb.queryOneRowAsync(\n      'SELECT id FROM assessments WHERE tid = $tid',\n      { tid: 'hw1-automaticTestSuite' },\n    );\n\n    const questionResult = await sqldb.queryOneRowAsync(\n      'SELECT id FROM questions WHERE qid = $qid',\n      { qid: 'downloadFile' },\n    );\n\n    await features.enable('question-sharing');\n\n    routeParams = {\n      ...STATIC_ROUTE_PARAMS,\n      news_item_id: firstNewsItemResult.rows[0].id,\n      assessment_id: assessmentResult.rows[0].id,\n      question_id: questionResult.rows[0].id,\n    };\n\n    await sqldb.queryOneRowAsync(\n      'UPDATE questions SET share_publicly = true WHERE id = $question_id',\n      { question_id: routeParams.question_id },\n    );\n\n    await sqldb.queryOneRowAsync(\n      'UPDATE assessments SET share_source_publicly = true WHERE id = $assessment_id',\n      { assessment_id: routeParams.assessment_id },\n    );\n\n    const courseId = await sqldb.queryOneRowAsync(\n      'SELECT course_id FROM course_instances WHERE id = $course_instance_id',\n      { course_instance_id: routeParams.course_instance_id },\n    );\n\n    await sqldb.queryOneRowAsync(\n      'UPDATE pl_courses SET sharing_name = $sharing_name WHERE id = $course_id',\n      { sharing_name: 'test', course_id: courseId.rows[0].course_id },\n    );\n  });\n  after('shut down testing server', helperServer.after);\n\n  test('All pages pass accessibility checks', async function () {\n    this.timeout(240_000);\n\n    const missingParamsEndpoints: Endpoint[] = [];\n    const failingEndpoints: [Endpoint, string][] = [];\n\n    for (const endpoint of endpoints) {\n      if (shouldSkipPath(endpoint.path)) {\n        continue;\n      }\n\n      if (!endpoint.methods.includes('GET')) {\n        // We won't try to test routes that don't have a GET handler.\n        continue;\n      }\n\n      const missingParams = getMissingRouteParams(endpoint.path, routeParams);\n      if (missingParams.length > 0) {\n        missingParamsEndpoints.push(endpoint);\n        continue;\n      }\n\n      const url = substituteParams(endpoint.path, routeParams);\n      const messages = await checkPage(url);\n      if (messages !== '') {\n        failingEndpoints.push([endpoint, messages]);\n      }\n    }\n\n    const errLines: string[] = [];\n\n    if (missingParamsEndpoints.length > 0) {\n      errLines.push('The following endpoints are missing params:');\n      missingParamsEndpoints.forEach((e) => errLines.push(`  ${e.path}`));\n    }\n\n    if (failingEndpoints.length > 0) {\n      errLines.push('The following endpoints failed accessibility checks:\\n');\n      failingEndpoints.forEach(([endpoint, messages]) => {\n        errLines.push(endpoint.path, messages, '');\n      });\n    }\n\n    if (errLines.length > 0) {\n      throw new Error(errLines.join('\\n'));\n    }\n  });\n});\n"]}