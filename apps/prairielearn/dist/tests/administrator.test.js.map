{"version":3,"file":"administrator.test.js","sourceRoot":"","sources":["../../src/tests/administrator.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport fetch from 'node-fetch';\n\nimport { config } from '../lib/config.js';\n\nimport * as helperServer from './helperServer.js';\n\nconst siteUrl = 'http://localhost:' + config.serverPort;\nconst baseUrl = siteUrl + '/pl';\n\ndescribe('Administrator pages', function () {\n  this.timeout(20000);\n\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n\n  describe('view administrator admins list page', () => {\n    it('should load successfully', async () => {\n      const res = await fetch(baseUrl + '/administrator/admins');\n      assert(res.ok);\n      const $ = cheerio.load(await res.text());\n      const elemList = $('button[data-testid=\"administrator-insert-button\"]');\n      assert.lengthOf(elemList, 1);\n    });\n  });\n\n  describe('view administrator settings page', () => {\n    it('should load successfully', async () => {\n      const res = await fetch(baseUrl + '/administrator/settings');\n      assert(res.ok);\n    });\n  });\n\n  describe('view administrator institutions page', function () {\n    it('should load successfully', async () => {\n      const res = await fetch(baseUrl + '/administrator/institutions');\n      assert(res.ok);\n      const $ = cheerio.load(await res.text());\n      const elemList = $('#institutions td:first-child:contains(\"Default\")');\n      assert.lengthOf(elemList, 1);\n    });\n  });\n\n  describe('view administrator courses page', () => {\n    it('should load successfully', async () => {\n      const res = await fetch(baseUrl + '/administrator/courses');\n      assert(res.ok);\n      const $ = cheerio.load(await res.text());\n      const elemList = $('#courses td:contains(\"QA 101\")');\n      assert.lengthOf(elemList, 1);\n    });\n  });\n\n  describe('view administrator exam-mode networks page', () => {\n    it('should load successfully', async () => {\n      const res = await fetch(baseUrl + '/administrator/networks');\n      assert(res.ok);\n    });\n  });\n});\n"]}