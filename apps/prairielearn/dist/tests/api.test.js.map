{"version":3,"file":"api.test.js","sourceRoot":"","sources":["../../src/tests/api.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport { step } from 'mocha-steps';\nimport fetch from 'node-fetch';\n\nimport * as helperExam from './helperExam.js';\nimport * as helperQuestion from './helperQuestion.js';\nimport * as helperServer from './helperServer.js';\n\nconst locals: Record<string, any> = {};\n\nconst assessmentPoints = 5;\n\ndescribe('API', function () {\n  this.timeout(60000);\n\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n\n  helperExam.startExam(locals);\n\n  describe('grade correct answer to question addNumbers', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save'];\n        locals.postAction = 'grade';\n        locals.question = helperExam.questions.addNumbers;\n        locals.expectedResult = {\n          submission_score: 1,\n          submission_correct: true,\n          instance_question_points: assessmentPoints,\n          instance_question_score_perc: (assessmentPoints / 5) * 100,\n          assessment_instance_points: assessmentPoints,\n          assessment_instance_score_perc: (assessmentPoints / helperExam.assessmentMaxPoints) * 100,\n        };\n        locals.getSubmittedAnswer = function (variant) {\n          return {\n            c: variant.true_answer.c,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkQuestionScore(locals);\n    helperQuestion.checkAssessmentScore(locals);\n  });\n\n  describe('settings page', function () {\n    it('loads successfully', async function () {\n      locals.settingsUrl = locals.baseUrl + '/settings';\n      const res = await fetch(locals.settingsUrl);\n      assert.isTrue(res.ok);\n      const page$ = cheerio.load(await res.text());\n\n      const button = page$('[data-testid=\"generate-token-button\"]').get(0);\n      assert(button);\n\n      // Load the popover content\n      assert.isString(button.attribs['data-bs-content']);\n\n      const data$ = cheerio.load(button.attribs['data-bs-content']);\n\n      // Validate that the CSRF token is present\n      const csrfInput = data$('form input[name=\"__csrf_token\"]').get(0);\n      const csrfToken = csrfInput?.attribs.value;\n      assert.isString(csrfToken);\n\n      // Store CSRF token for later requests\n      locals.__csrf_token = csrfToken;\n\n      // Validate the action input\n      const actionInput = data$('form input[name=\"__action\"]').get(0);\n      const action = actionInput?.attribs.value;\n      assert.equal(action, 'token_generate');\n\n      // Persist the action for later\n      // TODO: just hardcode this!\n      locals.__action = action;\n\n      // Validate that there's an input for the token name\n      assert.lengthOf(data$('form input[name=\"token_name\"]'), 1);\n\n      // There shouldn't be an access token displayed on the page\n      assert.lengthOf(page$('.new-access-token'), 0);\n    });\n\n    it('generates a token', async function () {\n      const res = await fetch(locals.settingsUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: locals.__action,\n          __csrf_token: locals.__csrf_token,\n          token_name: 'test',\n        }),\n        redirect: 'follow',\n      });\n      assert.isTrue(res.ok);\n\n      // Extract the token from the response\n      const page$ = cheerio.load(await res.text());\n      const tokenContainer = page$('.new-access-token');\n      assert.lengthOf(tokenContainer, 1);\n      locals.api_token = tokenContainer.text().trim();\n\n      // Check that the token has the correct format\n      assert.ok(\n        /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/.test(locals.api_token),\n      );\n    });\n\n    it('settings page does not show token again after reloading', async function () {\n      const res = await fetch(locals.settingsUrl);\n      assert.isTrue(res.ok);\n      const pageContent = await res.text();\n      assert.isFalse(pageContent.includes(locals.api_token));\n    });\n  });\n\n  describe('API endpoints', function () {\n    step('GET to API for assessments fails without token', async function () {\n      locals.apiUrl = locals.baseUrl + '/api/v1';\n      locals.apiCourseInstanceUrl = locals.apiUrl + '/course_instances/1';\n      locals.apiAssessmentsUrl = locals.apiCourseInstanceUrl + '/assessments';\n      const res = await fetch(locals.apiAssessmentsUrl);\n      assert.equal(res.status, 401);\n    });\n\n    step('GET to API for assessments fails with an incorrect token', async function () {\n      const res = await fetch(locals.apiAssessmentsUrl, {\n        headers: {\n          'Private-Token': '12345678-1234-1234-1234-1234567890ab',\n        },\n      });\n      assert.equal(res.status, 401);\n    });\n\n    step('GET to API for assessments succeeds with the correct token', async function () {\n      const res = await fetch(locals.apiAssessmentsUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n\n      const assessment = json.find((o) => o.assessment_name === 'exam1-automaticTestSuite');\n      assert.exists(assessment);\n      assert.equal(assessment.assessment_label, 'E1');\n\n      // Persist the assessment ID for later requests\n      locals.assessment_id = assessment.assessment_id;\n    });\n\n    step('GET to API for single assessment succeeds', async function () {\n      locals.apiAssessmentUrl =\n        locals.apiCourseInstanceUrl + `/assessments/${locals.assessment_id}`;\n\n      const res = await fetch(locals.apiAssessmentUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n\n      assert.equal(json.assessment_id, locals.assessment_id);\n      assert.equal(json.assessment_label, 'E1');\n    });\n\n    step('GET to API for assessment instances succeeds', async function () {\n      locals.apiAssessmentInstancesUrl =\n        locals.apiCourseInstanceUrl + `/assessments/${locals.assessment_id}/assessment_instances`;\n\n      const res = await fetch(locals.apiAssessmentInstancesUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      const assessmentInstance = json[0];\n      assert.equal(assessmentInstance.user_uid, 'dev@example.com');\n      assert.equal(assessmentInstance.points, assessmentPoints);\n      assert.equal(assessmentInstance.max_points, helperExam.assessmentMaxPoints);\n\n      // Persist the assessment instance ID for later requests\n      locals.assessment_instance_id = assessmentInstance.assessment_instance_id;\n    });\n\n    step('GET to API for a single assessment instance succeeds', async function () {\n      locals.apiAssessmentInstanceUrl =\n        locals.apiCourseInstanceUrl + `/assessment_instances/${locals.assessment_instance_id}`;\n\n      const res = await fetch(locals.apiAssessmentInstanceUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      assert.equal(json.assessment_instance_id, locals.assessment_instance_id);\n      assert.equal(json.assessment_id, locals.assessment_id);\n      assert.equal(json.user_uid, 'dev@example.com');\n      assert.equal(json.points, assessmentPoints);\n      assert.equal(json.max_points, helperExam.assessmentMaxPoints);\n    });\n\n    step('GET to API for assessment submissions succeeds', async function () {\n      locals.apiSubmissionsUrl =\n        locals.apiCourseInstanceUrl +\n        `/assessment_instances/${locals.assessment_instance_id}/submissions`;\n\n      const res = await fetch(locals.apiSubmissionsUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      assert.lengthOf(json, 1);\n      assert.equal(json[0].instance_question_points, assessmentPoints);\n\n      // Persist the submission ID for later requests\n      locals.submission_id = json[0].submission_id;\n    });\n\n    step('GET to API for single submission succeeds', async function () {\n      locals.apiSubmissionUrl =\n        locals.apiCourseInstanceUrl + `/submissions/${locals.submission_id}`;\n\n      const res = await fetch(locals.apiSubmissionUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      assert.equal(json.submission_id, locals.submission_id);\n      assert.equal(json.assessment_instance_id, locals.assessment_instance_id);\n      assert.equal(json.assessment_id, locals.assessment_id);\n      assert.equal(json.instance_question_points, assessmentPoints);\n    });\n\n    step('GET to API for gradebook', async function () {\n      locals.apiGradebookUrl = locals.apiCourseInstanceUrl + '/gradebook';\n      const res = await fetch(locals.apiGradebookUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      const user = json.find((o) => o.user_uid === 'dev@example.com');\n      assert.exists(user);\n      const assessment = user.assessments.find((o) => o.assessment_label === 'E1');\n      assert.exists(assessment);\n      assert.equal(assessment.points, assessmentPoints);\n      assert.equal(assessment.max_points, helperExam.assessmentMaxPoints);\n    });\n\n    step('GET to API for assessment instance questions succeeds', async function () {\n      locals.apiInstanceQuestionUrl =\n        locals.apiCourseInstanceUrl +\n        `/assessment_instances/${locals.assessment_instance_id}/instance_questions`;\n\n      const res = await fetch(locals.apiInstanceQuestionUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n\n      const json = (await res.json()) as any;\n      assert.lengthOf(json, 7);\n    });\n\n    step('GET to API for assessment access rules succeeds', async function () {\n      locals.apiAssessmentAccessRulesUrl =\n        locals.apiCourseInstanceUrl +\n        `/assessments/${locals.assessment_id}/assessment_access_rules`;\n\n      const res = await fetch(locals.apiAssessmentAccessRulesUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      assert.lengthOf(json, 1);\n    });\n\n    step('GET to API for course instance access rules succeeds', async function () {\n      locals.apiCourseInstanceAccessRulesUrl =\n        locals.apiCourseInstanceUrl + '/course_instance_access_rules';\n      const res = await fetch(locals.apiCourseInstanceAccessRulesUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      assert.lengthOf(json, 1);\n    });\n\n    step('GET to API for course instance info succeeds', async function () {\n      const res = await fetch(locals.apiCourseInstanceUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n        },\n      });\n      assert.equal(res.status, 200);\n\n      const json = (await res.json()) as any;\n      assert.exists(json.course_instance_id);\n      assert.exists(json.course_title);\n    });\n\n    step('GET to API for course instance info fails in exam mode', async () => {\n      const res = await fetch(locals.apiCourseInstanceUrl, {\n        headers: {\n          'Private-Token': locals.api_token,\n          Cookie: 'pl_test_mode=Exam',\n        },\n      });\n      assert.equal(res.status, 403);\n    });\n  });\n});\n"]}