{"version":3,"file":"courseEditor.test.js","sourceRoot":"","sources":["../../src/tests/courseEditor.test.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAE7B,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAC9B,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAC;AAC9B,OAAO,EAAE,MAAM,UAAU,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,MAAM,YAAY,CAAC;AAC/B,OAAO,KAAK,GAAG,MAAM,KAAK,CAAC;AAE3B,OAAO,KAAK,KAAK,MAAM,wBAAwB,CAAC;AAEhD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,OAAO,KAAK,YAAY,MAAM,mBAAmB,CAAC;AAElD,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhD,MAAM,MAAM,GAAwB,EAAE,CAAC;AAEvC,MAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;AAE7F,4DAA4D;AAC5D,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AACnC,MAAM,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;AAC3D,MAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AACvD,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACrD,MAAM,SAAS,GAAG,aAAa,CAAC;AAEhC,MAAM,OAAO,GAAG,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC;AACxD,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC;AAEhC,MAAM,SAAS,GAAG,OAAO,GAAG,WAAW,CAAC;AACxC,MAAM,kBAAkB,GAAG,GAAG,SAAS,yBAAyB,CAAC;AAEjE,MAAM,iBAAiB,GAAG,OAAO,GAAG,+BAA+B,CAAC;AAEpE,MAAM,YAAY,GAAG,GAAG,iBAAiB,yBAAyB,CAAC;AACnE,MAAM,cAAc,GAAG,GAAG,iBAAiB,6BAA6B,CAAC;AAEzE,MAAM,cAAc,GAAG,GAAG,iBAAiB,sBAAsB,CAAC;AAClE,MAAM,0BAA0B,GAAG,GAAG,iBAAiB,sBAAsB,CAAC;AAC9E,MAAM,oBAAoB,GAAG,OAAO,GAAG,+BAA+B,CAAC;AACvE,MAAM,4BAA4B,GAAG,GAAG,oBAAoB,0BAA0B,CAAC;AAEvF,MAAM,gBAAgB,GAAG,GAAG,iBAAiB,eAAe,CAAC;AAC7D,MAAM,wBAAwB,GAAG,GAAG,gBAAgB,WAAW,CAAC;AAEhE,MAAM,YAAY,GAAG;IACnB;QACE,GAAG,EAAE,YAAY;QACjB,YAAY,EAAE,sBAAsB;QACpC,MAAM,EAAE,cAAc;QACtB,IAAI,EAAE,2BAA2B;QACjC,IAAI,EAAE;YACJ,GAAG,EAAE,KAAK;YACV,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,gBAAgB;SAC7B;QACD,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,2BAA2B;YAC3B,+BAA+B;YAC/B,2BAA2B;SAC5B,CAAC;KACH;IACD;QACE,mEAAmE;QACnE,GAAG,EAAE,YAAY;QACjB,YAAY,EAAE,sBAAsB;QACpC,MAAM,EAAE,cAAc;QACtB,IAAI,EAAE,+BAA+B;QACrC,IAAI,EAAE;YACJ,GAAG,EAAE,WAAW;YAChB,KAAK,EAAE,iBAAiB;YACxB,UAAU,EAAE,gBAAgB;YAC5B,YAAY,EAAE,8BAA8B;SAC7C;QACD,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,2BAA2B;YAC3B,+BAA+B;YAC/B,2BAA2B;YAC3B,+BAA+B;YAC/B,mCAAmC;YACnC,+BAA+B;SAChC,CAAC;KACH;IACD;QACE,GAAG,EAAE,cAAc;QACnB,YAAY,EAAE,sBAAsB;QACpC,MAAM,EAAE,iBAAiB;QACzB,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,+BAA+B;YAC/B,mCAAmC;YACnC,+BAA+B;SAChC,CAAC;KACH;IACD;QACE,uDAAuD;QACvD,GAAG,EAAE,0BAA0B;QAC/B,YAAY,EAAE,sBAAsB;QACpC,MAAM,EAAE,iBAAiB;QACzB,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;SACpC,CAAC;KACH;IACD;QACE,GAAG,EAAE,GAAG,iBAAiB,sBAAsB;QAC/C,MAAM,EAAE,qBAAqB;QAC7B,YAAY,EAAE,iCAAiC;QAC/C,IAAI,EAAE;YACJ,YAAY,EAAE,CAAC;SAChB;QACD,MAAM,EAAE,eAAe;QACvB,IAAI,EAAE,yCAAyC;QAC/C,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,yCAAyC;YACzC,6CAA6C;YAC7C,yCAAyC;SAC1C,CAAC;KACH;IACD;QACE,YAAY,EAAE,sBAAsB;QACpC,MAAM,EAAE,iBAAiB;QACzB,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;SACpC,CAAC;KACH;IACD;QACE,GAAG,EAAE,cAAc;QACnB,YAAY,EAAE,wBAAwB;QACtC,MAAM,EAAE,gBAAgB;QACxB,IAAI,EAAE,4DAA4D;QAClE,IAAI,EAAE;YACJ,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,UAAU;YAChB,GAAG,EAAE,UAAU;SAChB;QACD,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,4DAA4D;SAC7D,CAAC;KACH;IACD;QACE,GAAG,EAAE,wBAAwB;QAC7B,YAAY,EAAE,wBAAwB;QACtC,MAAM,EAAE,mBAAmB;QAC3B,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;SACpC,CAAC;KACH;IACD;QACE,GAAG,EAAE,GAAG,iBAAiB,wBAAwB;QACjD,YAAY,EAAE,mCAAmC;QACjD,MAAM,EAAE,iBAAiB;QACzB,IAAI,EAAE,gEAAgE;QACtE,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,gEAAgE;SACjE,CAAC;KACH;IACD;QACE,YAAY,EAAE,wBAAwB;QACtC,MAAM,EAAE,mBAAmB;QAC3B,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;SACpC,CAAC;KACH;IACD;QACE,GAAG,EAAE,kBAAkB;QACvB,YAAY,EAAE,4BAA4B;QAC1C,MAAM,EAAE,qBAAqB;QAC7B,IAAI,EAAE,+CAA+C;QACrD,IAAI,EAAE;YACJ,UAAU,EAAE,KAAK;YACjB,SAAS,EAAE,KAAK;SACjB;QACD,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,+CAA+C;SAChD,CAAC;KACH;IACD;QACE,GAAG,EAAE,4BAA4B;QACjC,YAAY,EAAE,4BAA4B;QAC1C,MAAM,EAAE,wBAAwB;QAChC,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;SACpC,CAAC;KACH;IACD;QACE,GAAG,EAAE,GAAG,iBAAiB,0BAA0B;QACnD,YAAY,EAAE,wCAAwC;QACtD,MAAM,EAAE,sBAAsB;QAC9B,IAAI,EAAE,oDAAoD;QAC1D,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;YACnC,oDAAoD;YACpD,gEAAgE;SACjE,CAAC;KACH;IACD;QACE,YAAY,EAAE,4BAA4B;QAC1C,MAAM,EAAE,wBAAwB;QAChC,KAAK,EAAE,IAAI,GAAG,CAAC;YACb,WAAW;YACX,iBAAiB;YACjB,8CAA8C;YAC9C,0DAA0D;YAC1D,mCAAmC;YACnC,uCAAuC;YACvC,mCAAmC;SACpC,CAAC;KACH;CACF,CAAC;AAEF,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEpB,QAAQ,CAAC,wBAAwB,EAAE;QACjC,MAAM,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,iBAAiB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,uBAAuB,EAAE,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QAEhE,MAAM,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACxD,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE;gBACnD,WAAW,EAAE,aAAa;gBAC1B,iBAAiB,EAAE,eAAe;aACnC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,KAAK,CAAC,0BAA0B,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;QAEtD,KAAK,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YAC3C,MAAM,iBAAiB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,mBAAmB,EAAE;YAC5B,EAAE,CAAC,mBAAmB,EAAE;gBACtB,KAAK,MAAM,IAAI,IAAI,MAAM,EAAE,CAAC;oBAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,cAAc,EAAE;YACvB,YAAY,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;gBAC/B,QAAQ,CAAC,OAAO,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,KAAK,UAAU,QAAQ,CAAC,OAAO;IAC7B,MAAM,KAAK,GAAG,IAAI,GAAG,EAAU,CAAC;IAEhC,MAAM,YAAY,GAAG,CAAC,IAAI,EAAE,EAAE;QAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,QAAQ,KAAK,GAAG,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;IACjD,CAAC,CAAC;IAEF,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;IAE/D,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC;IAE9C,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE;QACzB,SAAS,CAAC;YACR,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,MAAM;YACR,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;gBAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC1D,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;oBACzC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACrB,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACzB,MAAM,CAAC,GAAG,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;YACpB,OAAO,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAS,QAAQ,CAAC,MAAM;IACtB,QAAQ,CAAC,UAAU,MAAM,CAAC,GAAG,EAAE,EAAE,GAAG,EAAE;QACpC,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC;YACf,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;gBACxC,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAEpC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;gBACpB,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC;QACL,CAAC;QACD,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClC,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;gBAClB,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBACvC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAE7B,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC/D,QAAQ,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,6BAA6B,CAAC,CAAC;gBAClE,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBACpD,MAAM,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;gBAChD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACvC,CAAC;iBAAM,CAAC;gBACN,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,YAAY,6BAA6B,CAAC,CAAC;gBAC/E,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAC7B,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC;gBACpD,MAAM,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;gBAChD,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,WAAW,MAAM,CAAC,GAAG,gBAAgB,MAAM,CAAC,MAAM,EAAE,EAAE;QAC7D,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE;gBAChD,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,IAAI,eAAe,CAAC;oBACxB,QAAQ,EAAE,MAAM,CAAC,MAAM;oBACvB,YAAY,EAAE,MAAM,CAAC,YAAY;oBACjC,GAAG,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC;iBACxB,CAAC;aACH,CAAC,CAAC;YACH,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;YACpB,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;YACrB,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,mBAAmB,EAAE,KAAK,IAAI,EAAE;YACjC,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;YAC9E,MAAM,CAAC,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;YAC/B,MAAM,YAAY,CAAC,yBAAyB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;QACxB,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,OAAO,GAAG,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,+BAA+B,EAAE;gBAC1E,WAAW,EAAE,aAAa;aAC3B,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE;gBAC3B,GAAG,EAAE,YAAY;gBACjB,GAAG,EAAE,OAAO,CAAC,GAAG;aACjB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC,CAAC;YACxD,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QAEH,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;YAChB,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;gBAClC,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;gBAClF,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBACtC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,KAAK,UAAU,iBAAiB;IAC9B,MAAM,iBAAiB,EAAE,CAAC;IAC1B,kEAAkE;IAClE,qCAAqC;IACrC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,2BAA2B,EAAE,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,EAAE;QACzF,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;IACH,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,eAAe,EAAE,aAAa,CAAC,EAAE;QAC5D,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;IACH,MAAM,EAAE,CAAC,IAAI,CAAC,iBAAiB,EAAE,aAAa,EAAE,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IACtE,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE;QAChC,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;IACH,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,gBAAgB,CAAC,EAAE;QACrD,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;IACH,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,EAAE;QAC3B,GAAG,EAAE,aAAa;QAClB,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;IACH,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,eAAe,EAAE,YAAY,CAAC,EAAE;QAC3D,GAAG,EAAE,GAAG;QACR,GAAG,EAAE,OAAO,CAAC,GAAG;KACjB,CAAC,CAAC;AACL,CAAC;AAED,KAAK,UAAU,iBAAiB;IAC9B,MAAM,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IACjC,MAAM,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IAC/B,MAAM,EAAE,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import * as path from 'path';\n\nimport { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport klaw from 'klaw';\nimport fetch from 'node-fetch';\nimport * as tmp from 'tmp';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\n\nimport * as helperServer from './helperServer.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst locals: Record<string, any> = {};\n\nconst courseTemplateDir = path.join(import.meta.dirname, 'testFileEditor', 'courseTemplate');\n\n// Set up temporary writeable directories for course content\nconst baseDir = tmp.dirSync().name;\nconst courseOriginDir = path.join(baseDir, 'courseOrigin');\nconst courseLiveDir = path.join(baseDir, 'courseLive');\nconst courseDevDir = path.join(baseDir, 'courseDev');\nconst courseDir = courseLiveDir;\n\nconst siteUrl = 'http://localhost:' + config.serverPort;\nconst baseUrl = siteUrl + '/pl';\n\nconst courseUrl = baseUrl + '/course/1';\nconst courseInstancesUrl = `${courseUrl}/course_admin/instances`;\n\nconst courseInstanceUrl = baseUrl + '/course_instance/1/instructor';\n\nconst questionsUrl = `${courseInstanceUrl}/course_admin/questions`;\nconst assessmentsUrl = `${courseInstanceUrl}/instance_admin/assessments`;\n\nconst newQuestionUrl = `${courseInstanceUrl}/question/2/settings`;\nconst newQuestionFromTemplateUrl = `${courseInstanceUrl}/question/3/settings`;\nconst newCourseInstanceUrl = baseUrl + '/course_instance/2/instructor';\nconst newCourseInstanceSettingsUrl = `${newCourseInstanceUrl}/instance_admin/settings`;\n\nconst newAssessmentUrl = `${courseInstanceUrl}/assessment/2`;\nconst newAssessmentSettingsUrl = `${newAssessmentUrl}/settings`;\n\nconst testEditData = [\n  {\n    url: questionsUrl,\n    formSelector: '#createQuestionModal',\n    action: 'add_question',\n    info: 'questions/New_1/info.json',\n    data: {\n      qid: 'New',\n      title: 'New',\n      start_from: 'Empty question',\n    },\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'questions/New_1/info.json',\n      'questions/New_1/question.html',\n      'questions/New_1/server.py',\n    ]),\n  },\n  {\n    // Create a question with a template question as the starting point\n    url: questionsUrl,\n    formSelector: '#createQuestionModal',\n    action: 'add_question',\n    info: 'questions/custom_id/info.json',\n    data: {\n      qid: 'custom_id',\n      title: 'Custom Question',\n      start_from: 'Empty question',\n      template_qid: 'template/string-input/random',\n    },\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'questions/New_1/info.json',\n      'questions/New_1/question.html',\n      'questions/New_1/server.py',\n      'questions/custom_id/info.json',\n      'questions/custom_id/question.html',\n      'questions/custom_id/server.py',\n    ]),\n  },\n  {\n    url: newQuestionUrl,\n    formSelector: '#deleteQuestionModal',\n    action: 'delete_question',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'questions/custom_id/info.json',\n      'questions/custom_id/question.html',\n      'questions/custom_id/server.py',\n    ]),\n  },\n  {\n    // Delete the question created from a template question\n    url: newQuestionFromTemplateUrl,\n    formSelector: '#deleteQuestionModal',\n    action: 'delete_question',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n    ]),\n  },\n  {\n    url: `${courseInstanceUrl}/question/1/settings`,\n    button: '#copyQuestionButton',\n    formSelector: 'form[name=\"copy-question-form\"]',\n    data: {\n      to_course_id: 1,\n    },\n    action: 'copy_question',\n    info: 'questions/test/question_copy1/info.json',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'questions/test/question_copy1/info.json',\n      'questions/test/question_copy1/question.html',\n      'questions/test/question_copy1/server.py',\n    ]),\n  },\n  {\n    formSelector: '#deleteQuestionModal',\n    action: 'delete_question',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n    ]),\n  },\n  {\n    url: assessmentsUrl,\n    formSelector: '#createAssessmentModal',\n    action: 'add_assessment',\n    info: 'courseInstances/Fa18/assessments/New_1/infoAssessment.json',\n    data: {\n      title: 'New',\n      aid: 'New',\n      type: 'Homework',\n      set: 'Homework',\n    },\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'courseInstances/Fa18/assessments/New_1/infoAssessment.json',\n    ]),\n  },\n  {\n    url: newAssessmentSettingsUrl,\n    formSelector: '#deleteAssessmentModal',\n    action: 'delete_assessment',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n    ]),\n  },\n  {\n    url: `${courseInstanceUrl}/assessment/1/settings`,\n    formSelector: 'form[name=\"copy-assessment-form\"]',\n    action: 'copy_assessment',\n    info: 'courseInstances/Fa18/assessments/HW1_copy1/infoAssessment.json',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'courseInstances/Fa18/assessments/HW1_copy1/infoAssessment.json',\n    ]),\n  },\n  {\n    formSelector: '#deleteAssessmentModal',\n    action: 'delete_assessment',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n    ]),\n  },\n  {\n    url: courseInstancesUrl,\n    formSelector: '#createCourseInstanceModal',\n    action: 'add_course_instance',\n    info: 'courseInstances/New_1/infoCourseInstance.json',\n    data: {\n      short_name: 'New',\n      long_name: 'New',\n    },\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'courseInstances/New_1/infoCourseInstance.json',\n    ]),\n  },\n  {\n    url: newCourseInstanceSettingsUrl,\n    formSelector: '#deleteCourseInstanceModal',\n    action: 'delete_course_instance',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n    ]),\n  },\n  {\n    url: `${courseInstanceUrl}/instance_admin/settings`,\n    formSelector: 'form[name=\"copy-course-instance-form\"]',\n    action: 'copy_course_instance',\n    info: 'courseInstances/Fa18_copy1/infoCourseInstance.json',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n      'courseInstances/Fa18_copy1/infoCourseInstance.json',\n      'courseInstances/Fa18_copy1/assessments/HW1/infoAssessment.json',\n    ]),\n  },\n  {\n    formSelector: '#deleteCourseInstanceModal',\n    action: 'delete_course_instance',\n    files: new Set([\n      'README.md',\n      'infoCourse.json',\n      'courseInstances/Fa18/infoCourseInstance.json',\n      'courseInstances/Fa18/assessments/HW1/infoAssessment.json',\n      'questions/test/question/info.json',\n      'questions/test/question/question.html',\n      'questions/test/question/server.py',\n    ]),\n  },\n];\n\ndescribe('test course editor', function () {\n  this.timeout(20000);\n\n  describe('not the example course', function () {\n    before('create test course files', async () => {\n      await createCourseFiles();\n    });\n\n    before('set up testing server', helperServer.before(courseDir));\n\n    before('update course repository in database', async () => {\n      await sqldb.queryAsync(sql.update_course_repository, {\n        course_path: courseLiveDir,\n        course_repository: courseOriginDir,\n      });\n    });\n\n    after('shut down testing server', helperServer.after);\n\n    after('delete test course files', async () => {\n      await deleteCourseFiles();\n    });\n\n    describe('the locals object', function () {\n      it('should be cleared', function () {\n        for (const prop in locals) {\n          delete locals[prop];\n        }\n      });\n    });\n\n    describe('verify edits', function () {\n      testEditData.forEach((element) => {\n        testEdit(element);\n      });\n    });\n  });\n});\n\nasync function getFiles(options): Promise<Set<string>> {\n  const files = new Set<string>();\n\n  const ignoreHidden = (item) => {\n    const basename = path.basename(item);\n    return basename === '.' || basename[0] !== '.';\n  };\n\n  const walker = klaw(options.baseDir, { filter: ignoreHidden });\n\n  options.ignoreDirs = options.ignoreDirs || [];\n\n  walker.on('readable', () => {\n    for (;;) {\n      const item = walker.read();\n      if (!item) {\n        break;\n      }\n      if (!item.stats.isDirectory()) {\n        const relPath = path.relative(options.baseDir, item.path);\n        const prefix = relPath.split(path.sep)[0];\n        if (!options.ignoreDirs.includes(prefix)) {\n          files.add(relPath);\n        }\n      }\n    }\n  });\n\n  return new Promise((resolve, reject) => {\n    walker.on('error', (err) => {\n      reject(err);\n    });\n\n    walker.on('end', () => {\n      resolve(files);\n    });\n  });\n}\n\nfunction testEdit(params) {\n  describe(`GET to ${params.url}`, () => {\n    if (params.url) {\n      it('should load successfully', async () => {\n        const res = await fetch(params.url);\n\n        assert.isOk(res.ok);\n        locals.$ = cheerio.load(await res.text());\n      });\n    }\n    it('should have a CSRF token', () => {\n      if (params.button) {\n        let elemList = locals.$(params.button);\n        assert.lengthOf(elemList, 1);\n\n        const $ = cheerio.load(elemList[0].attribs['data-bs-content']);\n        elemList = $(`${params.formSelector} input[name=\"__csrf_token\"]`);\n        assert.lengthOf(elemList, 1);\n        assert.nestedProperty(elemList[0], 'attribs.value');\n        locals.__csrf_token = elemList[0].attribs.value;\n        assert.isString(locals.__csrf_token);\n      } else {\n        const elemList = locals.$(`${params.formSelector} input[name=\"__csrf_token\"]`);\n        assert.lengthOf(elemList, 1);\n        assert.nestedProperty(elemList[0], 'attribs.value');\n        locals.__csrf_token = elemList[0].attribs.value;\n        assert.isString(locals.__csrf_token);\n      }\n    });\n  });\n\n  describe(`POST to ${params.url} with action ${params.action}`, function () {\n    it('should load successfully', async () => {\n      const res = await fetch(params.url || locals.url, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: params.action,\n          __csrf_token: locals.__csrf_token,\n          ...(params?.data ?? {}),\n        }),\n      });\n      assert.isOk(res.ok);\n      locals.url = res.url;\n      locals.$ = cheerio.load(await res.text());\n    });\n  });\n\n  describe('The job sequence', () => {\n    it('should have an id', async () => {\n      const result = await sqldb.queryOneRowAsync(sql.select_last_job_sequence, []);\n      locals.job_sequence_id = result.rows[0].id;\n    });\n    it('should complete', async () => {\n      await helperServer.waitForJobSequenceSuccess(locals.job_sequence_id);\n    });\n  });\n\n  describe('validate', () => {\n    it('should not have any sync warnings or errors', async () => {\n      const results = await sqldb.queryAsync(sql.select_sync_warnings_and_errors, {\n        course_path: courseLiveDir,\n      });\n      assert.isEmpty(results.rows);\n    });\n\n    it('should pull into dev directory', async () => {\n      await execa('git', ['pull'], {\n        cwd: courseDevDir,\n        env: process.env,\n      });\n    });\n\n    it('should have correct contents', async () => {\n      const files = await getFiles({ baseDir: courseDevDir });\n      assert.sameMembers([...files], [...params.files]);\n    });\n\n    if (params.info) {\n      it('should have a uuid', async () => {\n        const contents = await fs.readFile(path.join(courseDevDir, params.info), 'utf-8');\n        const infoJson = JSON.parse(contents);\n        assert.isString(infoJson.uuid);\n      });\n    }\n  });\n}\n\nasync function createCourseFiles() {\n  await deleteCourseFiles();\n  // Ensure that the default branch is master, regardless of how git\n  // is configured on the host machine.\n  await execa('git', ['-c', 'init.defaultBranch=master', 'init', '--bare', courseOriginDir], {\n    cwd: '.',\n    env: process.env,\n  });\n  await execa('git', ['clone', courseOriginDir, courseLiveDir], {\n    cwd: '.',\n    env: process.env,\n  });\n  await fs.copy(courseTemplateDir, courseLiveDir, { overwrite: false });\n  await execa('git', ['add', '-A'], {\n    cwd: courseLiveDir,\n    env: process.env,\n  });\n  await execa('git', ['commit', '-m', 'initial commit'], {\n    cwd: courseLiveDir,\n    env: process.env,\n  });\n  await execa('git', ['push'], {\n    cwd: courseLiveDir,\n    env: process.env,\n  });\n  await execa('git', ['clone', courseOriginDir, courseDevDir], {\n    cwd: '.',\n    env: process.env,\n  });\n}\n\nasync function deleteCourseFiles() {\n  await fs.remove(courseOriginDir);\n  await fs.remove(courseLiveDir);\n  await fs.remove(courseDevDir);\n}\n"]}