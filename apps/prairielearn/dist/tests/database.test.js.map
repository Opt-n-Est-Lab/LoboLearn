{"version":3,"file":"database.test.js","sourceRoot":"","sources":["../../src/tests/database.test.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAElC,OAAO,CAAC,MAAM,QAAQ,CAAC;AAEvB,OAAO,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AAE1F,OAAO,EAAE,oBAAoB,EAAE,MAAM,iBAAiB,CAAC;AAEvD,OAAO,KAAK,QAAQ,MAAM,eAAe,CAAC;AAE1C,4EAA4E;AAC5E,MAAM,aAAc,SAAQ,KAAK;IAC/B,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,GAAG,eAAe,CAAC;IAC9B,CAAC;CACF;AAED,QAAQ,CAAC,UAAU,EAAE;IACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEpB,MAAM,CAAC,yBAAyB,EAAE,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC7D,KAAK,CAAC,4BAA4B,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IAEpD,EAAE,CAAC,kDAAkD,EAAE,KAAK;QAC1D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpB,MAAM,OAAO,GAAG;YACd,YAAY,EAAE,QAAQ;YACtB,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK;SACpC,CAAC;QACF,MAAM,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,UAAU,CAAC,CAAC;QACnE,MAAM,MAAM,GAAG,QAAQ,CAAC,+BAA+B,EAAE,CAAC;QAC1D,MAAM,IAAI,GAAG,MAAM,wBAAwB,CAAC,WAAW,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;QAC1E,IAAI,IAAI,EAAE,CAAC;YACT,MAAM,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;QAChC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4FAA4F,EAAE,KAAK;QACpG;;;;;;;;;;;WAWG;QACH,MAAM,MAAM,GAAG,QAAQ,CAAC,+BAA+B,EAAE,CAAC;QAC1D,MAAM,IAAI,GAAG,MAAM,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAE5C,MAAM,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAC3F,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,YAAY,CAAC,CAC1E,CAAC;QAEF,KAAK,MAAM,KAAK,IAAI,gBAAgB,EAAE,CAAC;YACrC,KAAK,MAAM,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,qBAAqB,EAAE,CAAC;gBAClE,MAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,KAAK,CAChC,0EAA0E,CAC3E,CAAC;gBACF,IAAI,CAAC,KAAK,EAAE,CAAC;oBACX,MAAM,IAAI,KAAK,CAAC,mCAAmC,KAAK,KAAK,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;gBACjF,CAAC;gBACD,MAAM,CAAC,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,CAAC,GAAG,KAAK,CAAC;gBACpD,IAAI,YAAY,KAAK,SAAS,IAAI,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;oBACxE,MAAM,IAAI,KAAK,CACb,sBAAsB,KAAK,wCAAwC,OAAO,2BAA2B,UAAU,GAAG,CACnH,CAAC;gBACJ,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import * as path from 'node:path';\n\nimport _ from 'lodash';\n\nimport { describeDatabase, diffDirectoryAndDatabase } from '@prairielearn/postgres-tools';\n\nimport { REPOSITORY_ROOT_PATH } from '../lib/paths.js';\n\nimport * as helperDb from './helperDb.js';\n\n// Custom error type so we can display our own message and omit a stacktrace\nclass DatabaseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DatabaseError';\n  }\n}\n\ndescribe('database', function () {\n  this.timeout(20000);\n\n  before('set up testing database', helperDb.beforeOnlyCreate);\n  after('tear down testing database', helperDb.after);\n\n  it('should match the database described in /database', async function () {\n    this.timeout(20000);\n    const options = {\n      outputFormat: 'string',\n      coloredOutput: process.stdout.isTTY,\n    };\n    const dbDirectory = path.resolve(REPOSITORY_ROOT_PATH, 'database');\n    const dbName = helperDb.getDatabaseNameForCurrentWorker();\n    const diff = await diffDirectoryAndDatabase(dbDirectory, dbName, options);\n    if (diff) {\n      throw new DatabaseError(diff);\n    }\n  });\n\n  it('should not contain \"ON DELETE CASCADE\" foreign keys from soft-delete to hard-delete tables', async function () {\n    /*\n     * The bad case is:\n     * - Table A should only be soft-deleted (that is, it has a `deleted_at` column)\n     * - Table B will be hard-deleted (does not have a `deleted_at` column)\n     * - Foreign key from A to B, with ON DELETE CASCADE\n     *\n     * The problem occurs when we delete a row in table B. This\n     * then automatically deletes the row in A, even though we\n     * wanted to have the row in A be soft-deleted.\n     *\n     * See https://github.com/PrairieLearn/PrairieLearn/issues/2256 for a bug caused by this problem.\n     */\n    const dbName = helperDb.getDatabaseNameForCurrentWorker();\n    const data = await describeDatabase(dbName);\n\n    const [softDeleteTables, hardDeleteTables] = _.partition(Object.keys(data.tables), (table) =>\n      data.tables[table].columns.some((column) => column.name === 'deleted_at'),\n    );\n\n    for (const table of softDeleteTables) {\n      for (const constraint of data.tables[table].foreignKeyConstraints) {\n        const match = constraint.def.match(\n          /^FOREIGN KEY \\((.*)\\) REFERENCES (.*)\\(.*\\) ON UPDATE .* ON DELETE (.*)$/,\n        );\n        if (!match) {\n          throw new Error(`Failed to match foreign key for ${table}: ${constraint.def}`);\n        }\n        const [, keyName, otherTable, deleteAction] = match;\n        if (deleteAction === 'CASCADE' && hardDeleteTables.includes(otherTable)) {\n          throw new Error(\n            `Soft-delete table \"${table}\" has ON DELETE CASCADE foreign key \"${keyName}\" to hard-delete table \"${otherTable}\"`,\n          );\n        }\n      }\n    }\n  });\n});\n"]}