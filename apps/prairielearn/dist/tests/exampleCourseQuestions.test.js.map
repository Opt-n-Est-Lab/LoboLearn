{"version":3,"file":"exampleCourseQuestions.test.js","sourceRoot":"","sources":["../../src/tests/exampleCourseQuestions.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'node:fs/promises';\nimport * as path from 'node:path';\n\nimport fg from 'fast-glob';\n\nimport { config } from '../lib/config.js';\nimport { EXAMPLE_COURSE_PATH } from '../lib/paths.js';\n\nimport * as helperQuestion from './helperQuestion.js';\nimport * as helperServer from './helperServer.js';\n\nconst locals: Record<string, any> = {};\n\nlocals.siteUrl = 'http://localhost:' + config.serverPort;\nlocals.baseUrl = locals.siteUrl + '/pl';\nlocals.courseInstanceBaseUrl = locals.baseUrl + '/course_instance/1/instructor';\nlocals.questionBaseUrl = locals.courseInstanceBaseUrl + '/question';\nlocals.questionPreviewTabUrl = '/preview';\nlocals.questionsUrl = locals.courseInstanceBaseUrl + '/questions';\nlocals.isStudentPage = false;\n\nconst qidsExampleCourse = [\n  'demo/calculation',\n  'demo/custom/element',\n  'demo/custom/gradeFunction',\n  'demo/fixedCheckbox',\n  'demo/matrixAlgebra',\n  'demo/matrixComplexAlgebra',\n  'demo/proofBlocks',\n  'demo/randomCheckbox',\n  'demo/randomDataFrame',\n  'demo/randomFakeData',\n  'demo/randomMultipleChoice',\n  'demo/randomPlot',\n  'element/bigOInput',\n  'element/checkbox',\n  'element/code',\n  'element/fileDownload',\n  'element/graph',\n  'element/integerInput',\n  'element/markdown',\n  'element/matrixComponentInput',\n  'element/matrixLatex',\n  'element/multipleChoice',\n  'element/numberInput',\n  'element/orderBlocks',\n  'element/panels',\n  'element/pythonVariable',\n  'element/stringInput',\n  'element/symbolicInput',\n  'element/unitsInput',\n  'element/variableOutput',\n];\n\n// We hold all template questions to a high standard, so we will always test them all.\nconst templateQuestionQids: string[] = fg\n  .globSync('template/**/info.json', {\n    cwd: path.join(EXAMPLE_COURSE_PATH, 'questions'),\n  })\n  .map((p) => path.dirname(p));\n\ndescribe('Auto-test questions in exampleCourse', () => {\n  it('has correct topic for all template questions', async () => {\n    const questionsWithIncorrectTopics: string[] = [];\n    for (const qid of templateQuestionQids) {\n      const jsonPath = path.join(EXAMPLE_COURSE_PATH, 'questions', qid, 'info.json');\n      const json = JSON.parse(await fs.readFile(jsonPath, 'utf-8'));\n      if (json.topic !== 'Template') {\n        questionsWithIncorrectTopics.push(qid);\n      }\n    }\n    if (questionsWithIncorrectTopics.length) {\n      const qids = questionsWithIncorrectTopics.map((qid) => `\"${qid}\"`).join(', ');\n      throw new Error(`The following template questions have incorrect topics: ${qids}`);\n    }\n  });\n\n  describe('Auto-test questions in exampleCourse', function () {\n    this.timeout(60000);\n\n    before('set up testing server', helperServer.before(EXAMPLE_COURSE_PATH));\n    after('shut down testing server', helperServer.after);\n\n    [...qidsExampleCourse, ...templateQuestionQids].forEach((qid) =>\n      helperQuestion.autoTestQuestion(locals, qid),\n    );\n  });\n\n  describe('Auto-test questions in exampleCourse with process-questions-in-server enabled', function () {\n    this.timeout(60000);\n\n    before('set up testing server', helperServer.before(EXAMPLE_COURSE_PATH));\n    after('shut down testing server', helperServer.after);\n\n    const originalProcessQuestionsInServer = config.features['process-questions-in-server'];\n    before('enable process-questions-in-server', () => {\n      config.features['process-questions-in-server'] = true;\n    });\n    after('restore process-questions-in-server', () => {\n      config.features['process-questions-in-server'] = originalProcessQuestionsInServer;\n    });\n\n    // Only test the first 10 questions so that this test doesn't take too long.\n    [...qidsExampleCourse, ...templateQuestionQids]\n      .slice(0, 10)\n      .forEach((qid) => helperQuestion.autoTestQuestion(locals, qid));\n  });\n});\n"]}