{"version":3,"file":"fileEditor.test.js","sourceRoot":"","sources":["../../src/tests/fileEditor.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { readFileSync } from 'node:fs';\nimport http from 'node:http';\nimport nodeUrl from 'node:url';\nimport * as path from 'path';\n\nimport { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport fetch, { FormData } from 'node-fetch';\nimport * as tmp from 'tmp';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport * as b64Util from '../lib/base64-util.js';\nimport { config } from '../lib/config.js';\nimport { EXAMPLE_COURSE_PATH } from '../lib/paths.js';\nimport { encodePath } from '../lib/uri-util.js';\n\nimport * as helperServer from './helperServer.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst locals: Record<string, any> = {};\nlet page, elemList;\n\n// Uses course within tests/testFileEditor\nconst courseTemplateDir = path.join(import.meta.dirname, 'testFileEditor', 'courseTemplate');\n\n// Set up temporary writeable directories for course content\nconst baseDir = tmp.dirSync().name;\nconst courseOriginDir = path.join(baseDir, 'courseOrigin');\nconst courseLiveDir = path.join(baseDir, 'courseLive');\nconst courseDevDir = path.join(baseDir, 'courseDev');\nconst courseDir = courseLiveDir;\n\nconst courseInstancePath = path.join('courseInstances', 'Fa18');\nconst assessmentPath = path.join(courseInstancePath, 'assessments', 'HW1');\nconst infoCoursePath = 'infoCourse.json';\nconst infoCourseInstancePath = path.join(courseInstancePath, 'infoCourseInstance.json');\nconst infoAssessmentPath = path.join(assessmentPath, 'infoAssessment.json');\nconst questionPath = path.join('questions', 'test', 'question');\nconst questionJsonPath = path.join(questionPath, 'info.json');\nconst questionHtmlPath = path.join(questionPath, 'question.html');\nconst questionPythonPath = path.join(questionPath, 'server.py');\n\nconst infoCourseJsonA = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoCoursePath), 'utf-8'),\n);\nconst infoCourseJsonB = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoCoursePath), 'utf-8'),\n);\ninfoCourseJsonB.title = 'Test Course (Renamed)';\nconst infoCourseJsonC = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoCoursePath), 'utf-8'),\n);\ninfoCourseJsonC.title = 'Test Course (Renamed Yet Again)';\n\nconst infoCourseInstanceJsonA = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoCourseInstancePath), 'utf-8'),\n);\nconst infoCourseInstanceJsonB = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoCourseInstancePath), 'utf-8'),\n);\ninfoCourseInstanceJsonB.longName = 'Fall 2019';\nconst infoCourseInstanceJsonC = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoCourseInstancePath), 'utf-8'),\n);\ninfoCourseInstanceJsonC.longName = 'Spring 2020';\n\nconst infoAssessmentJsonA = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoAssessmentPath), 'utf-8'),\n);\nconst infoAssessmentJsonB = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoAssessmentPath), 'utf-8'),\n);\ninfoAssessmentJsonB.title = 'Homework for file editor test (Renamed)';\nconst infoAssessmentJsonC = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, infoAssessmentPath), 'utf-8'),\n);\ninfoAssessmentJsonC.title = 'Homework for file editor test (Renamed Yet Again)';\n\nconst questionJsonA = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, questionJsonPath), 'utf-8'),\n);\nconst questionJsonB = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, questionJsonPath), 'utf-8'),\n);\nquestionJsonB.title = 'Test question (Renamed)';\nconst questionJsonC = JSON.parse(\n  readFileSync(path.join(courseTemplateDir, questionJsonPath), 'utf-8'),\n);\nquestionJsonC.title = 'Test question (Renamed Yet Again)';\n\nconst questionHtmlA = readFileSync(path.join(courseTemplateDir, questionHtmlPath), 'utf-8');\nconst questionHtmlB = questionHtmlA + '\\nAnother line of text.\\n\\n';\nconst questionHtmlC = questionHtmlB + '\\nYet another line of text.\\n\\n';\n\nconst questionPythonA = readFileSync(path.join(courseTemplateDir, questionPythonPath), 'utf-8');\nconst questionPythonB = questionPythonA + '\\n# Comment.\\n\\n';\nconst questionPythonC = questionPythonB + '\\n# Another comment.\\n\\n';\n\nconst siteUrl = 'http://localhost:' + config.serverPort;\nconst baseUrl = siteUrl + '/pl';\nconst courseAdminUrl = baseUrl + '/course/1/course_admin';\nconst courseAdminSettingsUrl = courseAdminUrl + '/settings';\nconst courseAdminEditUrl = courseAdminUrl + `/file_edit/${encodePath(infoCoursePath)}`;\nconst courseInstanceUrl = baseUrl + '/course_instance/1/instructor';\nconst courseInstanceCourseAdminUrl = courseInstanceUrl + '/course_admin';\nconst courseInstanceCourseAdminSettingsUrl = courseInstanceCourseAdminUrl + '/settings';\nconst courseInstanceCourseAdminEditUrl =\n  courseInstanceCourseAdminUrl + `/file_edit/${encodePath(infoCoursePath)}`;\nconst courseInstanceInstanceAdminUrl = courseInstanceUrl + '/instance_admin';\nconst courseInstanceInstanceAdminSettingsUrl = courseInstanceInstanceAdminUrl + '/settings';\nconst courseInstanceInstanceAdminEditUrl =\n  courseInstanceInstanceAdminUrl + `/file_edit/${encodePath(infoCourseInstancePath)}`;\nconst assessmentUrl = courseInstanceUrl + '/assessment/1';\nconst assessmentSettingsUrl = assessmentUrl + '/settings';\nconst assessmentEditUrl = assessmentUrl + `/file_edit/${encodePath(infoAssessmentPath)}`;\nconst courseInstanceQuestionUrl = courseInstanceUrl + '/question/1';\nconst courseInstanceQuestionSettingsUrl = courseInstanceQuestionUrl + '/settings';\nconst courseInstanceQuestionJsonEditUrl =\n  courseInstanceUrl + `/question/1/file_edit/${encodePath(questionJsonPath)}`;\nconst courseInstanceQuestionHtmlEditUrl =\n  courseInstanceUrl + `/question/1/file_edit/${encodePath(questionHtmlPath)}`;\nconst courseInstanceQuestionPythonEditUrl =\n  courseInstanceUrl + `/question/1/file_edit/${encodePath(questionPythonPath)}`;\nconst badPathUrl = assessmentUrl + '/file_edit/' + encodePath('../PrairieLearn/config.json');\nconst gitPathUrl = courseAdminUrl + '/file_edit/' + encodePath('.git/HEAD');\nconst badExampleCoursePathUrl = courseAdminUrl + '/file_edit/' + encodePath('infoCourse.json');\n\nconst findEditUrlData = [\n  {\n    name: 'assessment',\n    selector: '[data-testid=\"edit-assessment-configuration-link\"]',\n    url: assessmentSettingsUrl,\n    expectedEditUrl: assessmentEditUrl,\n  },\n  {\n    name: 'course admin via course instance',\n    selector: '[data-testid=\"edit-course-configuration-link\"]',\n    url: courseInstanceCourseAdminSettingsUrl,\n    expectedEditUrl: courseInstanceCourseAdminEditUrl,\n  },\n  {\n    name: 'course admin',\n    selector: '[data-testid=\"edit-course-configuration-link\"]',\n    url: courseAdminSettingsUrl,\n    expectedEditUrl: courseAdminEditUrl,\n  },\n  {\n    name: 'instance admin',\n    selector: '[data-testid=\"edit-course-instance-configuration-link\"]',\n    url: courseInstanceInstanceAdminSettingsUrl,\n    expectedEditUrl: courseInstanceInstanceAdminEditUrl,\n  },\n  {\n    name: 'question',\n    selector: '[data-testid=\"edit-question-configuration-link\"]',\n    url: courseInstanceQuestionSettingsUrl,\n    expectedEditUrl: courseInstanceQuestionJsonEditUrl,\n  },\n];\n\nconst verifyEditData = [\n  {\n    isJson: true,\n    url: courseAdminEditUrl,\n    path: infoCoursePath,\n    contentsA: jsonToContents(infoCourseJsonA),\n    contentsB: jsonToContents(infoCourseJsonB),\n    contentsC: jsonToContents(infoCourseJsonC),\n    contentsX: 'garbage',\n  },\n  {\n    isJson: true,\n    url: courseInstanceInstanceAdminEditUrl,\n    path: infoCourseInstancePath,\n    contentsA: jsonToContents(infoCourseInstanceJsonA),\n    contentsB: jsonToContents(infoCourseInstanceJsonB),\n    contentsC: jsonToContents(infoCourseInstanceJsonC),\n    contentsX: 'garbage',\n  },\n  {\n    isJson: true,\n    url: assessmentEditUrl,\n    path: infoAssessmentPath,\n    contentsA: jsonToContents(infoAssessmentJsonA),\n    contentsB: jsonToContents(infoAssessmentJsonB),\n    contentsC: jsonToContents(infoAssessmentJsonC),\n    contentsX: 'garbage',\n  },\n  {\n    isJson: true,\n    url: courseInstanceQuestionJsonEditUrl,\n    path: questionJsonPath,\n    contentsA: jsonToContents(questionJsonA),\n    contentsB: jsonToContents(questionJsonB),\n    contentsC: jsonToContents(questionJsonC),\n    contentsX: 'garbage',\n  },\n  {\n    isJson: false,\n    url: courseInstanceQuestionHtmlEditUrl,\n    path: questionHtmlPath,\n    contentsA: questionHtmlA,\n    contentsB: questionHtmlB,\n    contentsC: questionHtmlC,\n    contentsX: 'garbage',\n  },\n  {\n    isJson: false,\n    url: courseInstanceQuestionPythonEditUrl,\n    path: questionPythonPath,\n    contentsA: questionPythonA,\n    contentsB: questionPythonB,\n    contentsC: questionPythonC,\n    contentsX: 'garbage',\n  },\n];\n\nconst verifyFileData = [\n  {\n    title: 'question',\n    url: courseInstanceQuestionUrl + '/file_view',\n    path: questionPath,\n    clientFilesDir: 'clientFilesQuestion',\n    testFilesDir: 'tests',\n  },\n  {\n    title: 'assessment',\n    url: assessmentUrl + '/file_view',\n    path: assessmentPath,\n    clientFilesDir: 'clientFilesAssessment',\n  },\n  {\n    title: 'course instance',\n    url: courseInstanceInstanceAdminUrl + '/file_view',\n    path: courseInstancePath,\n    clientFilesDir: 'clientFilesCourseInstance',\n  },\n  {\n    title: 'course (through course instance)',\n    url: courseInstanceCourseAdminUrl + '/file_view',\n    path: '',\n    clientFilesDir: 'clientFilesCourse',\n    serverFilesDir: 'serverFilesCourse',\n  },\n  {\n    title: 'course',\n    url: courseAdminUrl + '/file_view',\n    path: '',\n    clientFilesDir: 'clientFilesCourse',\n    serverFilesDir: 'serverFilesCourse',\n  },\n];\n\ndescribe('test file editor', function () {\n  this.timeout(20000);\n\n  describe('not the test course', function () {\n    before('create test course files', async () => {\n      await createCourseFiles();\n    });\n\n    before('set up testing server', helperServer.before(courseDir));\n\n    before('update course repository in database', async () => {\n      await sqldb.queryAsync(sql.update_course_repository, {\n        course_path: courseLiveDir,\n        course_repository: courseOriginDir,\n      });\n    });\n\n    after('shut down testing server', helperServer.after);\n\n    after('delete test course files', async () => {\n      await deleteCourseFiles();\n    });\n\n    describe('the locals object', function () {\n      it('should be cleared', function () {\n        for (const prop in locals) {\n          delete locals[prop];\n        }\n      });\n    });\n\n    describe('verify existence of edit links', function () {\n      findEditUrlData.forEach((element) => {\n        findEditUrl(element.name, element.selector, element.url, element.expectedEditUrl);\n      });\n    });\n\n    describe('verify edits', function () {\n      verifyEditData.forEach((element) => {\n        doEdits(element);\n      });\n    });\n\n    describe('disallow edits outside course directory', function () {\n      badGet(badPathUrl, 500, false);\n    });\n\n    describe('disallow edits in .git directory', function () {\n      badGet(gitPathUrl, 500, false);\n    });\n\n    describe('verify file handlers', function () {\n      verifyFileData.forEach((element) => {\n        doFiles(element);\n      });\n    });\n  });\n\n  describe('the exampleCourse', function () {\n    before('set up testing server', helperServer.before(EXAMPLE_COURSE_PATH));\n\n    after('shut down testing server', helperServer.after);\n\n    describe('disallow edits inside exampleCourse', function () {\n      badGet(badExampleCoursePathUrl, 403, true);\n    });\n  });\n});\n\nfunction badGet(url, expected_status, should_parse) {\n  describe('GET to edit url with bad path', function () {\n    it(`should load with status ${expected_status}`, async () => {\n      // `fetch()` pre-normalizes the URL, which means we can't use it to test\n      // path traversal attacks. In this specific case, we'll use `http.request()`\n      // directly to avoid this normalization.\n      const res = await new Promise<{ status: number; text: () => Promise<string> }>(\n        (resolve, reject) => {\n          // We deliberately use the deprecated `node:url#parse()` instead of\n          // `new URL()` to avoid path normalization.\n          const parsedUrl = nodeUrl.parse(url);\n          const req = http.request(\n            {\n              hostname: 'localhost',\n              port: config.serverPort,\n              path: parsedUrl.path,\n              method: 'GET',\n            },\n            (res) => {\n              let data = '';\n\n              res.on('data', (chunk) => {\n                data += chunk;\n              });\n\n              res.on('end', () => {\n                resolve({\n                  status: res.statusCode ?? 500,\n                  text: () => Promise.resolve(data),\n                });\n              });\n            },\n          );\n\n          req.on('error', (err) => {\n            reject(err);\n          });\n\n          req.end();\n        },\n      );\n\n      assert.equal(res.status, expected_status);\n      page = await res.text();\n    });\n    if (should_parse) {\n      it('should parse', function () {\n        locals.$ = cheerio.load(page);\n      });\n      it('should not have an editor-form', function () {\n        elemList = locals.$('form[name=\"editor-form\"]');\n        assert.lengthOf(elemList, 0);\n      });\n    }\n  });\n}\n\nasync function createCourseFiles() {\n  await deleteCourseFiles();\n  // Ensure that the default branch is master, regardless of how git\n  // is configured on the host machine.\n  await execa('git', ['-c', 'init.defaultBranch=master', 'init', '--bare', courseOriginDir], {\n    cwd: '.',\n    env: process.env,\n  });\n  await execa('git', ['clone', courseOriginDir, courseLiveDir], {\n    cwd: '.',\n    env: process.env,\n  });\n  await fs.copy(courseTemplateDir, courseLiveDir, { overwrite: false });\n  await execa('git', ['add', '-A'], {\n    cwd: courseLiveDir,\n    env: process.env,\n  });\n  await execa('git', ['commit', '-m', 'initial commit'], {\n    cwd: courseLiveDir,\n    env: process.env,\n  });\n  await execa('git', ['push'], {\n    cwd: courseLiveDir,\n    env: process.env,\n  });\n  await execa('git', ['clone', courseOriginDir, courseDevDir], {\n    cwd: '.',\n    env: process.env,\n  });\n}\n\nasync function deleteCourseFiles() {\n  await fs.remove(courseOriginDir);\n  await fs.remove(courseLiveDir);\n  await fs.remove(courseDevDir);\n}\n\nfunction editPost(\n  action,\n  fileEditContents,\n  url,\n  expectedToFindResults,\n  expectedToFindChoice,\n  expectedDiskContents,\n) {\n  describe(`POST to edit url with action ${action}`, function () {\n    it('should load successfully', async () => {\n      const res = await fetch(url, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: action,\n          __csrf_token: locals.__csrf_token,\n          file_edit_contents: b64Util.b64EncodeUnicode(fileEditContents),\n          file_edit_orig_hash: locals.file_edit_orig_hash,\n        }),\n      });\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    if (action === 'save_and_sync') {\n      verifyEdit(\n        expectedToFindResults,\n        expectedToFindChoice,\n        fileEditContents,\n        expectedDiskContents,\n      );\n    }\n  });\n}\n\nfunction jsonToContents(json) {\n  return JSON.stringify(json, null, 4) + '\\n';\n}\n\nfunction findEditUrl(name, selector, url, expectedEditUrl) {\n  describe(`GET to ${name}`, function () {\n    it('should load successfully', async () => {\n      const res = await fetch(url);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    it(`should contain edit link at ${selector}`, function () {\n      elemList = locals.$(selector);\n      assert.lengthOf(elemList, 1);\n    });\n    it('should match expected url in edit link', function () {\n      assert.equal(siteUrl + elemList[0].attribs.href, expectedEditUrl);\n    });\n  });\n}\n\nfunction verifyEdit(\n  expectedToFindResults,\n  expectedToFindChoice,\n  expectedDraftContents,\n  expectedDiskContents,\n) {\n  it('should have a CSRF token', function () {\n    elemList = locals.$('form[name=\"editor-form\"] input[name=\"__csrf_token\"]');\n    assert.lengthOf(elemList, 1);\n    assert.nestedProperty(elemList[0], 'attribs.value');\n    locals.__csrf_token = elemList[0].attribs.value;\n    assert.isString(locals.__csrf_token);\n  });\n  it('should have a file_edit_orig_hash', function () {\n    elemList = locals.$('form[name=\"editor-form\"] input[name=\"file_edit_orig_hash\"]');\n    assert.lengthOf(elemList, 1);\n    assert.nestedProperty(elemList[0], 'attribs.value');\n    locals.file_edit_orig_hash = elemList[0].attribs.value;\n    assert.isString(locals.file_edit_orig_hash);\n  });\n  it('editor element should match expected draft file contents', function () {\n    const editor = locals.$('#file-editor-draft');\n    assert.lengthOf(editor, 1);\n    const fileContents = b64Util.b64DecodeUnicode(editor.data('contents'));\n    assert.strictEqual(fileContents, expectedDraftContents);\n  });\n  it(`should have results of save and sync - ${expectedToFindResults}`, function () {\n    elemList = locals.$('form[name=\"editor-form\"] #job-sequence-results');\n    if (expectedToFindResults) {\n      assert.lengthOf(elemList, 1);\n    } else {\n      assert.lengthOf(elemList, 0);\n    }\n  });\n  it(`should ${expectedToFindChoice ? '' : 'not '}have an editor with disk file contents`, function () {\n    const editor = locals.$('#file-editor-disk');\n    if (expectedToFindChoice) {\n      assert.lengthOf(editor, 1);\n      const fileContents = b64Util.b64DecodeUnicode(editor.data('contents'));\n      assert.strictEqual(fileContents, expectedDiskContents);\n    } else {\n      assert.lengthOf(editor, 0);\n    }\n  });\n}\n\nfunction editGet(\n  url,\n  expectedToFindResults,\n  expectedToFindChoice,\n  expectedDraftContents,\n  expectedDiskContents,\n) {\n  describe('GET to edit url', function () {\n    it('should load successfully', async () => {\n      const res = await fetch(url);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    verifyEdit(\n      expectedToFindResults,\n      expectedToFindChoice,\n      expectedDraftContents,\n      expectedDiskContents,\n    );\n  });\n}\n\nfunction doEdits(data) {\n  describe(`edit ${data.path}`, function () {\n    // \"live\" is a clone of origin (this is what's on the production server)\n    // \"dev\" is a clone of origin (this is what's on someone's laptop)\n    // \"origin\" is the bare git repo\n    //\n    // in LIVE\n    // - writeAndCommitFileInLive does git commit\n    // - pullInLive does git pull\n    // in DEV\n    // - pullAndVerifyFileInDev does git pull\n    // - writeAndPushFileInDev does git push\n    //\n    // Remember that \"origHash\" has whatever was on disk at last GET.\n    //\n    // The below tests are annotated with state of the file under test in\n    // several locations:\n    //\n    // (live at last GET, live, dev, origin)\n    //\n    // Note that \"live at last GET\" refers to the fact that GET responses\n    // include the hash of the file on disk at the time of the GET, which\n    // is used to detect concurrent modifications. `editGet` and `editPost`\n    // store this hash in `locals` and include it in subsequent `POST` requests.\n\n    editGet(data.url, false, false, data.contentsA, null);\n    // (A, A, A, A)\n\n    editPost('save_and_sync', data.contentsB, data.url, true, false, null);\n    waitForJobSequence(locals, 'Success');\n    // (B, B, A, B)\n\n    pullAndVerifyFileInDev(data.path, data.contentsB);\n    // (B, B, B, B)\n\n    editGet(data.url, false, false, data.contentsB, null);\n    // (B, B, B, B)\n\n    writeAndCommitFileInLive(data.path, data.contentsA);\n    // (B, A, B, B)\n\n    editGet(data.url, false, false, data.contentsA, null);\n    // (A, A, B, B)\n\n    writeAndCommitFileInLive(data.path, data.contentsB);\n    // (A, B, B, B)\n\n    editPost('save_and_sync', data.contentsC, data.url, true, true, data.contentsB);\n    waitForJobSequence(locals, 'Error');\n    // (B, B, B, B)\n\n    pullAndVerifyFileInDev(data.path, data.contentsB);\n    // (B, B, B, B)\n\n    editGet(data.url, false, false, data.contentsB, null);\n    // (B, B, B, B)\n\n    editPost('save_and_sync', data.contentsA, data.url, true, false, null);\n    waitForJobSequence(locals, 'Success');\n    // (A, A, B, A)\n\n    pullAndVerifyFileInDev(data.path, data.contentsA);\n    // (A, A, A, A)\n\n    writeAndPushFileInDev('README.md', `New readme to test edit of ${data.path}`);\n    // (A, A, A*, A*)\n\n    editGet(data.url, false, false, data.contentsA, null);\n    // (A, A, A*, A*)\n\n    editPost('save_and_sync', data.contentsC, data.url, true, false, null);\n    waitForJobSequence(locals, 'Success');\n    // (C, C, A*, C)\n\n    pullAndVerifyFileInDev(data.path, data.contentsC);\n    // (C, C, C, C)\n\n    writeAndPushFileInDev('README.md', `Another new readme to test edit of ${data.path}`);\n    // (C, C, C*, C*)\n\n    editGet(data.url, false, false, data.contentsC, null);\n    // (C, C, C*, C*)\n\n    editPost('save_and_sync', data.contentsB, data.url, true, false, null);\n    waitForJobSequence(locals, 'Success');\n    // (B, B, C*, B)\n\n    editPost('save_and_sync', data.contentsA, data.url, true, false, null);\n    waitForJobSequence(locals, 'Success');\n    // (A, A, C*, A)\n\n    editPost('save_and_sync', data.contentsB, data.url, true, false, null);\n    waitForJobSequence(locals, 'Success');\n    // (B, B, C*, B)\n\n    if (data.isJson) {\n      editPost('save_and_sync', data.contentsX, data.url, true, false, null);\n      waitForJobSequence(locals, 'Error');\n      // (X, X, C*, X) <- successful push but failed sync because of bad json\n\n      pullAndVerifyFileInDev(data.path, data.contentsX);\n      // (X, X, X, X)\n\n      editPost('save_and_sync', data.contentsA, data.url, true, false, null);\n      waitForJobSequence(locals, 'Success');\n      // (A, A, X, A)\n\n      pullAndVerifyFileInDev(data.path, data.contentsA);\n      // (A, A, A, A)\n    }\n  });\n}\n\nfunction writeAndCommitFileInLive(fileName, fileContents) {\n  describe(`commit a change to ${fileName} by exec`, function () {\n    it('should write', async () => {\n      await fs.writeFile(path.join(courseLiveDir, fileName), fileContents);\n    });\n    it('should add', async () => {\n      await execa('git', ['add', '-A'], {\n        cwd: courseLiveDir,\n        env: process.env,\n      });\n    });\n    it('should commit', async () => {\n      await execa('git', ['commit', '-m', 'commit from writeFile'], {\n        cwd: courseLiveDir,\n        env: process.env,\n      });\n    });\n  });\n}\n\nfunction pullAndVerifyFileInDev(fileName, fileContents) {\n  describe(`pull in dev and verify contents of ${fileName}`, function () {\n    it('should pull', async () => {\n      await execa('git', ['pull'], {\n        cwd: courseDevDir,\n        env: process.env,\n      });\n    });\n    it('should match contents', function () {\n      assert.strictEqual(readFileSync(path.join(courseDevDir, fileName), 'utf-8'), fileContents);\n    });\n  });\n}\n\nfunction pullAndVerifyFileNotInDev(fileName) {\n  describe(`pull in dev and verify ${fileName} does not exist`, function () {\n    it('should pull', async () => {\n      await execa('git', ['pull'], {\n        cwd: courseDevDir,\n        env: process.env,\n      });\n    });\n    it('should not exist', function (callback) {\n      fs.access(path.join(courseDevDir, fileName), (err) => {\n        if (err) {\n          if (err.code === 'ENOENT') callback(null);\n          else callback(new Error(`got wrong error: ${err}`));\n        } else {\n          callback(new Error(`${fileName} should not exist, but does`));\n        }\n      });\n    });\n  });\n}\n\nfunction writeAndPushFileInDev(fileName, fileContents) {\n  describe(`write ${fileName} in courseDev and push to courseOrigin`, function () {\n    it('should write', async () => {\n      await fs.writeFile(path.join(courseDevDir, fileName), fileContents);\n    });\n    it('should add', async () => {\n      await execa('git', ['add', '-A'], {\n        cwd: courseDevDir,\n        env: process.env,\n      });\n    });\n    it('should commit', async () => {\n      await execa('git', ['commit', '-m', 'commit from writeFile'], {\n        cwd: courseDevDir,\n        env: process.env,\n      });\n    });\n    it('should push', async () => {\n      await execa('git', ['push'], {\n        cwd: courseDevDir,\n        env: process.env,\n      });\n    });\n  });\n}\n\nfunction waitForJobSequence(locals, expectedResult: 'Success' | 'Error') {\n  describe('The job sequence', function () {\n    it('should have an id', async () => {\n      const result = await sqldb.queryOneRowAsync(sql.select_last_job_sequence, []);\n      locals.job_sequence_id = result.rows[0].id;\n    });\n    it('should complete', async () => {\n      await helperServer.waitForJobSequenceStatus(locals.job_sequence_id, expectedResult);\n    });\n  });\n}\n\nfunction doFiles(data: {\n  title: string;\n  url: string;\n  path: string;\n  clientFilesDir: string;\n  serverFilesDir?: string;\n  testFilesDir?: string;\n}) {\n  describe(`test file handlers for ${data.title}`, function () {\n    describe('Files', function () {\n      testUploadFile({\n        fileViewBaseUrl: data.url,\n        url: data.url,\n        path: path.join(data.path, 'testfile.txt'),\n        newButtonId: 'New',\n        contents: 'This is a line of text.',\n        filename: 'testfile.txt',\n      });\n\n      testUploadFile({\n        fileViewBaseUrl: data.url,\n        url: data.url,\n        path: path.join(data.path, 'testfile.txt'),\n        contents: 'This is a different line of text.',\n        filename: 'anotherfile.txt',\n      });\n\n      testRenameFile({\n        url: data.url,\n        path: path.join(data.path, 'subdir', 'testfile.txt'),\n        contents: 'This is a different line of text.',\n        new_file_name: path.join('subdir', 'testfile.txt'),\n      });\n\n      testDeleteFile({\n        url: data.url + '/' + encodePath(path.join(data.path, 'subdir')),\n        path: path.join(data.path, 'subdir', 'testfile.txt'),\n      });\n    });\n    describe('Client Files', function () {\n      testUploadFile({\n        fileViewBaseUrl: data.url,\n        url: data.url,\n        path: path.join(data.path, data.clientFilesDir, 'testfile.txt'),\n        newButtonId: 'NewClient',\n        contents: 'This is a line of text.',\n        filename: 'testfile.txt',\n      });\n\n      testUploadFile({\n        fileViewBaseUrl: data.url,\n        url: data.url + '/' + encodePath(path.join(data.path, data.clientFilesDir)),\n        path: path.join(data.path, data.clientFilesDir, 'testfile.txt'),\n        contents: 'This is a different line of text.',\n        filename: 'anotherfile.txt',\n      });\n\n      testRenameFile({\n        url: data.url + '/' + encodePath(path.join(data.path, data.clientFilesDir)),\n        path: path.join(data.path, data.clientFilesDir, 'subdir', 'testfile.txt'),\n        contents: 'This is a different line of text.',\n        new_file_name: path.join('subdir', 'testfile.txt'),\n      });\n\n      testDeleteFile({\n        url: data.url + '/' + encodePath(path.join(data.path, data.clientFilesDir, 'subdir')),\n        path: path.join(data.path, data.clientFilesDir, 'subdir', 'testfile.txt'),\n      });\n    });\n    describe('Server Files', function () {\n      if (data.serverFilesDir) {\n        testUploadFile({\n          fileViewBaseUrl: data.url,\n          url: data.url,\n          path: path.join(data.path, data.serverFilesDir, 'testfile.txt'),\n          newButtonId: 'NewServer',\n          contents: 'This is a line of text.',\n          filename: 'testfile.txt',\n        });\n\n        testUploadFile({\n          fileViewBaseUrl: data.url,\n          url: data.url + '/' + encodePath(path.join(data.path, data.serverFilesDir)),\n          path: path.join(data.path, data.serverFilesDir, 'testfile.txt'),\n          contents: 'This is a different line of text.',\n          filename: 'anotherfile.txt',\n        });\n\n        testRenameFile({\n          url: data.url + '/' + encodePath(path.join(data.path, data.serverFilesDir)),\n          path: path.join(data.path, data.serverFilesDir, 'subdir', 'testfile.txt'),\n          contents: 'This is a different line of text.',\n          new_file_name: path.join('subdir', 'testfile.txt'),\n        });\n\n        testDeleteFile({\n          url: data.url + '/' + encodePath(path.join(data.path, data.serverFilesDir, 'subdir')),\n          path: path.join(data.path, data.serverFilesDir, 'subdir', 'testfile.txt'),\n        });\n      }\n    });\n    if (data.testFilesDir) {\n      describe('Test Files', function () {\n        if (data.testFilesDir) {\n          testUploadFile({\n            fileViewBaseUrl: data.url,\n            url: data.url,\n            path: path.join(data.path, data.testFilesDir, 'testfile.txt'),\n            newButtonId: 'NewTest',\n            contents: 'This is a line of text.',\n            filename: 'testfile.txt',\n          });\n\n          testUploadFile({\n            fileViewBaseUrl: data.url,\n            url: data.url + '/' + encodePath(path.join(data.path, data.testFilesDir)),\n            path: path.join(data.path, data.testFilesDir, 'testfile.txt'),\n            contents: 'This is a different line of text.',\n            filename: 'anotherfile.txt',\n          });\n\n          testRenameFile({\n            url: data.url + '/' + encodePath(path.join(data.path, data.testFilesDir)),\n            path: path.join(data.path, data.testFilesDir, 'subdir', 'testfile.txt'),\n            contents: 'This is a different line of text.',\n            new_file_name: path.join('subdir', 'testfile.txt'),\n          });\n\n          testDeleteFile({\n            url: data.url + '/' + encodePath(path.join(data.path, data.testFilesDir, 'subdir')),\n            path: path.join(data.path, data.testFilesDir, 'subdir', 'testfile.txt'),\n          });\n        }\n      });\n    }\n    describe('Files with % in name', function () {\n      testUploadFile({\n        fileViewBaseUrl: data.url,\n        url: data.url,\n        path: path.join(data.path, 'test%file.txt'),\n        newButtonId: 'New',\n        contents: 'This is a line of text in a file with percent.',\n        filename: 'test%file.txt',\n      });\n\n      testUploadFile({\n        fileViewBaseUrl: data.url,\n        url: data.url,\n        path: path.join(data.path, 'test%file.txt'),\n        contents: 'This is a different line of text in a file with percent.',\n        filename: 'test%file.txt',\n      });\n\n      // TODO Rename currently has very restrictive naming conventions that\n      // don't allow for this kind of name. Once this is removed it should be\n      // possible to enable the test below.\n\n      // testRenameFile({\n      //   url: data.url,\n      //   path: path.join(data.path, 'sub%dir', 'test%file.txt'),\n      //   contents: 'This is a line of text in a file with percent.',\n      //   new_file_name: path.join('sub%dir', 'test%file.txt'),\n      // });\n\n      testDeleteFile({\n        url: data.url + '/' + encodePath(data.path),\n        path: path.join(data.path, 'test%file.txt'),\n      });\n    });\n  });\n}\n\nfunction testUploadFile(params: {\n  fileViewBaseUrl: string;\n  url: string;\n  path: string;\n  newButtonId?: string;\n  contents: string;\n  filename: string;\n}) {\n  describe(`GET to ${params.url}`, () => {\n    it('should load successfully', async () => {\n      const res = await fetch(params.url);\n      assert.isOk(res.ok);\n      locals.$ = cheerio.load(await res.text());\n    });\n    it('should have a CSRF token and either a file_path or a working_path', () => {\n      if (params.newButtonId) {\n        elemList = locals.$(`button[id=\"instructorFileUploadForm-${params.newButtonId}\"]`);\n      } else {\n        const row = locals.$(`tr:has(a:contains(\"${params.path.split('/').pop()}\"))`);\n        elemList = row.find('button[id^=\"instructorFileUploadForm-\"]');\n      }\n      assert.lengthOf(elemList, 1);\n      const $ = cheerio.load(elemList[0].attribs['data-bs-content']);\n      // __csrf_token\n      elemList = $('input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n      // file_path or working_path\n      if (!params.newButtonId) {\n        elemList = $('input[name=\"file_path\"]');\n        assert.lengthOf(elemList, 1);\n        assert.nestedProperty(elemList[0], 'attribs.value');\n        locals.file_path = elemList[0].attribs.value;\n        locals.working_path = undefined;\n      } else {\n        elemList = $('input[name=\"working_path\"]');\n        assert.lengthOf(elemList, 1);\n        assert.nestedProperty(elemList[0], 'attribs.value');\n        locals.working_path = elemList[0].attribs.value;\n        locals.file_path = undefined;\n      }\n    });\n  });\n\n  describe(`POST to ${params.url} with action upload_file`, function () {\n    it('should load successfully', async () => {\n      const formData = new FormData();\n      formData.append('__action', 'upload_file');\n      formData.append('__csrf_token', locals.__csrf_token);\n      formData.append('file', new Blob([Buffer.from(params.contents)]), params.filename);\n\n      if (locals.file_path) {\n        formData.append('file_path', locals.file_path);\n      } else if (locals.working_path) {\n        formData.append('working_path', locals.working_path);\n      } else {\n        assert.fail('found neither file_path nor working_path');\n      }\n\n      const res = await fetch(params.url, { method: 'POST', body: formData });\n      assert.isOk(res.ok);\n      locals.$ = cheerio.load(await res.text());\n    });\n  });\n\n  describe('Uploaded file is available', function () {\n    it('file view should match contents', async () => {\n      const res = await fetch(`${params.fileViewBaseUrl}/${encodePath(params.path)}`);\n      assert.isOk(res.ok);\n      locals.$ = cheerio.load(await res.text());\n      const pre = locals.$('.card-body pre');\n      assert.lengthOf(pre, 1);\n      assert.strictEqual(pre.text(), params.contents);\n    });\n\n    it('file download should match contents', async () => {\n      const downloadUrl = locals.$('.card-header a:contains(\"Download\")').attr('href');\n      const res = await fetch(`${siteUrl}${downloadUrl}`);\n      assert.isOk(res.ok);\n      assert.strictEqual(await res.text(), params.contents);\n    });\n  });\n\n  pullAndVerifyFileInDev(params.path, params.contents);\n}\n\nfunction testRenameFile(params: {\n  url: string;\n  path: string;\n  contents: string;\n  new_file_name: string;\n}) {\n  describe(`GET to ${params.url}`, () => {\n    it('should load successfully', async () => {\n      const res = await fetch(params.url);\n      assert.isOk(res.ok);\n      locals.$ = cheerio.load(await res.text());\n    });\n    it('should have a CSRF token, old_file_name, working_path', () => {\n      const row = locals.$(`tr:has(a:contains(\"${params.path.split('/').pop()}\"))`);\n      elemList = row.find('button[data-testid=\"rename-file-button\"]');\n      assert.lengthOf(elemList, 1);\n      const $ = cheerio.load(elemList[0].attribs['data-bs-content']);\n      // __csrf_token\n      elemList = $('input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n      // old_file_name\n      elemList = $('input[name=\"old_file_name\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.old_file_name = elemList[0].attribs.value;\n      assert.equal(locals.old_file_name, params.path.split('/').pop());\n      // working_path\n      elemList = $('input[name=\"working_path\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.working_path = elemList[0].attribs.value;\n    });\n  });\n\n  describe(`POST to ${params.url} with action rename_file`, function () {\n    it('should load successfully', async () => {\n      const res = await fetch(params.url, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'rename_file',\n          __csrf_token: locals.__csrf_token,\n          working_path: locals.working_path,\n          old_file_name: locals.old_file_name,\n          new_file_name: params.new_file_name,\n        }),\n      });\n      assert.isOk(res.ok);\n      locals.$ = cheerio.load(await res.text());\n    });\n  });\n\n  pullAndVerifyFileInDev(params.path, params.contents);\n}\n\nfunction testDeleteFile(params: { url: string; path: string }) {\n  describe(`GET to ${params.url}`, () => {\n    it('should load successfully', async () => {\n      const res = await fetch(params.url);\n      assert.isOk(res.ok);\n      locals.$ = cheerio.load(await res.text());\n    });\n    it('should have a CSRF token and a file_path', () => {\n      const row = locals.$(`tr:has(a:contains(\"${params.path.split('/').pop()}\"))`);\n      elemList = row.find('button[data-testid=\"delete-file-button\"]');\n      assert.lengthOf(elemList, 1);\n      const $ = cheerio.load(elemList[0].attribs['data-bs-content']);\n      // __csrf_token\n      elemList = $('input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n      // file_path\n      elemList = $('input[name=\"file_path\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.file_path = elemList[0].attribs.value;\n      assert.equal(locals.file_path, params.path);\n    });\n  });\n\n  describe(`POST to ${params.url} with action delete_file`, function () {\n    it('should load successfully', async () => {\n      const res = await fetch(params.url, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'delete_file',\n          __csrf_token: locals.__csrf_token,\n          file_path: locals.file_path,\n        }),\n      });\n      assert.isOk(res.ok);\n    });\n  });\n\n  pullAndVerifyFileNotInDev(params.path);\n}\n"]}