{"version":3,"file":"groupScoreAndSync.test.js","sourceRoot":"","sources":["../../src/tests/groupScoreAndSync.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport _ from 'lodash';\nimport fetch from 'node-fetch';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\nimport { TEST_COURSE_PATH } from '../lib/paths.js';\nimport { generateAndEnrollUsers } from '../models/enrollment.js';\n\nimport * as helperServer from './helperServer.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst locals: Record<string, any> = {};\nlocals.siteUrl = 'http://localhost:' + config.serverPort;\nlocals.baseUrl = locals.siteUrl + '/pl';\nlocals.courseInstanceUrl = locals.baseUrl + '/course_instance/1';\nlocals.courseInstanceBaseUrl = locals.baseUrl + '/course_instance/1';\n\nlet page, elemList;\n\nconst question = [{ qid: 'addNumbers', type: 'Freeform', maxPoints: 5 }];\nconst questions = _.keyBy(question, 'qid');\n\ndescribe('assessment instance group synchronization test', function () {\n  this.timeout(10000);\n\n  const storedConfig: Record<string, any> = {};\n  before('store authenticated user', () => {\n    storedConfig.authUid = config.authUid;\n    storedConfig.authName = config.authName;\n    storedConfig.authUin = config.authUin;\n  });\n  after('unset authenticated user', () => {\n    Object.assign(config, storedConfig);\n  });\n\n  before('set up testing server', helperServer.before(TEST_COURSE_PATH));\n  after('shut down testing server', helperServer.after);\n  describe('1. database initialization', function () {\n    it('get group-based homework assessment id', async () => {\n      const result = await sqldb.queryAsync(sql.select_group_work_assessment, []);\n      assert.notEqual(result.rowCount, 0);\n      assert.notEqual(result.rows[0].id, undefined);\n      locals.assessment_id = result.rows[0].id;\n      locals.assessmentUrl = locals.courseInstanceBaseUrl + '/assessment/' + locals.assessment_id;\n      locals.instructorAssessmentsUrlGroupTab =\n        locals.courseInstanceBaseUrl + '/instructor/assessment/' + result.rows[0].id + '/groups';\n      locals.questionBaseUrl = locals.courseInstanceBaseUrl + '/instance_question';\n      locals.assessmentsUrl = locals.courseInstanceBaseUrl + '/assessments';\n    });\n  });\n  describe('2. GET to instructor assessments URL group tab for the first assessment', function () {\n    it('should load successfully', async () => {\n      const res = await fetch(locals.instructorAssessmentsUrlGroupTab);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 4);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n  });\n  describe('3. user and group initialization', function () {\n    it('create 3 users', async () => {\n      locals.studentUsers = await generateAndEnrollUsers({ count: 3, course_instance_id: '1' });\n      assert.lengthOf(locals.studentUsers, 3);\n      locals.groupCreator = locals.studentUsers[0];\n    });\n    it('put 3 users in a group', async () => {\n      const res = await fetch(locals.instructorAssessmentsUrlGroupTab, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'add_group',\n          __csrf_token: locals.__csrf_token,\n          group_name: 'testgroup',\n          uids:\n            locals.studentUsers[0].uid +\n            ',' +\n            locals.studentUsers[1].uid +\n            ',' +\n            locals.studentUsers[2].uid,\n        }),\n      });\n      assert.equal(res.status, 200);\n    });\n    it('should create the correct group configuration', async () => {\n      const result = await sqldb.queryAsync(sql.select_group_users, {\n        assessment_id: locals.assessment_id,\n        group_name: 'testgroup',\n      });\n      assert.equal(result.rowCount, 3);\n    });\n  });\n\n  describe('4. assessment_instance initialization', function () {\n    it('should be able to switch user we generated', function () {\n      const student = locals.studentUsers[1];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000001';\n    });\n    it('should load assessment page successfully', async () => {\n      const res = await fetch(locals.assessmentUrl);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n\n    it('should be able to start the assessment', async () => {\n      const res = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'new_instance',\n          __csrf_token: locals.__csrf_token,\n        }),\n      });\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should have 1 assessment instance in db', async () => {\n      const result = await sqldb.queryAsync(sql.select_all_assessment_instance, []);\n      assert.lengthOf(result.rows, 1);\n      locals.assessment_instance_id = result.rows[0].id;\n      locals.assessment_instance = result.rows[0];\n      locals.assessmentInstanceUrl =\n        locals.courseInstanceUrl + '/assessment_instance/' + locals.assessment_instance_id;\n      assert.equal(result.rows[0].group_id, 1);\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n  });\n  describe('5. question submission', function () {\n    it('should be able to enter question page', async () => {\n      const questionUrl = locals.$('a:contains(\"HW6.2\")').attr('href');\n      locals.questionUrl = `${locals.siteUrl}${questionUrl}`;\n      const res = await fetch(locals.questionUrl);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a variant_id input', function () {\n      elemList = locals.$('.question-form input[name=\"__variant_id\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.variant_id = elemList[0].attribs.value;\n      locals.variant_id = Number.parseInt(locals.variant_id);\n    });\n    it('should have the variant in the DB if has grade or save button', async () => {\n      const result = await sqldb.queryAsync(sql.select_variant, {\n        variant_id: locals.variant_id,\n      });\n      locals.variant = result.rows[0];\n    });\n    it('should have a CSRF token if has grade or save button', function () {\n      elemList = locals.$('.question-form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    describe('setting up the submission data', function () {\n      locals.postAction = 'grade';\n      locals.question = questions.addNumbers;\n      locals.expectedResult = {\n        submission_score: 1,\n        submission_correct: true,\n        instance_question_points: 1,\n        instance_question_score_perc: (1 / 5) * 100,\n        assessment_instance_points: 1,\n        assessment_instance_score_perc: (1 / 10) * 100,\n      };\n      locals.getSubmittedAnswer = function (variant) {\n        return {\n          F: variant.true_answer.F,\n        };\n      };\n    });\n    it('should generate the submittedAnswer', async () => {\n      locals.submittedAnswer = locals.getSubmittedAnswer(locals.variant);\n      const res = await fetch(locals.questionUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: locals.postAction,\n          __csrf_token: locals.__csrf_token,\n          __variant_id: locals.variant.id,\n          ...locals.submittedAnswer,\n        }),\n      });\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n  });\n  describe('6. check Score for current student', function () {\n    it('should have the submission', async () => {\n      const result = await sqldb.queryAsync(sql.select_last_submission_for_variants, {\n        variant_id: locals.variant.id,\n      });\n      locals.submission = result.rows[0];\n    });\n    it('should be graded with expected score', function () {\n      assert.equal(locals.submission.score, locals.expectedResult.submission_score);\n    });\n    it('should be graded with expected correctness', function () {\n      assert.equal(locals.submission.correct, locals.expectedResult.submission_correct);\n    });\n    it('should still have the assessment_instance', async () => {\n      const result = await sqldb.queryOneRowAsync(sql.select_assessment_instance, {});\n      locals.assessment_instance = result.rows[0];\n    });\n  });\n  describe('7. check Score for another student', function () {\n    it('should be able to switch user we generated', function (callback) {\n      const student = locals.studentUsers[2];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000002';\n      callback(null);\n    });\n    it('should load assessment page successfully', async () => {\n      const res = await fetch(locals.assessmentUrl);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should still have the only assessment instance in db', async () => {\n      const result = await sqldb.queryAsync(sql.select_all_assessment_instance, []);\n      assert.lengthOf(result.rows, 1);\n      assert.equal(result.rows[0].id, locals.assessment_instance_id);\n      locals.assessment_instance = result.rows[0];\n    });\n  });\n});\n"]}