{"version":3,"file":"groupStudent.test.js","sourceRoot":"","sources":["../../src/tests/groupStudent.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport fetchCookie from 'fetch-cookie';\nimport fetch from 'node-fetch';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\nimport { IdSchema } from '../lib/db-types.js';\nimport { TEST_COURSE_PATH } from '../lib/paths.js';\nimport { generateAndEnrollUsers } from '../models/enrollment.js';\n\nimport { assertAlert, fetchCheerio } from './helperClient.js';\nimport * as helperServer from './helperServer.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst locals: Record<string, any> = {};\nlocals.siteUrl = 'http://localhost:' + config.serverPort;\nlocals.baseUrl = locals.siteUrl + '/pl';\nlocals.courseInstanceUrl = locals.baseUrl + '/course_instance/1';\nlocals.assessmentsUrl = locals.courseInstanceUrl + '/assessments';\n\nconst storedConfig: Record<string, any> = {};\n\ndescribe('Group based homework assess control on student side', function () {\n  this.timeout(20000);\n  before('set authenticated user', async () => {\n    storedConfig.authUid = config.authUid;\n    storedConfig.authName = config.authName;\n    storedConfig.authUin = config.authUin;\n  });\n  before('set up testing server', helperServer.before(TEST_COURSE_PATH));\n  after('shut down testing server', helperServer.after);\n  after('unset authenticated user', async () => {\n    Object.assign(config, storedConfig);\n  });\n\n  describe('1. the database', function () {\n    it('should contain a group-based homework assessment', async () => {\n      const assessment_ids = await sqldb.queryRows(sql.select_group_work_assessment, IdSchema);\n      assert.lengthOf(assessment_ids, 2);\n      assert.isDefined(assessment_ids[0]);\n      assert.isDefined(assessment_ids[1]);\n\n      locals.assessment_id = assessment_ids[0];\n      locals.assessmentUrl = locals.courseInstanceUrl + '/assessment/' + locals.assessment_id;\n      locals.instructorAssessmentsUrlGroupTab =\n        locals.courseInstanceUrl + '/instructor/assessment/' + locals.assessment_id + '/groups';\n\n      locals.assessment_id_2 = assessment_ids[1];\n      locals.assessmentUrl_2 = locals.courseInstanceUrl + '/assessment/' + locals.assessment_id_2;\n      locals.instructorAssessmentsUrlGroupTab_2 =\n        locals.courseInstanceUrl + '/instructor/assessment/' + locals.assessment_id_2 + '/groups';\n    });\n  });\n\n  describe('2. GET to instructor assessments URL group tab for the first assessment', function () {\n    it('should load successfully', async () => {\n      const response = await fetch(locals.instructorAssessmentsUrlGroupTab);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 4);\n      // there are 6 occurrences of the same csrf, we will pick the first one\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n  });\n\n  describe('3. Check if the config is correct', function () {\n    it('should create the correct group configuration', async () => {\n      const result = await sqldb.queryOneRowAsync(sql.select_group_config, {\n        assessment_id: locals.assessment_id,\n      });\n      const min = result.rows[0]['minimum'];\n      const max = result.rows[0]['maximum'];\n      assert.equal(min, 3);\n      assert.equal(max, 3);\n    });\n  });\n\n  describe('4. GET to instructor assessments URL group tab for the second assessment', function () {\n    it('should load successfully', async () => {\n      const response = await fetch(locals.instructorAssessmentsUrlGroupTab_2);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 4);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n  });\n\n  describe('5. Check if the config is correct', function () {\n    it('should create the correct group configuration', async () => {\n      const result = await sqldb.queryOneRowAsync(sql.select_group_config, {\n        assessment_id: locals.assessment_id_2,\n      });\n      const min = result.rows[0]['minimum'];\n      const max = result.rows[0]['maximum'];\n      assert.equal(min, 2);\n      assert.equal(max, 5);\n    });\n  });\n\n  describe('6. get 5 student user', function () {\n    it('should insert/get 5 users into/from the DB', async () => {\n      const result = await generateAndEnrollUsers({ count: 5, course_instance_id: '1' });\n      assert.lengthOf(result, 5);\n      locals.studentUsers = result.slice(0, 3);\n      locals.studentUserNotGrouped = result[3];\n      locals.studentUserInDiffGroup = result[4];\n      locals.groupCreator = locals.studentUsers[0];\n      assert.lengthOf(locals.studentUsers, 3);\n    });\n    it('should be able to switch user', function () {\n      config.authUid = locals.groupCreator.uid;\n      config.authName = locals.groupCreator.name;\n      config.authUin = '00000001';\n    });\n  });\n\n  describe('7. POST to assessment page to create group', function () {\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to create a group', async () => {\n      locals.group_name = 'groupBB';\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'create_group',\n          __csrf_token: locals.__csrf_token,\n          groupName: locals.group_name,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should not be able to create a second group', async () => {\n      const response = await fetchCookie(fetchCheerio)(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'create_group',\n          __csrf_token: locals.__csrf_token,\n          groupName: 'secondgroup',\n        }),\n      });\n      assert.equal(response.status, 200);\n      assertAlert(response.$, 'already in another group');\n    });\n  });\n\n  describe('8. the group information after 1 user join the group', function () {\n    it('should contain the correct group name', function () {\n      const elemList = locals.$('#group-name');\n      assert.equal(elemList.text(), locals.group_name);\n    });\n    it('should contain the 4-character join code', function () {\n      const elemList = locals.$('#join-code');\n      locals.joinCode = elemList.text();\n      assert.lengthOf(locals.joinCode, locals.$('#group-name').text().length + 1 + 4);\n    });\n    it('should not be able to start assessment', function () {\n      const elemList = locals.$('#start-assessment');\n      assert.isTrue(elemList.is(':disabled'));\n    });\n    it('should be missing 2 more group members to start', function () {\n      const elemList = locals.$('.text-center:contains(2 more)');\n      assert.lengthOf(elemList, 1);\n    });\n  });\n\n  describe('9. the second user can join the group using code', function () {\n    it('should be able to switch user', function () {\n      const student = locals.studentUsers[1];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000002';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to join group', async () => {\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'join_group',\n          __csrf_token: locals.__csrf_token,\n          join_code: locals.joinCode,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n  });\n\n  describe('10. the group information after 2 users join the group', function () {\n    it('should contain the correct group name', function () {\n      const elemList = locals.$('#group-name');\n      assert.equal(elemList.text(), locals.group_name);\n    });\n    it('should contain the 4-character join code', function () {\n      const elemList = locals.$('#join-code');\n      assert.equal(locals.joinCode, elemList.text());\n    });\n    it('should not be able to start assessment', function () {\n      const elemList = locals.$('#start-assessment');\n      assert.isTrue(elemList.is(':disabled'));\n    });\n    it('should be missing 1 more group members to start', function () {\n      const elemList = locals.$('.text-center:contains(1 more)');\n      assert.lengthOf(elemList, 1);\n    });\n  });\n\n  describe('11. the third user can join the group using code', function () {\n    it('should be able to switch user', function () {\n      const student = locals.studentUsers[2];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000003';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to join group', async () => {\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'join_group',\n          __csrf_token: locals.__csrf_token,\n          join_code: locals.joinCode,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have 3 students in group 1 in db', async () => {\n      const result = await sqldb.queryAsync(sql.select_all_user_in_group, []);\n      assert.lengthOf(result.rows, 3);\n    });\n  });\n\n  describe('12. the group information after 3 users join the group', function () {\n    it('should contain the correct group name', function () {\n      const elemList = locals.$('#group-name');\n      assert.equal(elemList.text(), locals.group_name);\n    });\n    it('should contain the 4-character join code', function () {\n      const elemList = locals.$('#join-code');\n      assert.equal(locals.joinCode, elemList.text());\n    });\n  });\n  describe('13. the fourth user can not join the already full group', function () {\n    it('should be able to switch to the ungrouped student', function () {\n      const student = locals.studentUserNotGrouped;\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000004';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should NOT be able to join group', async () => {\n      const response = await fetchCookie(fetch)(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'join_group',\n          __csrf_token: locals.__csrf_token,\n          join_code: locals.joinCode,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should contain a prompt to inform the user that the group is full', function () {\n      assertAlert(locals.$, 'is already full');\n    });\n  });\n\n  describe('13.5. The fourth user can create another group', () => {\n    it('should be able to switch to the ungrouped student', function () {\n      const student = locals.studentUserNotGrouped;\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000004';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to create a group', async () => {\n      locals.group_name = 'groupBBCCDD';\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'create_group',\n          __csrf_token: locals.__csrf_token,\n          groupName: locals.group_name,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should contain the 4-character join code', function () {\n      const elemList = locals.$('#join-code');\n      locals.joinCode = elemList.text();\n      assert.lengthOf(locals.joinCode, locals.$('#group-name').text().length + 1 + 4);\n    });\n  });\n\n  describe('13.75. The first user cannot join the second group', () => {\n    it('should be able to switch user', function () {\n      const student = locals.studentUsers[0];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000001';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should NOT be able to join group', async () => {\n      const response = await fetchCookie(fetch)(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'join_group',\n          __csrf_token: locals.__csrf_token,\n          join_code: locals.joinCode,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n      assertAlert(locals.$, 'You are already in another group');\n    });\n  });\n\n  describe('14. start assessment as the third user', function () {\n    it('should be able to switch user', function () {\n      const student = locals.studentUsers[2];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000003';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[1], 'attribs.value');\n      locals.__csrf_token = elemList[1].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should have a non-disabled \"start assessment\" button', function () {\n      const elemList = locals.$('#start-assessment');\n      assert.isNotTrue(elemList.is(':disabled'));\n    });\n    it('should have three rows under group members list', function () {\n      const elemList = locals.$('.col-sm li');\n      assert.lengthOf(elemList, 3);\n    });\n    it('should have 0 assessment instance in db', async () => {\n      const result = await sqldb.queryAsync(sql.select_all_assessment_instance, []);\n      assert.lengthOf(result.rows, 0);\n    });\n    it('should be able to start the assessment', async () => {\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'new_instance',\n          __csrf_token: locals.__csrf_token,\n        }),\n      });\n      assert.equal(response.status, 200);\n    });\n    it('should have 1 assessment instance in db', async () => {\n      const result = await sqldb.queryAsync(sql.select_all_assessment_instance, []);\n      assert.lengthOf(result.rows, 1);\n      locals.assessment_instance_id = result.rows[0].id;\n      locals.assessmentInstanceURL =\n        locals.courseInstanceUrl + '/assessment_instance/' + locals.assessment_instance_id;\n      assert.equal(result.rows[0].group_id, 1);\n    });\n  });\n\n  describe('15. access control of all members of group 1', function () {\n    it('should be able to access the assessment instance 1 as the 1st group member', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should be able to switch to 2nd group member', function () {\n      const student = locals.studentUsers[1];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000002';\n    });\n    it('should be able to access the assessment instance 1 as the 2nd group member', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should be able to switch to 3rd group member', function () {\n      const student = locals.studentUsers[0];\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000001';\n    });\n    it('should be able to access the assessment instance 1 as the 3rd group member', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n  });\n\n  describe('16. access control of student who used to be in group 1 but not in any group now', function () {\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 3);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to Leave the group', async () => {\n      const response = await fetch(locals.assessmentInstanceURL, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'leave_group',\n          __csrf_token: locals.__csrf_token,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should NOT be able to access the assessment instance 1 as a ungrouped student', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 403);\n    });\n  });\n  describe('17. access control of student who used to be in group 1 but in a different group now', function () {\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to create a group', async () => {\n      locals.group_name_alternative1 = 'groupCC';\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'create_group',\n          __csrf_token: locals.__csrf_token,\n          groupName: locals.group_name_alternative1,\n        }),\n      });\n      assert.equal(response.status, 200);\n    });\n    it('should NOT be able to access the assessment instance 1 as a student from a different group', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 403);\n    });\n  });\n\n  describe('18. access control of student who are not in any group', function () {\n    it('should be able to switch to the ungrouped student', function () {\n      const student = locals.studentUserNotGrouped;\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000004';\n    });\n    it('should NOT be able to access the assessment instance 1 as a ungrouped student', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 403);\n    });\n  });\n\n  describe('19. access control of student who are in a different group', function () {\n    it('should be able to switch to the student in the different group', function () {\n      const student = locals.studentUserInDiffGroup;\n      config.authUid = student.uid;\n      config.authName = student.name;\n      config.authUin = '00000005';\n    });\n    it('should load assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should be able to create a group', async () => {\n      locals.group_name_alternative2 = 'groupBBCC';\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'create_group',\n          __csrf_token: locals.__csrf_token,\n          groupName: locals.group_name_alternative2,\n        }),\n      });\n      assert.equal(response.status, 200);\n    });\n    it('should NOT be able to access the assessment instance 1 as a student from a different group', async () => {\n      const response = await fetch(locals.assessmentInstanceURL);\n      assert.equal(response.status, 403);\n    });\n  });\n\n  describe('20. cross assessment grouping', function () {\n    it('should contain a second group-based homework assessment', async () => {\n      const result = await sqldb.queryAsync(sql.select_group_work_assessment, []);\n      assert.lengthOf(result.rows, 2);\n      assert.notEqual(result.rows[1].id, undefined);\n    });\n    it('should load the second assessment page successfully', async () => {\n      const response = await fetch(locals.assessmentUrl_2);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should have a CSRF token', function () {\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 2);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n    it('should NOT be able to join group using the join code from a different assessment', async () => {\n      const response = await fetchCookie(fetch)(locals.assessmentUrl_2, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'join_group',\n          __csrf_token: locals.__csrf_token,\n          join_code: locals.joinCode,\n        }),\n      });\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should contain a prompt to inform the user that the group is invalid', function () {\n      assertAlert(locals.$, 'does not exist');\n    });\n  });\n});\n"]}