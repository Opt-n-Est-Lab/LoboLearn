{"version":3,"file":"helperCourse.js","sourceRoot":"","sources":["../../src/tests/helperCourse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AACnD,OAAO,KAAK,YAAY,MAAM,yBAAyB,CAAC;AAExD,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,SAAS,GAAG,gBAAgB;IAC3D,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,cAAc,EAAE,CAAC;IAC/C,MAAM,UAAU,GAAG,MAAM,YAAY,CAAC,qBAAqB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC/E,IAAI,UAAU,CAAC,MAAM,KAAK,eAAe,IAAI,UAAU,CAAC,uBAAuB,EAAE,CAAC;QAChF,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,2CAA2C,SAAS,EAAE,CAAC,CAAC;IAC1E,CAAC;AACH,CAAC","sourcesContent":["import { TEST_COURSE_PATH } from '../lib/paths.js';\nimport * as syncFromDisk from '../sync/syncFromDisk.js';\n\nimport { makeMockLogger } from './mockLogger.js';\n\nexport async function syncCourse(courseDir = TEST_COURSE_PATH) {\n  const { logger, getOutput } = makeMockLogger();\n  const syncResult = await syncFromDisk.syncOrCreateDiskToSql(courseDir, logger);\n  if (syncResult.status === 'sharing_error' || syncResult.hadJsonErrorsOrWarnings) {\n    console.log(getOutput());\n    throw new Error(`Errors or warnings found during sync of ${courseDir}`);\n  }\n}\n"]}