{"version":3,"file":"helperExam.js","sourceRoot":"","sources":["../../src/tests/helperExam.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport _ from 'lodash';\nimport fetch from 'node-fetch';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\n// sorted alphabetically by qid\nexport const questionsArray: {\n  qid: string;\n  type: 'Freeform' | 'Calculation';\n  maxPoints: number;\n  points?: number;\n  id?: string;\n  url?: string;\n}[] = [\n  { qid: 'addNumbers', type: 'Freeform', maxPoints: 5 },\n  { qid: 'addVectors', type: 'Calculation', maxPoints: 11 },\n  { qid: 'brokenGeneration', type: 'Freeform', maxPoints: 10 },\n  { qid: 'fossilFuelsRadio', type: 'Calculation', maxPoints: 17 },\n  { qid: 'partialCredit1', type: 'Freeform', maxPoints: 19 },\n  { qid: 'partialCredit2', type: 'Freeform', maxPoints: 9 },\n  { qid: 'partialCredit3', type: 'Freeform', maxPoints: 13 },\n];\n\nexport const questions = _.keyBy(questionsArray, 'qid');\n\n// must be the sum of maxPoints in questionsArray, but we hard-code it for reference\nexport const assessmentMaxPoints = 94;\n\nexport function startExam(locals: Record<string, any>) {\n  describe('startExam-1. the locals object', function () {\n    it('should be cleared', function () {\n      for (const prop in locals) {\n        delete locals[prop];\n      }\n    });\n    it('should be initialized', function () {\n      locals.siteUrl = 'http://localhost:' + config.serverPort;\n      locals.baseUrl = locals.siteUrl + '/pl';\n      locals.courseInstanceBaseUrl = locals.baseUrl + '/course_instance/1';\n      locals.instructorBaseUrl = locals.courseInstanceBaseUrl + '/instructor';\n      locals.instructorAssessmentsUrl = locals.instructorBaseUrl + '/instance_admin/assessments';\n      locals.instructorGradebookUrl = locals.instructorBaseUrl + '/instance_admin/gradebook';\n      locals.questionBaseUrl = locals.courseInstanceBaseUrl + '/instance_question';\n      locals.assessmentsUrl = locals.courseInstanceBaseUrl + '/assessments';\n      locals.isStudentPage = true;\n      locals.totalPoints = 0;\n    });\n  });\n\n  describe('startExam-2. the questions', function () {\n    it('should have cleared data', function () {\n      questionsArray.forEach(function (question) {\n        for (const prop in question) {\n          if (prop !== 'qid' && prop !== 'type' && prop !== 'maxPoints') {\n            delete question[prop];\n          }\n        }\n        question.points = 0;\n      });\n    });\n  });\n\n  describe('startExam-3. the database', function () {\n    it('should contain E1', async function () {\n      const result = await sqldb.queryOneRowAsync(sql.select_e1, []);\n      locals.assessment_id = result.rows[0].id;\n    });\n  });\n\n  describe('startExam-4. GET to assessments URL', function () {\n    it('should load successfully', async function () {\n      assert(locals.assessmentsUrl);\n      const response = await fetch(locals.assessmentsUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should contain E1 and have the correct link', function () {\n      assert(locals.$);\n      const elemList = locals.$('td a:contains(\"Exam for automatic test suite\")');\n      assert.lengthOf(elemList, 1);\n      locals.assessmentUrl = locals.siteUrl + elemList[0].attribs.href;\n      assert.equal(\n        locals.assessmentUrl,\n        locals.courseInstanceBaseUrl + '/assessment/' + locals.assessment_id + '/',\n      );\n    });\n  });\n\n  describe('startExam-5. GET to assessment URL', function () {\n    it('should load successfully', async function () {\n      assert(locals.assessmentUrl);\n      const response = await fetch(locals.assessmentUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    it('should contain \"Exam 1\"', function () {\n      assert(locals.$);\n      const elemList = locals.$('p.lead strong:contains(\"Exam 1\")');\n      assert.lengthOf(elemList, 1);\n    });\n    it('should contain \"QA 101\"', function () {\n      assert(locals.$);\n      const elemList = locals.$('p.lead strong:contains(\"QA 101\")');\n      assert.lengthOf(elemList, 1);\n    });\n    it('should have a CSRF token', function () {\n      assert(locals.$);\n      const elemList = locals.$('form input[name=\"__csrf_token\"]');\n      assert.lengthOf(elemList, 1);\n      assert.nestedProperty(elemList[0], 'attribs.value');\n      locals.__csrf_token = elemList[0].attribs.value;\n      assert.isString(locals.__csrf_token);\n    });\n  });\n\n  describe('startExam-6. POST to assessment URL', function () {\n    it('should load successfully', async function () {\n      assert(locals.assessmentUrl);\n      assert(locals.__csrf_token);\n      locals.preStartTime = Date.now();\n      const response = await fetch(locals.assessmentUrl, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'new_instance',\n          __csrf_token: locals.__csrf_token,\n        }),\n      });\n      locals.postStartTime = Date.now();\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n      locals.assessmentInstanceUrl = response.url;\n      assert.equal(new URL(response.url).pathname, '/pl/course_instance/1/assessment_instance/1');\n    });\n    it('should create one assessment_instance', async function () {\n      const result = await sqldb.queryAsync(sql.select_assessment_instances, []);\n      assert.equal(result.rowCount, 1);\n      locals.assessment_instance = result.rows[0];\n    });\n    it('should have the correct assessment_instance.assessment_id', function () {\n      assert.equal(locals.assessment_instance?.assessment_id, locals.assessment_id);\n    });\n    it(`should create ${questionsArray.length} instance_questions`, async function () {\n      const result = await sqldb.queryAsync(sql.select_instance_questions, []);\n      assert.equal(result.rowCount, questionsArray.length);\n      locals.instance_questions = result.rows;\n    });\n    questionsArray.forEach(function (question, i) {\n      it(`should have question #${i + 1} as QID ${question.qid}`, function () {\n        assert(locals.instance_questions);\n        question.id = locals.instance_questions[i].id;\n        assert.equal(locals.instance_questions[i].qid, question.qid);\n      });\n    });\n  });\n\n  describe('startExam-7. GET to assessment_instance URL', function () {\n    it('should load successfully', async function () {\n      assert(locals.assessmentInstanceUrl);\n      const response = await fetch(locals.assessmentInstanceUrl);\n      assert.equal(response.status, 200);\n      const page = await response.text();\n      locals.$ = cheerio.load(page);\n    });\n    questionsArray.forEach(function (question) {\n      it(`should link to ${question.qid} question`, function () {\n        assert(locals.$);\n        const urlTail = '/pl/course_instance/1/instance_question/' + question.id + '/';\n        question.url = locals.siteUrl + urlTail;\n        const elemList = locals.$(`td a[href=\"${urlTail}\"]`);\n        assert.lengthOf(elemList, 1);\n      });\n    });\n  });\n}\n"]}