{"version":3,"file":"helperQuestionPreview.js","sourceRoot":"","sources":["../../src/tests/helperQuestionPreview.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport fetch from 'node-fetch';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport * as helperQuestion from './helperQuestion.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\ninterface QuestionPreviewPageInfo {\n  siteUrl: string;\n  baseUrl: string;\n  questionBaseUrl: string;\n  questionPreviewTabUrl: string;\n  isStudentPage: boolean;\n}\n\ninterface QuestionInfo {\n  id: string;\n  qid: string;\n  type: string;\n  title: string;\n}\n\nexport function testQuestionPreviews(\n  previewPageInfo: QuestionPreviewPageInfo,\n  addNumbers: QuestionInfo,\n  addVectors: QuestionInfo,\n) {\n  const locals: any = previewPageInfo;\n  describe('1. submit correct answer to question addVectors', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.question = addVectors;\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.postAction = 'grade';\n        locals.expectedResult = {\n          submission_score: 1,\n          submission_correct: true,\n        };\n        locals.getSubmittedAnswer = function (variant) {\n          return {\n            wx: variant.true_answer.wx,\n            wy: variant.true_answer.wy,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkSubmissionScore(locals);\n  });\n\n  describe('2. save incorrect answer to question addVectors', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.postAction = 'save';\n        locals.question = addVectors;\n        locals.expectedResult = {\n          submission_score: null,\n          submission_correct: null,\n        };\n        locals.getSubmittedAnswer = function (_variant) {\n          return {\n            wx: 500,\n            wy: -100,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkSubmissionScore(locals);\n  });\n\n  describe('3. submit incorrect answer to question addVectors', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.postAction = 'grade';\n        locals.question = addVectors;\n        locals.expectedResult = {\n          submission_score: 0,\n          submission_correct: false,\n        };\n        locals.getSubmittedAnswer = function (_variant) {\n          return {\n            wx: -300,\n            wy: 400,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkSubmissionScore(locals);\n  });\n\n  describe('4. submit correct answer to question addNumbers', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.postAction = 'grade';\n        locals.question = addNumbers;\n        locals.expectedResult = {\n          submission_score: 1,\n          submission_correct: true,\n        };\n        locals.getSubmittedAnswer = function (variant) {\n          return {\n            c: variant.true_answer.c,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkSubmissionScore(locals);\n  });\n\n  describe('5. submit incorrect answer to question addNumbers', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.postAction = 'grade';\n        locals.question = addNumbers;\n        locals.expectedResult = {\n          submission_score: 0,\n          submission_correct: false,\n        };\n        locals.getSubmittedAnswer = function (variant) {\n          return {\n            c: variant.true_answer.c + 1,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkSubmissionScore(locals);\n  });\n\n  describe('6. submit invalid answer to question addNumbers', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.postAction = 'grade';\n        locals.question = addNumbers;\n        locals.expectedResult = {\n          submission_score: null,\n          submission_correct: null,\n        };\n        locals.getSubmittedAnswer = function (_variant) {\n          return {\n            c: 'not_a_number',\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkSubmissionScore(locals);\n    describe('the submission panel contents', function () {\n      it('should contain \"Invalid\"', function () {\n        const elemList = locals.$('div.submission-body :contains(\"Invalid\")');\n        assert.isAtLeast(elemList.length, 1);\n      });\n    });\n  });\n}\n\nexport function testFileDownloads(\n  previewPageInfo: QuestionPreviewPageInfo,\n  downloadFile: QuestionInfo,\n  shouldAccessClientFilesCourse: boolean,\n) {\n  const locals: any = previewPageInfo;\n\n  describe('Test downloading files', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n        locals.question = downloadFile;\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    describe('downloading course text file', function () {\n      let elemList;\n      it('should contain a link to clientFilesCourse/data.txt', function () {\n        elemList = locals.$('a[href*=\"clientFilesCourse\"]');\n        assert.lengthOf(elemList, 1);\n      });\n      let page;\n      it('should download something with the link to clientFilesCourse/data.txt', async () => {\n        const fileUrl = locals.siteUrl + elemList[0].attribs.href;\n        const res = await fetch(fileUrl);\n        if (shouldAccessClientFilesCourse) {\n          assert.equal(res.status, 200);\n        } else {\n          assert.equal(res.status, 404, 'Should not have been able to access clientFilesCourse');\n        }\n        page = await res.text();\n      });\n      it('should have downloaded a file with the contents of clientFilesCourse/data.txt', function () {\n        if (shouldAccessClientFilesCourse) {\n          assert.equal(page, 'This data is specific to the course.');\n        }\n      });\n    });\n    describe('downloading question text files', function () {\n      let elemList, page;\n      it('should contain a force-download link to clientFilesQuestion/data.txt', function () {\n        elemList = locals.$('a[href*=\"clientFilesQuestion\"][download]');\n        assert.lengthOf(elemList, 1);\n      });\n      it('should download something with the force-download link to clientFilesQuestion/data.txt', async () => {\n        const fileUrl = locals.siteUrl + elemList[0].attribs.href;\n        const res = await fetch(fileUrl);\n        assert.equal(res.status, 200);\n        page = await res.text();\n      });\n      it('should have downloaded a file with the contents of clientFilesQuestion/data.txt', function () {\n        assert.equal(page, 'This data is specific to the question.');\n      });\n      it('should contain a new tab link to clientFilesQuestion/data.txt', function () {\n        elemList = locals.$('a[href*=\"clientFilesQuestion\"][target=\"_blank\"]:not([download])');\n        assert.lengthOf(elemList, 1);\n      });\n      it('should download something with the new tab link to clientFilesQuestion/data.txt', async () => {\n        const fileUrl = locals.siteUrl + elemList[0].attribs.href;\n        const res = await fetch(fileUrl);\n        assert.equal(res.status, 200);\n        page = await res.text();\n      });\n      it('should have downloaded a file with the contents of clientFilesQuestion/data.txt', function () {\n        assert.equal(page, 'This data is specific to the question.');\n      });\n    });\n    describe('downloading dynamic text file', function () {\n      let elemList, page;\n      it('should contain a link to generatedFilesQuestion/data.txt', function () {\n        elemList = locals.$('a[href*=\"generatedFilesQuestion\"][href$=\"data.txt\"]');\n        assert.lengthOf(elemList, 1);\n      });\n      it('should download something with the link to generatedFilesQuestion/data.txt', async () => {\n        const fileUrl = locals.siteUrl + elemList[0].attribs.href;\n        const res = await fetch(fileUrl);\n        assert.equal(res.status, 200);\n        page = await res.text();\n      });\n      it('should have downloaded a file with the contents of generatedFilesQuestion/data.txt', function () {\n        assert.equal(page, 'This data is generated by code.');\n      });\n    });\n    describe('downloading dynamic image file', function () {\n      let elemList, page;\n      it('should contain a link to generatedFilesQuestion/figure.png', function () {\n        elemList = locals.$('a[href*=\"generatedFilesQuestion\"][href$=\"figure.png\"]');\n        assert.lengthOf(elemList, 1);\n      });\n      it('should download something with the link to generatedFilesQuestion/figure.png', async () => {\n        const fileUrl = locals.siteUrl + elemList[0].attribs.href;\n        const res = await fetch(fileUrl);\n        assert.equal(res.status, 200);\n        page = await res.arrayBuffer();\n      });\n      it('should have downloaded a file with the contents of generatedFilesQuestion/figure.png', function () {\n        assert.equal(Buffer.from(page.slice(0, 8)).toString('hex'), '89504e470d0a1a0a');\n      });\n      it('should produce no issues', async function () {\n        const result = await sqldb.queryAsync(sql.select_issues_for_last_variant, []);\n        if (result.rowCount != null && result.rowCount > 0) {\n          throw new Error(`found ${result.rowCount} issues (expected zero issues)`);\n        }\n      });\n    });\n  });\n}\n\nexport function testElementClientFiles(\n  previewPageInfo: QuestionPreviewPageInfo,\n  customElement: QuestionInfo,\n) {\n  const locals: any = previewPageInfo;\n\n  describe('setting up the submission data', function () {\n    it('should succeed', function () {\n      locals.shouldHaveButtons = ['grade', 'save', 'newVariant'];\n      locals.question = customElement;\n    });\n  });\n\n  helperQuestion.getInstanceQuestion(locals);\n  describe('downloading course text file', function () {\n    it('should download a file with the contents of course-element.js', async function () {\n      const elemList = locals.$('script[src*=\"course-element.js\"]');\n      assert.lengthOf(elemList, 1);\n\n      const fileUrl = locals.siteUrl + elemList[0].attribs.src;\n      const response = await fetch(fileUrl);\n      assert.equal(response.status, 200);\n      const fileContents = await response.text();\n      assert(fileContents.includes('This text was added by a script.'));\n    });\n  });\n}\n"]}