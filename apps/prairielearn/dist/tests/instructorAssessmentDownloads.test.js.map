{"version":3,"file":"instructorAssessmentDownloads.test.js","sourceRoot":"","sources":["../../src/tests/instructorAssessmentDownloads.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport { parse as csvParse } from 'csv-parse/sync';\nimport fetch from 'node-fetch';\n\nimport * as helperExam from './helperExam.js';\nimport * as helperQuestion from './helperQuestion.js';\nimport * as helperServer from './helperServer.js';\n\nconst locals: Record<string, any> = {};\n\nconst assessmentPoints = 5;\n\ndescribe('Instructor Assessment Downloads', function () {\n  this.timeout(60000);\n\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n\n  let elemList, page;\n\n  helperExam.startExam(locals);\n\n  describe('1. grade correct answer to question addNumbers', function () {\n    describe('setting up the submission data', function () {\n      it('should succeed', function () {\n        locals.shouldHaveButtons = ['grade', 'save'];\n        locals.postAction = 'grade';\n        locals.question = helperExam.questions.addNumbers;\n        locals.expectedResult = {\n          submission_score: 1,\n          submission_correct: true,\n          instance_question_points: assessmentPoints,\n          instance_question_score_perc: (assessmentPoints / 5) * 100,\n          assessment_instance_points: assessmentPoints,\n          assessment_instance_score_perc: (assessmentPoints / helperExam.assessmentMaxPoints) * 100,\n        };\n        locals.getSubmittedAnswer = function (variant) {\n          return {\n            c: variant.true_answer.c,\n          };\n        };\n      });\n    });\n    helperQuestion.getInstanceQuestion(locals);\n    helperQuestion.postInstanceQuestion(locals);\n    helperQuestion.checkQuestionScore(locals);\n    helperQuestion.checkAssessmentScore(locals);\n  });\n\n  describe('2. GET to instructorAssessmentDownloads URL', function () {\n    it('should succeed', async () => {\n      locals.instructorAssessmentDownloadsUrl =\n        locals.courseInstanceBaseUrl +\n        '/instructor/assessment/' +\n        locals.assessment_id +\n        '/downloads';\n      const res = await fetch(locals.instructorAssessmentDownloadsUrl);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should parse', function () {\n      locals.$ = cheerio.load(page);\n    });\n  });\n\n  describe('3. Check scores CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('scores.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['UID'], 'dev@example.com');\n      assert.approximately(data[0]['Exam 1'], locals.assessment_instance.score_perc, 1e-6);\n    });\n  });\n\n  describe('4. Check scoresByUsername CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('scores_by_username.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['Username'], 'dev');\n      assert.approximately(data[0]['Exam 1'], locals.assessment_instance.score_perc, 1e-6);\n    });\n  });\n\n  describe('5. Check points CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('points.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['UID'], 'dev@example.com');\n      assert.approximately(data[0]['Exam 1'], locals.assessment_instance.points, 1e-6);\n    });\n  });\n\n  describe('6. Check pointsByUsername CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('points_by_username.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['Username'], 'dev');\n      assert.approximately(data[0]['Exam 1'], locals.assessment_instance.points, 1e-6);\n    });\n  });\n\n  describe('7. Check instances CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('instances.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['UID'], 'dev@example.com');\n      assert.equal(data[0]['Username'], 'dev');\n      assert.equal(data[0]['Assessment'], 'Exam 1');\n      assert.approximately(data[0]['Score (%)'], locals.assessment_instance.score_perc, 1e-6);\n      assert.approximately(data[0]['Points'], locals.assessment_instance.points, 1e-6);\n      assert.approximately(data[0]['Max points'], helperExam.assessmentMaxPoints, 1e-6);\n    });\n  });\n\n  describe('8. Check instanceQuestions CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('instance_questions.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert(data.every((entry) => entry['UID'] === 'dev@example.com'));\n      assert(data.every((entry) => entry['Assessment'] === 'Exam 1'));\n      const questions = data.map((entry) => entry['Question']).sort();\n      const expectedQuestions = helperExam.questionsArray.map((q) => q.qid);\n      assert.deepEqual(questions, expectedQuestions);\n    });\n  });\n\n  describe('9. Check submissionsForManualGrading CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('submissions_for_manual_grading.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['uid'], 'dev@example.com');\n      assert.equal(data[0]['qid'], 'addNumbers');\n    });\n  });\n\n  describe('10. Check allSubmissions CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('all_submissions.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['UID'], 'dev@example.com');\n      assert.equal(data[0]['Assessment'], 'Exam 1');\n      assert.equal(data[0]['Question'], 'addNumbers');\n      assert.equal(data[0]['Correct'], 'TRUE');\n    });\n  });\n\n  describe('11. Check finalSubmissions CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('final_submissions.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['UID'], 'dev@example.com');\n      assert.equal(data[0]['Assessment'], 'Exam 1');\n      assert.equal(data[0]['Question'], 'addNumbers');\n      assert.equal(data[0]['Correct'], 'TRUE');\n      assert.equal(data[0]['Max points'], 5);\n      assert.equal(data[0]['Question % score'], 100);\n    });\n  });\n\n  describe('12. Check bestSubmissions CSV file', function () {\n    it('should have download link', function () {\n      elemList = locals.$(\"a:contains('best_submissions.csv')\");\n      assert.lengthOf(elemList, 1);\n    });\n    it('should succeed to download', async () => {\n      const res = await fetch(locals.siteUrl + elemList[0].attribs.href);\n      assert.equal(res.status, 200);\n      page = await res.text();\n    });\n    it('should contain correct data', function () {\n      const data = csvParse(page, { columns: true, cast: true });\n      assert.equal(data[0]['UID'], 'dev@example.com');\n      assert.equal(data[0]['Assessment'], 'Exam 1');\n      assert.equal(data[0]['Question'], 'addNumbers');\n      assert.equal(data[0]['Correct'], 'TRUE');\n      assert.equal(data[0]['Max points'], 5);\n      assert.equal(data[0]['Question % score'], 100);\n    });\n  });\n});\n"]}