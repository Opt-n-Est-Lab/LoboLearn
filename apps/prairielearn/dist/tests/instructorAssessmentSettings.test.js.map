{"version":3,"file":"instructorAssessmentSettings.test.js","sourceRoot":"","sources":["../../src/tests/instructorAssessmentSettings.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\n\nimport { assert } from 'chai';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport { step } from 'mocha-steps';\nimport fetch from 'node-fetch';\nimport * as tmp from 'tmp';\nimport { z } from 'zod';\n\nimport { loadSqlEquiv, queryAsync, queryRow } from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\nimport { AssessmentSchema } from '../lib/db-types.js';\nimport { insertCoursePermissionsByUserUid } from '../models/course-permissions.js';\n\nimport { fetchCheerio } from './helperClient.js';\nimport * as helperServer from './helperServer.js';\nimport { getOrCreateUser, withUser } from './utils/auth.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nconst courseTemplateDir = path.join(import.meta.dirname, 'testFileEditor', 'courseTemplate');\nconst baseDir = tmp.dirSync().name;\nconst courseOriginDir = path.join(baseDir, 'courseOrigin');\nconst courseLiveDir = path.join(baseDir, 'courseLive');\nconst courseDevDir = path.join(baseDir, 'courseDev');\nconst assessmentLiveDir = path.join(courseLiveDir, 'courseInstances', 'Fa18', 'assessments');\nlet assessmentLiveInfoPath = path.join(assessmentLiveDir, 'HW1', 'infoAssessment.json');\nconst assessmentDevDir = path.join(courseDevDir, 'courseInstances', 'Fa18', 'assessments');\nlet assessmentDevInfoPath = path.join(assessmentDevDir, 'HW1', 'infoAssessment.json');\n\nconst siteUrl = `http://localhost:${config.serverPort}`;\n\ndescribe('Editing assessment settings', () => {\n  before(async () => {\n    await execa('git', ['-c', 'init.defaultBranch=master', 'init', '--bare', courseOriginDir], {\n      cwd: '.',\n      env: process.env,\n    });\n\n    await execa('git', ['clone', courseOriginDir, courseLiveDir], {\n      cwd: '.',\n      env: process.env,\n    });\n\n    await fs.copy(courseTemplateDir, courseLiveDir);\n\n    const execOptions = { cwd: courseLiveDir, env: process.env };\n    await execa('git', ['add', '-A'], execOptions);\n    await execa('git', ['commit', '-m', 'Initial commit'], execOptions);\n    await execa('git', ['push', 'origin', 'master'], execOptions);\n    await execa('git', ['clone', courseOriginDir, courseDevDir], { cwd: '.', env: process.env });\n\n    await helperServer.before(courseLiveDir)();\n\n    await queryAsync(sql.update_course_repo, { repo: courseOriginDir });\n  });\n\n  after(helperServer.after);\n\n  step('access the test assessment info file', async () => {\n    const assessmentInfo = JSON.parse(await fs.readFile(assessmentLiveInfoPath, 'utf8'));\n    assert.equal(assessmentInfo.title, 'Homework for file editor test');\n  });\n\n  step('change assessment info', async () => {\n    const settingsPageResponse = await fetchCheerio(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n    );\n    assert.equal(settingsPageResponse.status, 200);\n\n    const response = await fetch(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_assessment',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          title: 'Test Title',\n          type: 'Homework',\n          set: 'Practice Quiz',\n          number: '1',\n          module: 'Module2',\n          aid: 'HW2',\n        }),\n      },\n    );\n\n    assert.equal(response.status, 200);\n    assert.equal(response.url, `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`);\n  });\n\n  step('verify assessment info change', async () => {\n    assessmentLiveInfoPath = path.join(assessmentLiveDir, 'HW2', 'infoAssessment.json');\n    const assessmentLiveInfo = JSON.parse(await fs.readFile(assessmentLiveInfoPath, 'utf8'));\n    assert.equal(assessmentLiveInfo.title, 'Test Title');\n    assert.equal(assessmentLiveInfo.type, 'Homework');\n    assert.equal(assessmentLiveInfo.set, 'Practice Quiz');\n    assert.equal(assessmentLiveInfo.number, '1');\n    assert.equal(assessmentLiveInfo.module, 'Module2');\n  });\n\n  step('verify nesting an assessment id', async () => {\n    const settingsPageResponse = await fetchCheerio(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n    );\n    assert.equal(settingsPageResponse.status, 200);\n\n    const response = await fetch(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_assessment',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          title: 'Test Title',\n          type: 'Homework',\n          set: 'Practice Quiz',\n          number: '1',\n          module: 'Module2',\n          aid: 'nestedPath/HW2',\n        }),\n      },\n    );\n\n    assert.equal(response.status, 200);\n    assert.equal(response.url, `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`);\n  });\n\n  step('verify changing aid did not leave empty directories', async () => {\n    const assessmentDir = path.join(assessmentLiveDir, 'HW2');\n    assert.notOk(await fs.pathExists(assessmentDir));\n  });\n\n  step('verify reverting a nested assessment id works correctly', async () => {\n    const settingsPageResponse = await fetchCheerio(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n    );\n    assert.equal(settingsPageResponse.status, 200);\n\n    const response = await fetch(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_assessment',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          title: 'Test Title',\n          type: 'Homework',\n          set: 'Practice Quiz',\n          number: '1',\n          module: 'Module2',\n          aid: 'HW2',\n        }),\n      },\n    );\n\n    assert.equal(response.status, 200);\n    assert.equal(response.url, `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`);\n  });\n\n  step('pull and verify changes', async () => {\n    await execa('git', ['pull'], { cwd: courseDevDir, env: process.env });\n    assessmentDevInfoPath = path.join(assessmentDevDir, 'HW2', 'infoAssessment.json');\n    const assessmentDevInfo = JSON.parse(await fs.readFile(assessmentDevInfoPath, 'utf8'));\n    assert.equal(assessmentDevInfo.title, 'Test Title');\n    assert.equal(assessmentDevInfo.type, 'Homework');\n    assert.equal(assessmentDevInfo.set, 'Practice Quiz');\n    assert.equal(assessmentDevInfo.number, '1');\n    assert.equal(assessmentDevInfo.module, 'Module2');\n  });\n\n  step('verify assessment info change in db', async () => {\n    const assessment = await queryRow(\n      sql.select_assessment_by_id,\n      { id: 1 },\n      AssessmentSchema.extend({\n        assessment_set_name: z.string(),\n        assessment_module_name: z.string(),\n      }),\n    );\n    assert.equal(assessment.title, 'Test Title');\n    assert.equal(assessment.type, 'Homework');\n    assert.equal(assessment.assessment_set_name, 'Practice Quiz');\n    assert.equal(assessment.number, '1');\n    assert.equal(assessment.assessment_module_name, 'Module2');\n    assert.equal(assessment.tid, 'HW2');\n  });\n\n  step('should not be able to submit without being an authorized user', async () => {\n    const user = await getOrCreateUser({\n      uid: 'viewer@example.com',\n      name: 'Viewer User',\n      uin: 'viewer',\n      email: 'viewer@example.com',\n    });\n    await insertCoursePermissionsByUserUid({\n      course_id: '1',\n      uid: 'viewer@example.com',\n      course_role: 'Viewer',\n      authn_user_id: '1',\n    });\n    await withUser(user, async () => {\n      const settingsPageResponse = await fetchCheerio(\n        `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      );\n      assert.equal(settingsPageResponse.status, 200);\n\n      const response = await fetch(\n        `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n        {\n          method: 'POST',\n          body: new URLSearchParams({\n            __action: 'update_assessment',\n            __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n            orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n            title: 'Test Title - Unauthorized',\n            type: 'Homework',\n            set: 'Homework',\n            number: '1',\n            module: 'Module1',\n            aid: 'HW1',\n          }),\n        },\n      );\n      assert.equal(response.status, 403);\n    });\n  });\n\n  step('should not be able to submit without assessment info file', async () => {\n    await fs.move(assessmentLiveInfoPath, `${assessmentLiveInfoPath}.bak`);\n    try {\n      const settingsPageResponse = await fetchCheerio(\n        `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      );\n      assert.equal(settingsPageResponse.status, 200);\n\n      const response = await fetch(\n        `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n        {\n          method: 'POST',\n          body: new URLSearchParams({\n            __action: 'update_assessment',\n            __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n            orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n            title: 'Test Title - No Course Info',\n            type: 'Homework',\n            set: 'Homework',\n            number: '1',\n            module: 'Module1',\n            aid: 'HW1',\n          }),\n        },\n      );\n      assert.equal(response.status, 400);\n    } finally {\n      await fs.move(`${assessmentLiveInfoPath}.bak`, assessmentLiveInfoPath);\n    }\n  });\n\n  step('should be able to submit without any changes', async () => {\n    const assessmentInfo = JSON.parse(await fs.readFile(assessmentLiveInfoPath, 'utf8'));\n    const settingsPageResponse = await fetchCheerio(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n    );\n    const response = await fetch(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_assessment',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          title: assessmentInfo.title,\n          type: assessmentInfo.type,\n          set: assessmentInfo.set,\n          number: assessmentInfo.number,\n          module: assessmentInfo.module,\n          aid: 'HW2',\n        }),\n      },\n    );\n    assert.equal(response.status, 200);\n    assert.match(response.url, /\\/pl\\/course_instance\\/1\\/instructor\\/assessment\\/1\\/settings$/);\n  });\n\n  step('should not be able to submit if repo course info file has been changed', async () => {\n    const settingsPageResponse = await fetchCheerio(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n    );\n\n    const assessmentInfo = JSON.parse(await fs.readFile(assessmentDevInfoPath, 'utf8'));\n    const newAssessmentInfo = { ...assessmentInfo, title: 'Test Title - Changed' };\n    await fs.writeFile(assessmentDevInfoPath, JSON.stringify(newAssessmentInfo, null, 2));\n    await execa('git', ['add', '-A'], { cwd: courseDevDir, env: process.env });\n    await execa('git', ['commit', '-m', 'Change assessment info'], {\n      cwd: courseDevDir,\n      env: process.env,\n    });\n    await execa('git', ['push', 'origin', 'master'], { cwd: courseDevDir, env: process.env });\n\n    const response = await fetch(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_assessment',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          title: 'Test Title2',\n          type: 'Homework',\n          set: 'Homework',\n          number: '1',\n          module: 'Module1',\n          aid: 'HW1',\n        }),\n      },\n    );\n    assert.equal(response.status, 200);\n    assert.match(response.url, /\\/pl\\/course_instance\\/1\\/instructor\\/edit_error\\/\\d+$/);\n  });\n\n  step('change assessment id', async () => {\n    const settingsPageResponse = await fetchCheerio(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n    );\n\n    // Change the assessment id to a valid, new id\n    const response = await fetch(\n      `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_assessment',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          title: 'Test Title',\n          type: 'Homework',\n          set: 'Homework',\n          number: '1',\n          module: 'Module1',\n          aid: 'A1',\n        }),\n      },\n    );\n\n    assert.equal(response.status, 200);\n    assert.match(response.url, /\\/pl\\/course_instance\\/1\\/instructor\\/assessment\\/1\\/settings$/);\n  });\n\n  step('verify change assessment id', async () => {\n    const assessmentDir = path.join(assessmentLiveDir, 'A1');\n    assert.ok(await fs.pathExists(assessmentDir));\n  });\n\n  step(\n    'should not be able to submit if provided assessment id falls outside the correct root directory',\n    async () => {\n      const settingsPageResponse = await fetchCheerio(\n        `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n      );\n\n      // Change the assessment id to one that falls outside the correct root directory\n      const response = await fetch(\n        `${siteUrl}/pl/course_instance/1/instructor/assessment/1/settings`,\n        {\n          method: 'POST',\n          body: new URLSearchParams({\n            __action: 'update_assessment',\n            __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n            orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n            title: 'Test Title',\n            type: 'Homework',\n            set: 'Homework',\n            number: '1',\n            module: 'Module1',\n            aid: '../A2',\n          }),\n        },\n      );\n\n      assert.equal(response.status, 400);\n    },\n  );\n});\n"]}