{"version":3,"file":"instructorCourseAdminSettings.test.js","sourceRoot":"","sources":["../../src/tests/instructorCourseAdminSettings.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\n\nimport { assert } from 'chai';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport { step } from 'mocha-steps';\nimport fetch from 'node-fetch';\nimport * as tmp from 'tmp';\n\nimport { loadSqlEquiv, queryAsync } from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\nimport { insertCoursePermissionsByUserUid } from '../models/course-permissions.js';\nimport { selectCourseById } from '../models/course.js';\n\nimport { fetchCheerio } from './helperClient.js';\nimport * as helperServer from './helperServer.js';\nimport { getOrCreateUser, withUser } from './utils/auth.js';\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nconst courseTemplateDir = path.join(import.meta.dirname, 'testFileEditor', 'courseTemplate');\nconst baseDir = tmp.dirSync().name;\nconst courseOriginDir = path.join(baseDir, 'courseOrigin');\nconst courseLiveDir = path.join(baseDir, 'courseLive');\nconst courseLiveInfoPath = path.join(courseLiveDir, 'infoCourse.json');\nconst courseDevDir = path.join(baseDir, 'courseDev');\nconst courseDevInfoPath = path.join(courseDevDir, 'infoCourse.json');\n\nconst siteUrl = `http://localhost:${config.serverPort}`;\n\ndescribe('Editing course settings', () => {\n  before(async () => {\n    // init git repo in directory\n    await execa('git', ['-c', 'init.defaultBranch=master', 'init', '--bare', courseOriginDir], {\n      cwd: '.',\n      env: process.env,\n    });\n\n    await execa('git', ['clone', courseOriginDir, courseLiveDir], {\n      cwd: '.',\n      env: process.env,\n    });\n\n    // create course files\n    await fs.copy(courseTemplateDir, courseLiveDir);\n\n    const execOptions = { cwd: courseLiveDir, env: process.env };\n    await execa('git', ['add', '-A'], execOptions);\n    await execa('git', ['commit', '-m', 'Initial commit'], execOptions);\n    await execa('git', ['push', 'origin', 'master'], execOptions);\n    await execa('git', ['clone', courseOriginDir, courseDevDir], { cwd: '.', env: process.env });\n\n    await helperServer.before(courseLiveDir)();\n\n    // update db with course repo info\n    await queryAsync(sql.update_course_repo, { repo: courseOriginDir });\n  });\n  after(helperServer.after);\n\n  step('access the test course info file', async () => {\n    const courseInfo = JSON.parse(await fs.readFile(courseLiveInfoPath, 'utf8'));\n    assert.equal(courseInfo.name, 'TEST 101');\n  });\n\n  step('change course info', async () => {\n    const settingsPageResponse = await fetchCheerio(`${siteUrl}/pl/course/1/course_admin/settings`);\n    assert.equal(settingsPageResponse.status, 200);\n\n    const response = await fetch(`${siteUrl}/pl/course/1/course_admin/settings`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'update_configuration',\n        __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n        orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n        short_name: 'TEST 102',\n        title: 'Test Course 102',\n        display_timezone: 'America/Los_Angeles',\n      }),\n    });\n    assert.equal(response.status, 200);\n    assert.equal(response.url, `${siteUrl}/pl/course/1/course_admin/settings`);\n  });\n\n  step('verify course info change', async () => {\n    const courseLiveInfo = JSON.parse(await fs.readFile(courseLiveInfoPath, 'utf8'));\n    assert.equal(courseLiveInfo.name, 'TEST 102');\n    assert.equal(courseLiveInfo.title, 'Test Course 102');\n    assert.equal(courseLiveInfo.timezone, 'America/Los_Angeles');\n  });\n\n  step('pull and verify changes', async () => {\n    await execa('git', ['pull'], { cwd: courseDevDir, env: process.env });\n    const courseDevInfo = JSON.parse(\n      await fs.readFile(path.join(courseDevDir, 'infoCourse.json'), 'utf8'),\n    );\n    assert.equal(courseDevInfo.name, 'TEST 102');\n    assert.equal(courseDevInfo.title, 'Test Course 102');\n    assert.equal(courseDevInfo.timezone, 'America/Los_Angeles');\n  });\n\n  step('verify course info change in db', async () => {\n    const course = await selectCourseById('1');\n    assert.equal(course.short_name, 'TEST 102');\n    assert.equal(course.title, 'Test Course 102');\n    assert.equal(course.display_timezone, 'America/Los_Angeles');\n  });\n\n  // try submitting without being an authorized user\n  step('should not be able to submit without being an authorized user', async () => {\n    const user = await getOrCreateUser({\n      uid: 'viewer@example.com',\n      name: 'Viewer User',\n      uin: 'viewer',\n      email: 'viewer@example.com',\n    });\n    await insertCoursePermissionsByUserUid({\n      course_id: '1',\n      uid: 'viewer@example.com',\n      course_role: 'Viewer',\n      authn_user_id: '1',\n    });\n    await withUser(user, async () => {\n      const settingsPageResponse = await fetchCheerio(\n        `${siteUrl}/pl/course/1/course_admin/settings`,\n      );\n      assert.equal(settingsPageResponse.status, 200);\n\n      const response = await fetch(`${siteUrl}/pl/course/1/course_admin/settings`, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_configuration',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          short_name: 'TEST 103',\n          title: 'Test Course 103',\n          display_timezone: 'America/Los_Angeles',\n        }),\n      });\n      assert.equal(response.status, 403);\n    });\n  });\n\n  step('should not be able to submit without course info file', async () => {\n    await fs.move(courseLiveInfoPath, `${courseLiveInfoPath}.bak`);\n    try {\n      const settingsPageResponse = await fetchCheerio(\n        `${siteUrl}/pl/course/1/course_admin/settings`,\n      );\n      assert.equal(settingsPageResponse.status, 200);\n\n      const response = await fetch(`${siteUrl}/pl/course/1/course_admin/settings`, {\n        method: 'POST',\n        body: new URLSearchParams({\n          __action: 'update_configuration',\n          __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n          orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n          short_name: 'TEST 104',\n          title: 'Test Course 104',\n          display_timezone: 'America/Los_Angeles',\n        }),\n      });\n      assert.equal(response.status, 400);\n    } finally {\n      await fs.move(`${courseLiveInfoPath}.bak`, courseLiveInfoPath);\n    }\n  });\n\n  step('should be able to submit without any changes', async () => {\n    const courseInfo = JSON.parse(await fs.readFile(courseLiveInfoPath, 'utf8'));\n    const settingsPageResponse = await fetchCheerio(`${siteUrl}/pl/course/1/course_admin/settings`);\n    const response = await fetch(`${siteUrl}/pl/course/1/course_admin/settings`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'update_configuration',\n        __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n        orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n        short_name: courseInfo.name,\n        title: courseInfo.title,\n        display_timezone: courseInfo.timezone,\n      }),\n    });\n    assert.equal(response.status, 200);\n    assert.match(response.url, /\\/pl\\/course\\/1\\/course_admin\\/settings$/);\n  });\n\n  step('should not be able to submit if repo course info file has been changed', async () => {\n    const settingsPageResponse = await fetchCheerio(`${siteUrl}/pl/course/1/course_admin/settings`);\n\n    const courseInfo = JSON.parse(await fs.readFile(courseDevInfoPath, 'utf8'));\n    const newCourseInfo = { ...courseInfo, name: 'TEST 107' };\n    await fs.writeFile(courseDevInfoPath, JSON.stringify(newCourseInfo, null, 2));\n    await execa('git', ['add', '-A'], { cwd: courseDevDir, env: process.env });\n    await execa('git', ['commit', '-m', 'Change course info'], {\n      cwd: courseDevDir,\n      env: process.env,\n    });\n    await execa('git', ['push', 'origin', 'master'], { cwd: courseDevDir, env: process.env });\n\n    const response = await fetch(`${siteUrl}/pl/course/1/course_admin/settings`, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'update_configuration',\n        __csrf_token: settingsPageResponse.$('input[name=\"__csrf_token\"]').val() as string,\n        orig_hash: settingsPageResponse.$('input[name=\"orig_hash\"]').val() as string,\n        short_name: 'TEST 108',\n        title: 'Test Course 108',\n        display_timezone: 'America/Los_Angeles',\n      }),\n    });\n    assert.equal(response.status, 200);\n    assert.match(response.url, /\\/pl\\/course\\/1\\/edit_error\\/\\d+$/);\n  });\n});\n"]}