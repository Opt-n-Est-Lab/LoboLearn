{"version":3,"file":"instructorInstanceAdminSettings.test.js","sourceRoot":"","sources":["../../src/tests/instructorInstanceAdminSettings.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\n\nimport { assert } from 'chai';\nimport { execa } from 'execa';\nimport fs from 'fs-extra';\nimport { step } from 'mocha-steps';\nimport * as tmp from 'tmp';\n\nimport { loadSqlEquiv, queryAsync } from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\n\nimport { fetchCheerio } from './helperClient.js';\nimport * as helperServer from './helperServer.js';\n\nconst siteUrl = `http://localhost:${config.serverPort}`;\n\nconst sql = loadSqlEquiv(import.meta.url);\n\nconst baseDir = tmp.dirSync().name;\n\nconst courseOriginDir = path.join(baseDir, 'courseOrigin');\nconst courseLiveDir = path.join(baseDir, 'courseLive');\n\nconst courseDevDir = path.join(baseDir, 'courseDev');\nconst courseTemplateDir = path.join(import.meta.dirname, 'testFileEditor', 'courseTemplate');\n\ndescribe('Updating a course instance ID', () => {\n  before(async () => {\n    // Clone the course template for testing\n    await execa('git', ['-c', 'init.defaultBranch=master', 'init', '--bare', courseOriginDir], {\n      cwd: '.',\n      env: process.env,\n    });\n\n    await execa('git', ['clone', courseOriginDir, courseLiveDir], {\n      cwd: '.',\n      env: process.env,\n    });\n\n    await fs.copy(courseTemplateDir, courseLiveDir);\n\n    const execOptions = { cwd: courseLiveDir, env: process.env };\n    await execa('git', ['add', '-A'], execOptions);\n    await execa('git', ['commit', '-m', 'Initial commit'], execOptions);\n    await execa('git', ['push', 'origin', 'master'], execOptions);\n    await execa('git', ['clone', courseOriginDir, courseDevDir], { cwd: '.', env: process.env });\n\n    await helperServer.before(courseLiveDir)();\n\n    await queryAsync(sql.update_course_repo, { repo: courseOriginDir });\n  });\n\n  after(helperServer.after);\n\n  step(\n    'should not be able to change course instance id to one that falls outside the correct root directory',\n    async () => {\n      const courseInstancePageResponse = await fetchCheerio(\n        `${siteUrl}/pl/course_instance/1/instructor/instance_admin/settings`,\n      );\n\n      assert.equal(courseInstancePageResponse.status, 200);\n\n      // Attempt to update the course instance id to one that falls outside the correct root directory\n      // It should fail\n      const courseInstanceCreationResponse = await fetchCheerio(\n        `${siteUrl}/pl/course_instance/1/instructor/instance_admin/settings`,\n        {\n          method: 'POST',\n          body: new URLSearchParams({\n            __action: 'change_id',\n            __csrf_token: courseInstancePageResponse.$('input[name=__csrf_token]').val() as string,\n            id: '../Fa25',\n          }),\n        },\n      );\n\n      assert.equal(courseInstanceCreationResponse.status, 400);\n      assert.equal(\n        courseInstanceCreationResponse.url,\n        `${siteUrl}/pl/course_instance/1/instructor/instance_admin/settings`,\n      );\n    },\n  );\n});\n"]}