{"version":3,"file":"courseAdminAccess.test.js","sourceRoot":"","sources":["../../../src/tests/permissions/courseAdminAccess.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport { step } from 'mocha-steps';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../../lib/config.js';\nimport { insertCoursePermissionsByUserUid } from '../../models/course-permissions.js';\nimport * as helperClient from '../helperClient.js';\nimport * as helperServer from '../helperServer.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nasync function checkPermissions(users) {\n  const result = await sqldb.queryAsync(sql.select_permissions, {\n    course_id: 1,\n    course_instance_id: 1,\n  });\n  assert.includeMembers(\n    users.map((user) => user.uid),\n    result.rows.map((row) => row.uid),\n  );\n  users.forEach((user) => {\n    const row = result.rows.find((row) => row.uid === user.uid);\n    if (!user.cr) {\n      assert.isNotOk(row);\n    } else {\n      assert.isOk(row);\n      assert.equal(row.course_role, user.cr);\n      assert.equal(row.course_instance_role, user.cir);\n    }\n  });\n}\n\nfunction updatePermissions(users, uid, cr, cir) {\n  let user = users.find((user) => user.uid === uid);\n  if (!user) {\n    user = { uid };\n    users.push(user);\n  }\n  user.cr = cr;\n  user.cir = cir;\n}\n\nfunction runTest(context) {\n  context.pageUrl = `${context.baseUrl}/course_admin/staff`;\n  context.userId = 2;\n\n  const headers = {\n    cookie: 'pl_test_user=test_instructor',\n  };\n\n  const users = [\n    {\n      uid: 'instructor@example.com',\n      name: 'Instructor User',\n      uin: '100000000',\n      email: 'instructor@example.com',\n      cr: 'Owner',\n      cir: null,\n    },\n    {\n      uid: 'staff03@example.com',\n      name: 'Staff Three',\n      uin: null,\n      email: 'staff03@example.com',\n      cr: null,\n      cir: null,\n    },\n    {\n      uid: 'staff04@example.com',\n      name: 'Staff Four',\n      uin: null,\n      email: 'staff04@example.com',\n      cr: null,\n      cir: null,\n    },\n    {\n      uid: 'staff05@example.com',\n      name: 'Staff Five',\n      uin: null,\n      email: 'staff05@example.com',\n      cr: null,\n      cir: null,\n    },\n  ];\n\n  let new_user = 'garbage@example.com';\n\n  before('set up testing server', helperServer.before().bind(this));\n\n  before('insert users and make instructor course owner', async function () {\n    for (const user of users) {\n      await sqldb.callAsync('users_select_or_insert', [\n        user.uid,\n        user.name,\n        user.uin,\n        user.email,\n        'Shibboleth',\n      ]);\n    }\n    await insertCoursePermissionsByUserUid({\n      course_id: '1',\n      uid: 'instructor@example.com',\n      course_role: 'Owner',\n      authn_user_id: '1',\n    });\n    const result = await sqldb.queryAsync(sql.select_non_existent_user, {});\n    if (result.rowCount) new_user = result.rows[0].uid;\n  });\n\n  after('shut down testing server', helperServer.after);\n\n  step('permissions should match', async () => {\n    await checkPermissions(users);\n  });\n\n  step('can add multiple users', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFTokenFromDataContent(\n      context,\n      response.$,\n      'button[data-testid=\"add-users-button\"]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_insert_by_user_uids',\n        __csrf_token: context.__csrf_token,\n        uid: ' staff03@example.com ,   ,   staff04@example.com',\n        course_role: 'Viewer',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', 'Viewer', null);\n    updatePermissions(users, 'staff04@example.com', 'Viewer', null);\n    await checkPermissions(users);\n  });\n\n  step('can add valid subset of multiple users', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFTokenFromDataContent(\n      context,\n      response.$,\n      'button[data-testid=\"add-users-button\"]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_insert_by_user_uids',\n        __csrf_token: context.__csrf_token,\n        uid: `staff03@example.com, staff05@example.com, ${new_user}`,\n        course_role: 'None',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff05@example.com', 'None', null);\n    updatePermissions(users, new_user, 'None', null);\n    await checkPermissions(users);\n  });\n\n  step('can add course instance permission', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=student-data-access-add-3]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_instance_permissions_insert',\n        __csrf_token: context.__csrf_token,\n        user_id: '3',\n        course_instance_id: '1',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', 'Viewer', 'Student Data Viewer');\n    await checkPermissions(users);\n  });\n\n  step('can delete user', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=course-content-access-form-3]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_delete',\n        __csrf_token: context.__csrf_token,\n        user_id: '3',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', null, null);\n    await checkPermissions(users);\n  });\n\n  step('cannot delete self', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    const __csrf_token = response.$('span[id=test_csrf_token]').text();\n    assert.lengthOf(response.$(`form[name=course-content-access-form-${context.userId}]`), 0);\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_delete',\n        __csrf_token,\n        user_id: '2',\n      }),\n      headers,\n    });\n    assert.equal(response.status, 403);\n    await checkPermissions(users);\n  });\n\n  step('can change course role', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=course-content-access-form-4]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_update_role',\n        __csrf_token: context.__csrf_token,\n        user_id: '4',\n        course_role: 'Owner',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff04@example.com', 'Owner', null);\n    await checkPermissions(users);\n  });\n\n  step('cannot change course role of self', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    const __csrf_token = response.$('span[id=test_csrf_token]').text();\n    assert.lengthOf(response.$(`form[name=course-content-access-form-${context.userId}]`), 0);\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_update_role',\n        __csrf_token,\n        user_id: context.userId,\n        course_role: 'None',\n      }),\n      headers,\n    });\n    assert.equal(response.status, 403);\n    await checkPermissions(users);\n  });\n\n  step('cannot delete self even when emulating another owner', async () => {\n    const headers = {\n      cookie: 'pl_test_user=test_instructor; pl2_requested_uid=staff04@example.com',\n    };\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    const __csrf_token = response.$('span[id=test_csrf_token]').text();\n    assert.lengthOf(response.$(`form[name=course-content-access-form-${context.userId}]`), 0);\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_delete',\n        __csrf_token,\n        user_id: context.userId,\n      }),\n      headers,\n    });\n    assert.equal(response.status, 403);\n    await checkPermissions(users);\n  });\n\n  step('cannot change course role of self even when emulating another owner', async () => {\n    const headers = {\n      cookie: 'pl_test_user=test_instructor; pl2_requested_uid=staff04@example.com',\n    };\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    const __csrf_token = response.$('span[id=test_csrf_token]').text();\n    assert.lengthOf(response.$(`form[name=course-content-access-form-${context.userId}]`), 0);\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_update_role',\n        __csrf_token,\n        user_id: context.userId,\n        course_role: 'None',\n      }),\n      headers,\n    });\n    assert.equal(response.status, 403);\n    await checkPermissions(users);\n  });\n\n  step('can add user', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFTokenFromDataContent(\n      context,\n      response.$,\n      'button[data-testid=\"add-users-button\"]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_insert_by_user_uids',\n        __csrf_token: context.__csrf_token,\n        uid: 'staff03@example.com',\n        course_role: 'None',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', 'None', null);\n    await checkPermissions(users);\n  });\n\n  step('can add course instance permission', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=student-data-access-add-3]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_instance_permissions_insert',\n        __csrf_token: context.__csrf_token,\n        user_id: '3',\n        course_instance_id: '1',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', 'None', 'Student Data Viewer');\n    await checkPermissions(users);\n  });\n\n  step('can update course instance permission', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=student-data-access-change-3-1]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_instance_permissions_update_role_or_delete',\n        __csrf_token: context.__csrf_token,\n        user_id: '3',\n        course_instance_id: '1',\n        course_instance_role: 'Student Data Editor',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', 'None', 'Student Data Editor');\n    await checkPermissions(users);\n  });\n\n  step('can add course instance permission', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=student-data-access-add-5]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_instance_permissions_insert',\n        __csrf_token: context.__csrf_token,\n        user_id: '5',\n        course_instance_id: '1',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff05@example.com', 'None', 'Student Data Viewer');\n    await checkPermissions(users);\n  });\n\n  step('can delete course instance permission', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=student-data-access-change-5-1]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_instance_permissions_update_role_or_delete',\n        __csrf_token: context.__csrf_token,\n        user_id: '5',\n        course_instance_id: '1',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff05@example.com', 'None', null);\n    await checkPermissions(users);\n  });\n\n  step('can delete all course instance permissions', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFTokenFromDataContent(\n      context,\n      response.$,\n      'button[data-testid=\"remove-all-student-data-access-button\"]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'remove_all_student_data_access',\n        __csrf_token: context.__csrf_token,\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', 'None', null);\n    await checkPermissions(users);\n  });\n\n  step('can add course instance permission', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=student-data-access-add-5]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_instance_permissions_insert',\n        __csrf_token: context.__csrf_token,\n        user_id: '5',\n        course_instance_id: '1',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff05@example.com', 'None', 'Student Data Viewer');\n    await checkPermissions(users);\n  });\n\n  step('can delete users with no access', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFTokenFromDataContent(\n      context,\n      response.$,\n      'button[data-testid=\"delete-users-with-no-access-button\"]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'delete_no_access',\n        __csrf_token: context.__csrf_token,\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff03@example.com', null, null);\n    updatePermissions(users, new_user, null, null);\n    await checkPermissions(users);\n  });\n\n  step('can delete non-owners', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFTokenFromDataContent(\n      context,\n      response.$,\n      'button[data-testid=\"delete-non-owners-button\"]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'delete_non_owners',\n        __csrf_token: context.__csrf_token,\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff05@example.com', null, null);\n    await checkPermissions(users);\n  });\n\n  step('can change course role', async () => {\n    let response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.isTrue(response.ok);\n    helperClient.extractAndSaveCSRFToken(\n      context,\n      response.$,\n      'form[name=course-content-access-form-4]',\n    );\n    response = await helperClient.fetchCheerio(context.pageUrl, {\n      method: 'POST',\n      body: new URLSearchParams({\n        __action: 'course_permissions_update_role',\n        __csrf_token: context.__csrf_token,\n        user_id: '4',\n        course_role: 'Editor',\n      }),\n      headers,\n    });\n    assert.isTrue(response.ok);\n    updatePermissions(users, 'staff04@example.com', 'Editor', null);\n    await checkPermissions(users);\n  });\n\n  step('cannot GET if not an owner', async () => {\n    const headers = {\n      cookie: 'pl_test_user=test_instructor; pl2_requested_uid=staff04@example.com',\n    };\n    const response = await helperClient.fetchCheerio(context.pageUrl, {\n      headers,\n    });\n    assert.equal(response.status, 403);\n  });\n}\n\ndescribe('course admin access page through course route', function () {\n  this.timeout(60000);\n\n  const context: Record<string, any> = {};\n  context.siteUrl = `http://localhost:${config.serverPort}`;\n  context.baseUrl = `${context.siteUrl}/pl/course/1`;\n\n  runTest(context);\n});\n\ndescribe('course admin access page through course instance route', function () {\n  this.timeout(60000);\n\n  const context: Record<string, any> = {};\n  context.siteUrl = `http://localhost:${config.serverPort}`;\n  context.baseUrl = `${context.siteUrl}/pl/course_instance/1/instructor`;\n\n  runTest(context);\n});\n"]}