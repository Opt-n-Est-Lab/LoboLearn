{"version":3,"file":"redirects.test.js","sourceRoot":"","sources":["../../src/tests/redirects.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAC9B,OAAO,KAAK,MAAM,YAAY,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,OAAO,KAAK,YAAY,MAAM,mBAAmB,CAAC;AAElD,MAAM,OAAO,GAAG,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC;AAExD,MAAM,SAAS,GAAG;IAChB;QACE,QAAQ,EAAE,yBAAyB;QACnC,QAAQ,EAAE,iCAAiC;KAC5C;IACD;QACE,QAAQ,EAAE,6CAA6C;QACvD,QAAQ,EAAE,qDAAqD;KAChE;IACD;QACE,QAAQ,EAAE,uCAAuC;QACjD,QAAQ,EAAE,+CAA+C;KAC1D;IACD;QACE,QAAQ,EAAE,2DAA2D;QACrE,QAAQ,EAAE,mEAAmE;KAC9E;CACF,CAAC;AAEF,QAAQ,CAAC,WAAW,EAAE;IACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEpB,MAAM,CAAC,uBAAuB,EAAE,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;IACvD,KAAK,CAAC,0BAA0B,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;IAEtD,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;QAC7B,EAAE,CAAC,aAAa,QAAQ,CAAC,QAAQ,EAAE,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,EAAE;gBAC7D,2DAA2D;gBAC3D,0DAA0D;gBAC1D,uCAAuC;gBACvC,QAAQ,EAAE,QAAQ;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACnC,MAAM,cAAc,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxD,MAAM,CAAC,cAAc,CAAC,CAAC;YACvB,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC;YAClD,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from 'chai';\nimport fetch from 'node-fetch';\n\nimport { config } from '../lib/config.js';\n\nimport * as helperServer from './helperServer.js';\n\nconst siteUrl = 'http://localhost:' + config.serverPort;\n\nconst redirects = [\n  {\n    original: '/pl/course/1/question/4',\n    redirect: '/pl/course/1/question/4/preview',\n  },\n  {\n    original: '/pl/course_instance/1/instructor/question/4',\n    redirect: '/pl/course_instance/1/instructor/question/4/preview',\n  },\n  {\n    original: '/pl/course/1/question/4?variant_id=99',\n    redirect: '/pl/course/1/question/4/preview?variant_id=99',\n  },\n  {\n    original: '/pl/course_instance/1/instructor/question/4?variant_id=99',\n    redirect: '/pl/course_instance/1/instructor/question/4/preview?variant_id=99',\n  },\n];\n\ndescribe('Redirects', function () {\n  this.timeout(20000);\n\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n\n  redirects.forEach((redirect) => {\n    it(`redirects ${redirect.original}`, async () => {\n      const response = await fetch(`${siteUrl}${redirect.original}`, {\n        // No need to actually request the redirected page; we just\n        // want to assert that the response is a redirect and that\n        // it will redirect to the right place.\n        redirect: 'manual',\n      });\n      assert.equal(response.status, 302);\n      const locationHeader = response.headers.get('location');\n      assert(locationHeader);\n      const location = new URL(locationHeader, siteUrl);\n      assert.equal(location.pathname + location.search, redirect.redirect);\n    });\n  });\n});\n"]}