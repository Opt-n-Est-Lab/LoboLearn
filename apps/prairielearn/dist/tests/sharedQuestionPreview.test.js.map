{"version":3,"file":"sharedQuestionPreview.test.js","sourceRoot":"","sources":["../../src/tests/sharedQuestionPreview.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport { z } from 'zod';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\nimport { features } from '../lib/features/index.js';\n\nimport {\n  testElementClientFiles,\n  testFileDownloads,\n  testQuestionPreviews,\n} from './helperQuestionPreview.js';\nimport * as helperServer from './helperServer.js';\nimport * as syncUtil from './sync/util.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst siteUrl = 'http://localhost:' + config.serverPort;\nconst baseUrl = siteUrl + '/pl';\n\nconst addNumbers = {\n  id: '',\n  qid: 'addNumbers',\n  type: 'Freeform',\n  title: 'Add two numbers',\n};\nconst addVectors = {\n  id: '',\n  qid: 'addVectors',\n  type: 'Calculation',\n  title: 'Addition of vectors in Cartesian coordinates',\n};\nconst downloadFile = {\n  id: '',\n  qid: 'downloadFile',\n  type: 'Freeform',\n  title: 'File download example question',\n};\nconst customElement = {\n  id: '',\n  qid: 'customElement',\n  type: 'Freeform',\n  title: 'Demo: Custom element',\n};\nconst testQuestions = [addNumbers, addVectors, downloadFile, customElement];\n\ndescribe('Shared Question Preview', function () {\n  this.timeout(60000);\n\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n\n  before('ensure course has question sharing enabled', async () => {\n    await features.enable('question-sharing');\n  });\n\n  before('Get question IDs from database', async () => {\n    for (const testQuestion of testQuestions) {\n      testQuestion.id = await sqldb.queryRow(\n        sql.select_question_id,\n        {\n          qid: testQuestion.qid,\n        },\n        z.string(),\n      );\n    }\n  });\n\n  before('set up another course to consume shared questions from ', async () => {\n    const consumingCourseData = syncUtil.getCourseData();\n    consumingCourseData.course.name = 'CONSUMING 101';\n    await syncUtil.writeAndSyncCourseData(consumingCourseData);\n  });\n\n  describe('Public Question Previews', () => {\n    const previewPageInfo = {\n      siteUrl,\n      baseUrl,\n      questionBaseUrl: baseUrl + '/public/course/1/question',\n      questionPreviewTabUrl: '/preview',\n      isStudentPage: false,\n    };\n\n    describe('When questions are share_source_publicly but not share_publicly', () => {\n      before(\n        'Make sure questions have share_source_publicly set but not share_publicly',\n        async () => {\n          for (const testQuestion of testQuestions) {\n            await sqldb.queryAsync(sql.update_share_source_publicly, {\n              question_id: testQuestion.id,\n            });\n          }\n        },\n      );\n      testQuestionPreviews(previewPageInfo, addNumbers, addVectors);\n      testFileDownloads(previewPageInfo, downloadFile, false);\n      testElementClientFiles(previewPageInfo, customElement);\n\n      it('blocks access in Exam mode', async () => {\n        const res = await fetch(`${previewPageInfo.questionBaseUrl}/${addNumbers.id}/preview`, {\n          headers: {\n            Cookie: 'pl_test_mode=Exam',\n          },\n        });\n        assert.equal(res.status, 403);\n      });\n    });\n\n    describe('When questions are share_publicly', () => {\n      before('Make sure questions have share_publicly set', async () => {\n        for (const testQuestion of testQuestions) {\n          await sqldb.queryAsync(sql.update_share_publicly, { question_id: testQuestion.id });\n        }\n      });\n      testQuestionPreviews(previewPageInfo, addNumbers, addVectors);\n      testFileDownloads(previewPageInfo, downloadFile, false);\n      testElementClientFiles(previewPageInfo, customElement);\n\n      it('blocks access in Exam mode', async () => {\n        const res = await fetch(`${previewPageInfo.questionBaseUrl}/${addNumbers.id}/preview`, {\n          headers: {\n            Cookie: 'pl_test_mode=Exam',\n          },\n        });\n        assert.equal(res.status, 403);\n      });\n    });\n  });\n\n  describe('Shared Question Previews Within a Course', () => {\n    const previewPageInfo = {\n      siteUrl,\n      baseUrl,\n      questionBaseUrl: baseUrl + '/course/2/question',\n      questionPreviewTabUrl: '/preview',\n      isStudentPage: false,\n    };\n\n    testQuestionPreviews(previewPageInfo, addNumbers, addVectors);\n\n    testFileDownloads(previewPageInfo, downloadFile, false);\n\n    testElementClientFiles(previewPageInfo, customElement);\n  });\n\n  describe('Shared Question Previews Within a Course Instance', () => {\n    const previewPageInfo = {\n      siteUrl,\n      baseUrl,\n      questionBaseUrl: baseUrl + '/course_instance/2/instructor/question',\n      questionPreviewTabUrl: '/preview',\n      isStudentPage: false,\n    };\n\n    testQuestionPreviews(previewPageInfo, addNumbers, addVectors);\n\n    testFileDownloads(previewPageInfo, downloadFile, false);\n\n    testElementClientFiles(previewPageInfo, customElement);\n  });\n});\n"]}