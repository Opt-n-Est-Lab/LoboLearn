{"version":3,"file":"check_course_instance_access.test.js","sourceRoot":"","sources":["../../../src/tests/sprocs/check_course_instance_access.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport * as helperDb from '../helperDb.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\ndescribe('sproc check_course_instance_access* tests', function () {\n  before('set up testing server', helperDb.before);\n  after('tear down testing database', helperDb.after);\n\n  before('setup sample environment', async () => {\n    await sqldb.queryAsync(sql.setup_cia_generic_tests, {});\n  });\n\n  it('pass if all parameters match', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@host.com',\n      date: '2010-07-07 06:06:06-00',\n      ciar_id: 1,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, true);\n  });\n\n  it('fail if uid (from school institution) not in list', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'user@school.edu',\n      date: '2010-07-07 06:06:06-00',\n      ciar_id: 1,\n      short_name: 'school',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('fail if uid (from host institution) not in list', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'unknown@host.com',\n      date: '2010-07-07 06:06:06-00',\n      ciar_id: 1,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('fail if date is before start_date', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@host.com',\n      date: '2007-07-07 06:06:06-00',\n      ciar_id: 1,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('fail if date is after end_date', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@host.com',\n      date: '2017-07-07 06:06:06-00',\n      ciar_id: 1,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('pass if institution matches', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@school.edu',\n      date: '2011-07-07 06:06:06-00',\n      ciar_id: 2,\n      short_name: 'school',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, true);\n  });\n\n  it('fail if institution specified and does not match', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@anotherschool.edu',\n      date: '2011-07-07 06:06:06-00',\n      ciar_id: 2,\n      short_name: 'anotherschool',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('fail if institution specified in rule is not in db', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@anotherschool.edu',\n      date: '2011-07-07 06:06:06-00',\n      ciar_id: 3,\n      short_name: 'anotherschool',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('pass if user matches course institution', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@school.edu',\n      date: '2013-07-07 06:06:06-00',\n      ciar_id: 4,\n      short_name: 'school',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, true);\n  });\n\n  it('fail if user does not match course institution', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'person1@school.edu',\n      date: '2013-07-07 06:06:06-00',\n      ciar_id: 4,\n      short_name: 'anotherschool',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('fail if institution=LTI and user is not created with a course instance', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'normaluser@host.com',\n      date: '2013-07-07 06:06:06-00',\n      ciar_id: 5,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('pass if institution=LTI and user is created with correct course instance', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'ltiuserci1@host.com',\n      date: '2013-07-07 06:06:06-00',\n      ciar_id: 5,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, true);\n  });\n\n  it('fail if institution=LTI and user is created with a different course instance', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'ltiuserci2@host.com',\n      date: '2013-07-07 06:06:06-00',\n      ciar_id: 5,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n\n  it('fail if date is after end_date and LTI matches', async () => {\n    const result = await sqldb.queryAsync(sql.ciar_test, {\n      uid: 'ltiuserci1@host.com',\n      date: '2017-07-07 06:06:06-00',\n      ciar_id: 5,\n      short_name: 'host',\n    });\n\n    assert.strictEqual(result.rows[0].authorized, false);\n  });\n});\n"]}