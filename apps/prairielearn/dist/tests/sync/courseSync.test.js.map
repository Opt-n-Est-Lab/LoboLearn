{"version":3,"file":"courseSync.test.js","sourceRoot":"","sources":["../../../src/tests/sync/courseSync.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\n\nimport { config } from '../../lib/config.js';\nimport { features } from '../../lib/features/index.js';\nimport { selectOrInsertCourseByPath } from '../../models/course.js';\nimport * as helperDb from '../helperDb.js';\n\nimport * as util from './util.js';\n\nconst [sampleFeature1, sampleFeature2] = features.allFeatures();\nconst invalidFeature = 'unknown-feature';\n\ndescribe('Course syncing', () => {\n  before('set up testing database', helperDb.before);\n  after('tear down testing database', helperDb.after);\n\n  beforeEach('reset testing database', helperDb.resetDatabase);\n\n  it('syncs for known features as object', async () => {\n    const courseData = util.getCourseData();\n    courseData.course.options = {\n      useNewQuestionRenderer: true,\n      devModeFeatures: { [sampleFeature1]: true },\n    };\n\n    const courseDir = await util.writeCourseToTempDirectory(courseData);\n    await util.syncCourseData(courseDir);\n\n    const syncedCourses = await util.dumpTable('pl_courses');\n    const syncedCourse = syncedCourses[0];\n    assert.isNotOk(syncedCourse?.sync_warnings);\n    assert.isNotOk(syncedCourse?.sync_errors);\n  });\n\n  it('syncs for known features as array', async () => {\n    const courseData = util.getCourseData();\n    courseData.course.options = {\n      useNewQuestionRenderer: true,\n      devModeFeatures: [sampleFeature1],\n    };\n\n    const courseDir = await util.writeCourseToTempDirectory(courseData);\n    await util.syncCourseData(courseDir);\n\n    const syncedCourses = await util.dumpTable('pl_courses');\n    const syncedCourse = syncedCourses[0];\n    assert.isNotOk(syncedCourse?.sync_warnings);\n    assert.isNotOk(syncedCourse?.sync_errors);\n  });\n\n  it('adds a warning for an unknown feature', async () => {\n    const courseData = util.getCourseData();\n    courseData.course.options = {\n      useNewQuestionRenderer: true,\n      devModeFeatures: { [invalidFeature]: true },\n    };\n\n    const courseDir = await util.writeCourseToTempDirectory(courseData);\n    await util.syncCourseData(courseDir);\n\n    const syncedCourses = await util.dumpTable('pl_courses');\n    const syncedCourse = syncedCourses[0];\n    assert.match(\n      syncedCourse?.sync_warnings,\n      new RegExp(`Feature \"${invalidFeature}\" does not exist.`),\n    );\n    assert.isNotOk(syncedCourse?.sync_errors);\n  });\n\n  it('adds a warning for a feature that is not enabled in non-dev environments', async () => {\n    const originalDevMode = config.devMode;\n    try {\n      config.devMode = false;\n\n      const courseData = util.getCourseData();\n      courseData.course.options = {\n        useNewQuestionRenderer: true,\n        devModeFeatures: {\n          [sampleFeature1]: true,\n          [sampleFeature2]: true,\n        },\n      };\n\n      const courseDir = await util.writeCourseToTempDirectory(courseData);\n\n      // We need to create the course first so that we can enable a feature for it.\n      const course = await selectOrInsertCourseByPath(courseDir);\n\n      await features.enable(sampleFeature1, {\n        institution_id: '1',\n        course_id: course.id,\n      });\n\n      await util.syncCourseData(courseDir);\n\n      const syncedCourses = await util.dumpTable('pl_courses');\n      const syncedCourse = syncedCourses[0];\n      assert.match(\n        syncedCourse?.sync_warnings,\n        new RegExp(\n          `Feature \"${sampleFeature2}\" is enabled in devModeFeatures, but is actually disabled.`,\n        ),\n      );\n      assert.notMatch(syncedCourse?.sync_warnings, new RegExp(sampleFeature1));\n      assert.isNotOk(syncedCourse?.sync_errors);\n    } finally {\n      config.devMode = originalDevMode;\n    }\n  });\n});\n"]}