{"version":3,"file":"workspaceAccess.test.js","sourceRoot":"","sources":["../../src/tests/workspaceAccess.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAC9B,OAAO,KAAK,OAAO,MAAM,SAAS,CAAC;AACnC,OAAO,EAAE,IAAI,EAAE,MAAM,aAAa,CAAC;AACnC,OAAO,KAAK,MAAM,YAAY,CAAC;AAE/B,OAAO,KAAK,KAAK,MAAM,wBAAwB,CAAC;AAEhD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,OAAO,KAAK,YAAY,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAiB,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE1D,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAEhD,MAAM,OAAO,GAAG,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC;AACxD,MAAM,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC;AAEhC,MAAM,UAAU,GAAa;IAC3B,GAAG,EAAE,sBAAsB;IAC3B,GAAG,EAAE,WAAW;IAChB,IAAI,EAAE,aAAa;CACpB,CAAC;AACF,MAAM,UAAU,GAAa;IAC3B,GAAG,EAAE,sBAAsB;IAC3B,GAAG,EAAE,WAAW;IAChB,IAAI,EAAE,aAAa;CACpB,CAAC;AACF,MAAM,kBAAkB,GAAa;IACnC,GAAG,EAAE,kCAAkC;IACvC,GAAG,EAAE,WAAW;IAChB,IAAI,EAAE,cAAc;CACrB,CAAC;AAEF,QAAQ,CAAC,qCAAqC,EAAE;IAC9C,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAEpB,MAAM,CAAC,8BAA8B,EAAE,KAAK;QAC1C,MAAM,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,6BAA6B,EAAE,KAAK;QACxC,MAAM,CAAC,eAAe,GAAG,IAAI,CAAC;IAChC,CAAC,CAAC,CAAC;IACH,MAAM,CAAC,uBAAuB,EAAE,YAAY,CAAC,MAAM,EAAE,CAAC,CAAC;IACvD,KAAK,CAAC,0BAA0B,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;IACtD,MAAM,CAAC,6BAA6B,EAAE,KAAK;QACzC,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QACpD,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;QAE3E,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QACpD,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,qBAAqB,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;QAE3E,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wDAAwD,EAAE;QACjE,IAAI,YAAgC,CAAC;QACrC,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,MAAM,GAAG,CAAC,MAAM,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,aAAa,GACjB,OAAO,GAAG,0CAA0C,MAAM,CAAC,WAAW,UAAU,CAAC;YACnF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;YAE5C,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9C,MAAM,cAAc,GAAG,CAAC,CAAC,8BAA8B,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEvC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;YACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,QAAQ,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;gBAC5C,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6DAA6D,EAAE;QACtE,MAAM,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;YACpD,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,wBAAwB,EAAE;gBACnD,GAAG,EAAE,MAAM,CAAC,OAAO;aACpB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YAC1D,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,YAAgC,CAAC;QACrC,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,MAAM,GAAG,CAAC,MAAM,KAAK,CAAC,gBAAgB,CAAC,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,aAAa,GAAG,OAAO,GAAG,sBAAsB,MAAM,CAAC,WAAW,UAAU,CAAC;YACnF,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,aAAa,CAAC,CAAC;YAE5C,MAAM,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;YAC9C,MAAM,cAAc,GAAG,CAAC,CAAC,8BAA8B,CAAC,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;YAEvC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACjF,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;YACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YAC3D,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,QAAQ,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;gBAC5C,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gCAAgC,EAAE;QACzC,IAAI,YAAgC,CAAC;QACrC,IAAI,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YAC1C,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,eAAe,GAAG,OAAO,GAAG,gCAAgC,CAAC;gBACnE,MAAM,oBAAoB,GAAG,MAAM,KAAK,CAAC,eAAe,CAAC,CAAC;gBAC1D,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC;gBAErE,MAAM,OAAO,GAAG,OAAO,GAAG,YAAY,CAAC,sCAAsC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC5F,MAAM,YAAY,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC;gBAErD,MAAM,sBAAsB,GAAG,OAAO,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3F,MAAM,iBAAiB,GAAG,MAAM,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBAC9D,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC;gBAE/D,MAAM,cAAc,GAAG,SAAS,CAAC,8BAA8B,CAAC,CAAC;gBACjE,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;gBACvC,YAAY,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACjF,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;YACnD,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;YACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;YACtD,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,QAAQ,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE;gBACpC,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,QAAQ,CAAC,kBAAkB,EAAE,KAAK,IAAI,EAAE;gBAC5C,MAAM,GAAG,GAAG,OAAO,GAAG,cAAc,YAAY,EAAE,CAAC;gBACnD,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport { step } from 'mocha-steps';\nimport fetch from 'node-fetch';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\n\nimport * as helperServer from './helperServer.js';\nimport { type AuthUser, withUser } from './utils/auth.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst siteUrl = 'http://localhost:' + config.serverPort;\nconst baseUrl = siteUrl + '/pl';\n\nconst studentOne: AuthUser = {\n  uid: 'student1@example.com',\n  uin: '000000001',\n  name: 'Student One',\n};\nconst studentTwo: AuthUser = {\n  uid: 'student2@example.com',\n  uin: '000000002',\n  name: 'Student Two',\n};\nconst studentNotEnrolled: AuthUser = {\n  uid: 'student_not_enrolled@example.com',\n  uin: '000000003',\n  name: 'Not Enrolled',\n};\n\ndescribe('Test workspace authorization access', function () {\n  this.timeout(20000);\n\n  before('disable workspace containers', async function () {\n    config.workspaceEnable = false;\n  });\n  after('enable workspace containers', async function () {\n    config.workspaceEnable = true;\n  });\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n  before('add students to test course', async function () {\n    await sqldb.queryAsync(sql.create_user, studentOne);\n    await sqldb.queryAsync(sql.enroll_student_by_uid, { uid: studentOne.uid });\n\n    await sqldb.queryAsync(sql.create_user, studentTwo);\n    await sqldb.queryAsync(sql.enroll_student_by_uid, { uid: studentTwo.uid });\n\n    await sqldb.queryAsync(sql.create_user, studentNotEnrolled);\n  });\n\n  describe('workspaces created by instructors in a course instance', function () {\n    let workspace_id: string | undefined;\n    step('create instructor workspace', async () => {\n      const result = (await sqldb.queryOneRowAsync(sql.get_test_question, {})).rows[0];\n      const workspace_url =\n        baseUrl + `/course_instance/1/instructor/question/${result.question_id}/preview`;\n      const response = await fetch(workspace_url);\n\n      const $ = cheerio.load(await response.text());\n      const workspace_btns = $('a:contains(\"Open workspace\")');\n      assert.equal(workspace_btns.length, 1);\n\n      workspace_id = workspace_btns.attr('href')?.match('/pl/workspace/([0-9]+)')?.[1];\n      assert.isDefined(workspace_id);\n    });\n    step('can be accessed by the instructor', async () => {\n      const url = baseUrl + `/workspace/${workspace_id}`;\n      const response = await fetch(url);\n      assert.equal(response.status, 200);\n    });\n    step(\"can't be accessed by enrolled student one\", async () => {\n      await withUser(studentOne, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n    step(\"can't be accessed by enrolled student two\", async () => {\n      await withUser(studentTwo, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n    step(\"can't be accessed by an unenrolled user\", async () => {\n      await withUser(studentNotEnrolled, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n  });\n\n  describe('workspaces created by instructors in a course (no instance)', function () {\n    before('give the instructor owner access', async () => {\n      await sqldb.queryAsync(sql.give_owner_access_to_uid, {\n        uid: config.authUid,\n      });\n    });\n    after('revoke owner access from the instructor', async () => {\n      await sqldb.queryAsync(sql.revoke_owner_access, {});\n    });\n\n    let workspace_id: string | undefined;\n    step('create instructor workspace', async () => {\n      const result = (await sqldb.queryOneRowAsync(sql.get_test_question, {})).rows[0];\n      const workspace_url = baseUrl + `/course/1/question/${result.question_id}/preview`;\n      const response = await fetch(workspace_url);\n\n      const $ = cheerio.load(await response.text());\n      const workspace_btns = $('a:contains(\"Open workspace\")');\n      assert.equal(workspace_btns.length, 1);\n\n      workspace_id = workspace_btns.attr('href')?.match('/pl/workspace/([0-9]+)')?.[1];\n      assert.isDefined(workspace_id);\n    });\n    step('can be accessed by the instructor', async () => {\n      const url = baseUrl + `/workspace/${workspace_id}`;\n      const response = await fetch(url);\n      assert.equal(response.status, 200);\n    });\n    step(\"can't be accessed by enrolled student one\", async () => {\n      await withUser(studentOne, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n    step(\"can't be accessed by enrolled student two\", async () => {\n      await withUser(studentTwo, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n    step(\"can't be accessed by an unenrolled user\", async () => {\n      await withUser(studentNotEnrolled, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n  });\n\n  describe('workspaces created by students', function () {\n    let workspace_id: string | undefined;\n    step('create student workspace', async () => {\n      await withUser(studentOne, async () => {\n        const assessments_url = baseUrl + '/course_instance/1/assessments';\n        const assessments_response = await fetch(assessments_url);\n        const $assessments = cheerio.load(await assessments_response.text());\n\n        const hw2_url = siteUrl + $assessments('a:contains(\"Miscellaneous homework\")').attr('href');\n        const hw2_response = await fetch(hw2_url);\n        const $hw2 = cheerio.load(await hw2_response.text());\n\n        const workspace_question_url = siteUrl + $hw2('a:contains(\"Workspace test\")').attr('href');\n        const question_response = await fetch(workspace_question_url);\n        const $question = cheerio.load(await question_response.text());\n\n        const workspace_btns = $question('a:contains(\"Open workspace\")');\n        assert.equal(workspace_btns.length, 1);\n        workspace_id = workspace_btns.attr('href')?.match('/pl/workspace/([0-9]+)')?.[1];\n        assert.isDefined(workspace_id);\n      });\n    });\n    step('can be accessed by the instructor', async () => {\n      const url = baseUrl + `/workspace/${workspace_id}`;\n      const response = await fetch(url);\n      assert.equal(response.status, 200);\n    });\n    step('can be accessed by the student owner', async () => {\n      await withUser(studentOne, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 200);\n      });\n    });\n    step(\"can't be accessed by another enrolled student\", async () => {\n      await withUser(studentTwo, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n    step(\"can't be accessed by an unenrolled user\", async () => {\n      await withUser(studentNotEnrolled, async () => {\n        const url = baseUrl + `/workspace/${workspace_id}`;\n        const response = await fetch(url);\n        assert.equal(response.status, 403);\n      });\n    });\n  });\n});\n"]}