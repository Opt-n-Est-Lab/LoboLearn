{"version":3,"file":"zoneGradingHomework.test.js","sourceRoot":"","sources":["../../src/tests/zoneGradingHomework.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from 'chai';\nimport * as cheerio from 'cheerio';\nimport _ from 'lodash';\nimport fetch from 'node-fetch';\n\nimport * as sqldb from '@prairielearn/postgres';\n\nimport { config } from '../lib/config.js';\n\nimport * as helperQuestion from './helperQuestion.js';\nimport * as helperServer from './helperServer.js';\n\nconst sql = sqldb.loadSqlEquiv(import.meta.url);\n\nconst locals: Record<string, any> = {};\n\ninterface TestQuestion {\n  qid: string;\n  type: string;\n  maxPoints: number;\n  points?: number;\n  id?: number | string;\n  url?: string;\n  submission_score?: number;\n}\n\ninterface TestZone {\n  qid: string;\n  score: number;\n  sub_points: number;\n  sub_total_points: number;\n  submission_score?: number;\n}\n\nconst questionsArray: TestQuestion[] = [\n  { qid: 'partialCredit4_v2', type: 'Calculation', maxPoints: 8 },\n  { qid: 'partialCredit1', type: 'Freeform', maxPoints: 30 },\n  { qid: 'partialCredit2', type: 'Freeform', maxPoints: 40 },\n  { qid: 'partialCredit3', type: 'Freeform', maxPoints: 50 },\n];\n\nconst questions = _.keyBy(questionsArray, 'qid');\n\nconst assessmentMaxPoints = 57;\n\n// score: value to submit, will be the percentage score for the submission\n// sub_points: additional awarded points for this submission\n// sub_total_points: additional total points for this submission\nconst zoneGradingTests: TestZone[][] = [\n  [\n    {\n      qid: 'partialCredit1',\n      score: 100,\n      sub_points: 5,\n      sub_total_points: 5,\n    },\n    {\n      qid: 'partialCredit2',\n      score: 100,\n      sub_points: 5,\n      sub_total_points: 0,\n    },\n    {\n      qid: 'partialCredit2',\n      score: 100,\n      sub_points: 10,\n      sub_total_points: 10,\n    },\n    {\n      qid: 'partialCredit1',\n      score: 0,\n      sub_points: 0,\n      sub_total_points: 0,\n    },\n    {\n      qid: 'partialCredit4_v2',\n      score: 100,\n      sub_points: 4,\n      sub_total_points: 4,\n    },\n    {\n      qid: 'partialCredit3',\n      score: 100,\n      sub_points: 5,\n      sub_total_points: 0,\n    },\n    {\n      qid: 'partialCredit3',\n      score: 100,\n      sub_points: 10,\n      sub_total_points: 0,\n    },\n    {\n      qid: 'partialCredit3',\n      score: 40,\n      sub_points: 2,\n      sub_total_points: 2,\n    },\n    {\n      qid: 'partialCredit4_v2',\n      score: 100,\n      sub_points: 4,\n      sub_total_points: 3,\n    },\n    {\n      qid: 'partialCredit4_v2',\n      score: 100,\n      sub_points: 0,\n      sub_total_points: 0,\n    },\n    {\n      qid: 'partialCredit1',\n      score: 100,\n      sub_points: 5,\n      sub_total_points: 0,\n    },\n    {\n      qid: 'partialCredit1',\n      score: 100,\n      sub_points: 10,\n      sub_total_points: 3,\n    },\n    {\n      qid: 'partialCredit1',\n      score: 100,\n      sub_points: 10,\n      sub_total_points: 10,\n    },\n    {\n      qid: 'partialCredit2',\n      score: 100,\n      sub_points: 15,\n      sub_total_points: 0,\n    },\n  ],\n];\n\ndescribe('Zone grading homework assessment', function () {\n  this.timeout(60000);\n\n  before('set up testing server', helperServer.before());\n  after('shut down testing server', helperServer.after);\n\n  function startAssessment() {\n    describe('the locals object', function () {\n      it('should be cleared', function () {\n        for (const prop in locals) {\n          delete locals[prop];\n        }\n      });\n      it('should be initialized', function () {\n        locals.siteUrl = 'http://localhost:' + config.serverPort;\n        locals.baseUrl = locals.siteUrl + '/pl';\n        locals.courseInstanceBaseUrl = locals.baseUrl + '/course_instance/1';\n        locals.questionBaseUrl = locals.courseInstanceBaseUrl + '/instance_question';\n        locals.assessmentsUrl = locals.courseInstanceBaseUrl + '/assessments';\n        locals.isStudentPage = true;\n        locals.totalPoints = 0;\n      });\n    });\n\n    describe('the questions', function () {\n      it('should have cleared data', function () {\n        questionsArray.forEach(function (question) {\n          for (const prop in question) {\n            if (prop !== 'qid' && prop !== 'type' && prop !== 'maxPoints') {\n              delete question[prop];\n            }\n          }\n          question.points = 0;\n        });\n      });\n    });\n\n    describe('the database', function () {\n      it('should contain HW4', async () => {\n        const result = await sqldb.queryOneRowAsync(sql.select_hw4, []);\n        locals.assessment_id = result.rows[0].id;\n      });\n    });\n\n    describe('GET ' + locals.assessmentsUrl, function () {\n      it('should load successfully', async () => {\n        const res = await fetch(locals.assessmentsUrl);\n        assert.equal(res.status, 200);\n        const page = await res.text();\n        locals.$ = cheerio.load(page);\n      });\n      it('should have correct link for \"Homework to test per-zone grading\"', function () {\n        const elemList = locals.$('td a:contains(\"Homework to test per-zone grading\")');\n        assert.lengthOf(elemList, 1);\n\n        locals.assessmentUrl = locals.siteUrl + elemList[0].attribs.href;\n        assert.equal(\n          locals.assessmentUrl,\n          locals.courseInstanceBaseUrl + '/assessment/' + locals.assessment_id + '/',\n        );\n      });\n    });\n\n    describe('GET to assessment URL', function () {\n      it('should load successfully', async () => {\n        locals.preStartTime = Date.now();\n\n        const res = await fetch(locals.assessmentUrl);\n        assert.equal(res.status, 200);\n        const page = await res.text();\n        locals.$ = cheerio.load(page);\n\n        // Check that we redirected to the correct URL\n        const url = new URL(res.url);\n        locals.assessmentInstanceUrl = locals.siteUrl + url.pathname;\n        assert.equal(url.pathname, '/pl/course_instance/1/assessment_instance/1');\n\n        locals.postStartTime = Date.now();\n      });\n      it('should create one assessment_instance', async () => {\n        const result = await sqldb.queryAsync(sql.select_assessment_instances, []);\n        if (result.rowCount !== 1) {\n          throw new Error('expected one assessment_instance, got: ' + result.rowCount);\n        }\n        locals.assessment_instance = result.rows[0];\n      });\n      it('should have the correct assessment_instance.assessment_id', function () {\n        assert.equal(locals.assessment_instance.assessment_id, locals.assessment_id);\n      });\n      it(`should create ${questionsArray.length} instance_questions`, async () => {\n        const result = await sqldb.queryAsync(sql.select_instance_questions, []);\n        if (result.rowCount !== questionsArray.length) {\n          throw new Error(\n            `expected ${questionsArray.length} instance_questions, got: ` + result.rowCount,\n          );\n        }\n        locals.instance_questions = result.rows;\n      });\n      questionsArray.forEach(function (question, i) {\n        it(`should have question #${i + 1} as QID ${question.qid}`, function () {\n          question.id = locals.instance_questions[i].id;\n          assert.equal(locals.instance_questions[i].qid, question.qid);\n        });\n      });\n    });\n\n    describe('GET to assessment_instance URL', function () {\n      it('should load successfully', async () => {\n        const res = await fetch(locals.assessmentInstanceUrl);\n        assert.equal(res.status, 200);\n        const page = await res.text();\n        locals.$ = cheerio.load(page);\n      });\n      questionsArray.forEach(function (question) {\n        it(`should link to ${question.qid} question`, function () {\n          const urlTail = '/pl/course_instance/1/instance_question/' + question.id + '/';\n          question.url = locals.siteUrl + urlTail;\n          const elemList = locals.$(`td a[href=\"${urlTail}\"]`);\n          assert.lengthOf(elemList, 1);\n        });\n      });\n    });\n  }\n\n  zoneGradingTests.forEach(function (zoneGradingTest, iZoneGradingTest) {\n    describe(`zone grading test #${iZoneGradingTest + 1}`, function () {\n      describe('server', function () {\n        it('should shut down', async function () {\n          // pass \"this\" explicitly to enable this.timeout() calls\n          await helperServer.after.call(this);\n        });\n        it('should start up', async function () {\n          // pass \"this\" explicitly to enable this.timeout() calls\n          await helperServer.before().call(this);\n        });\n      });\n\n      startAssessment();\n\n      zoneGradingTest.forEach(function (questionTest, iQuestionTest) {\n        describe(`grade answer number #${iQuestionTest + 1} for question ${\n          questionTest.qid\n        } with score ${questionTest.score}`, function () {\n          describe('setting up the submission data', function () {\n            it('should succeed', function () {\n              locals.shouldHaveButtons = ['grade', 'save'];\n              locals.postAction = 'grade';\n              locals.question = questions[questionTest.qid];\n              locals.question.points += questionTest.sub_points;\n              locals.totalPoints += questionTest.sub_total_points;\n              const submission_score =\n                questionTest.submission_score == null\n                  ? questionTest.score\n                  : questionTest.submission_score;\n              locals.expectedResult = {\n                submission_score: submission_score / 100,\n                submission_correct: submission_score === 100,\n                instance_question_points: locals.question.points,\n                instance_question_score_perc:\n                  (locals.question.points / locals.question.maxPoints) * 100,\n                instance_question_auto_points: locals.question.points,\n                instance_question_manual_points: 0,\n                assessment_instance_points: locals.totalPoints,\n                assessment_instance_score_perc: (locals.totalPoints / assessmentMaxPoints) * 100,\n              };\n              locals.getSubmittedAnswer = function (_variant) {\n                return {\n                  s: String(questionTest.score),\n                };\n              };\n            });\n          });\n          helperQuestion.getInstanceQuestion(locals);\n          helperQuestion.postInstanceQuestion(locals);\n          helperQuestion.checkQuestionScore(locals);\n          helperQuestion.checkAssessmentScore(locals);\n        });\n      });\n    });\n  });\n});\n"]}