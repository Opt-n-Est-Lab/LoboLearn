import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { AutoScalingServiceException as __BaseException } from "./AutoScalingServiceException";
export interface AcceleratorCountRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export declare const AcceleratorManufacturer: {
  readonly AMAZON_WEB_SERVICES: "amazon-web-services";
  readonly AMD: "amd";
  readonly NVIDIA: "nvidia";
  readonly XILINX: "xilinx";
};
export type AcceleratorManufacturer =
  (typeof AcceleratorManufacturer)[keyof typeof AcceleratorManufacturer];
export declare const AcceleratorName: {
  readonly A100: "a100";
  readonly K80: "k80";
  readonly M60: "m60";
  readonly RADEON_PRO_V520: "radeon-pro-v520";
  readonly T4: "t4";
  readonly V100: "v100";
  readonly VU9P: "vu9p";
};
export type AcceleratorName =
  (typeof AcceleratorName)[keyof typeof AcceleratorName];
export interface AcceleratorTotalMemoryMiBRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export declare const AcceleratorType: {
  readonly FPGA: "fpga";
  readonly GPU: "gpu";
  readonly INFERENCE: "inference";
};
export type AcceleratorType =
  (typeof AcceleratorType)[keyof typeof AcceleratorType];
export declare class ActiveInstanceRefreshNotFoundFault extends __BaseException {
  readonly name: "ActiveInstanceRefreshNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ActiveInstanceRefreshNotFoundFault,
      __BaseException
    >
  );
}
export declare const ScalingActivityStatusCode: {
  readonly Cancelled: "Cancelled";
  readonly Failed: "Failed";
  readonly InProgress: "InProgress";
  readonly MidLifecycleAction: "MidLifecycleAction";
  readonly PendingSpotBidPlacement: "PendingSpotBidPlacement";
  readonly PreInService: "PreInService";
  readonly Successful: "Successful";
  readonly WaitingForConnectionDraining: "WaitingForConnectionDraining";
  readonly WaitingForELBConnectionDraining: "WaitingForELBConnectionDraining";
  readonly WaitingForInstanceId: "WaitingForInstanceId";
  readonly WaitingForInstanceWarmup: "WaitingForInstanceWarmup";
  readonly WaitingForSpotInstanceId: "WaitingForSpotInstanceId";
  readonly WaitingForSpotInstanceRequestId: "WaitingForSpotInstanceRequestId";
};
export type ScalingActivityStatusCode =
  (typeof ScalingActivityStatusCode)[keyof typeof ScalingActivityStatusCode];
export interface Activity {
  ActivityId: string | undefined;
  AutoScalingGroupName: string | undefined;
  Description?: string | undefined;
  Cause: string | undefined;
  StartTime: Date | undefined;
  EndTime?: Date | undefined;
  StatusCode: ScalingActivityStatusCode | undefined;
  StatusMessage?: string | undefined;
  Progress?: number | undefined;
  Details?: string | undefined;
  AutoScalingGroupState?: string | undefined;
  AutoScalingGroupARN?: string | undefined;
}
export interface ActivitiesType {
  Activities: Activity[] | undefined;
  NextToken?: string | undefined;
}
export interface ActivityType {
  Activity?: Activity | undefined;
}
export interface AdjustmentType {
  AdjustmentType?: string | undefined;
}
export interface Alarm {
  AlarmName?: string | undefined;
  AlarmARN?: string | undefined;
}
export interface AlarmSpecification {
  Alarms?: string[] | undefined;
}
export declare class AlreadyExistsFault extends __BaseException {
  readonly name: "AlreadyExistsFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<AlreadyExistsFault, __BaseException>);
}
export interface AttachInstancesQuery {
  InstanceIds?: string[] | undefined;
  AutoScalingGroupName: string | undefined;
}
export declare class ResourceContentionFault extends __BaseException {
  readonly name: "ResourceContentionFault";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ResourceContentionFault, __BaseException>
  );
}
export declare class ServiceLinkedRoleFailure extends __BaseException {
  readonly name: "ServiceLinkedRoleFailure";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceLinkedRoleFailure, __BaseException>
  );
}
export interface AttachLoadBalancersResultType {}
export interface AttachLoadBalancersType {
  AutoScalingGroupName: string | undefined;
  LoadBalancerNames: string[] | undefined;
}
export interface AttachLoadBalancerTargetGroupsResultType {}
export interface AttachLoadBalancerTargetGroupsType {
  AutoScalingGroupName: string | undefined;
  TargetGroupARNs: string[] | undefined;
}
export interface AttachTrafficSourcesResultType {}
export interface TrafficSourceIdentifier {
  Identifier: string | undefined;
  Type?: string | undefined;
}
export interface AttachTrafficSourcesType {
  AutoScalingGroupName: string | undefined;
  TrafficSources: TrafficSourceIdentifier[] | undefined;
  SkipZonalShiftValidation?: boolean | undefined;
}
export interface FailedScheduledUpdateGroupActionRequest {
  ScheduledActionName: string | undefined;
  ErrorCode?: string | undefined;
  ErrorMessage?: string | undefined;
}
export interface BatchDeleteScheduledActionAnswer {
  FailedScheduledActions?:
    | FailedScheduledUpdateGroupActionRequest[]
    | undefined;
}
export interface BatchDeleteScheduledActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionNames: string[] | undefined;
}
export interface BatchPutScheduledUpdateGroupActionAnswer {
  FailedScheduledUpdateGroupActions?:
    | FailedScheduledUpdateGroupActionRequest[]
    | undefined;
}
export interface ScheduledUpdateGroupActionRequest {
  ScheduledActionName: string | undefined;
  StartTime?: Date | undefined;
  EndTime?: Date | undefined;
  Recurrence?: string | undefined;
  MinSize?: number | undefined;
  MaxSize?: number | undefined;
  DesiredCapacity?: number | undefined;
  TimeZone?: string | undefined;
}
export interface BatchPutScheduledUpdateGroupActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledUpdateGroupActions: ScheduledUpdateGroupActionRequest[] | undefined;
}
export declare class LimitExceededFault extends __BaseException {
  readonly name: "LimitExceededFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<LimitExceededFault, __BaseException>);
}
export interface CancelInstanceRefreshAnswer {
  InstanceRefreshId?: string | undefined;
}
export interface CancelInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
}
export interface CompleteLifecycleActionAnswer {}
export interface CompleteLifecycleActionType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleActionToken?: string | undefined;
  LifecycleActionResult: string | undefined;
  InstanceId?: string | undefined;
}
export declare const CapacityDistributionStrategy: {
  readonly BALANCED_BEST_EFFORT: "balanced-best-effort";
  readonly BALANCED_ONLY: "balanced-only";
};
export type CapacityDistributionStrategy =
  (typeof CapacityDistributionStrategy)[keyof typeof CapacityDistributionStrategy];
export interface AvailabilityZoneDistribution {
  CapacityDistributionStrategy?: CapacityDistributionStrategy | undefined;
}
export declare const ImpairedZoneHealthCheckBehavior: {
  readonly IgnoreUnhealthy: "IgnoreUnhealthy";
  readonly ReplaceUnhealthy: "ReplaceUnhealthy";
};
export type ImpairedZoneHealthCheckBehavior =
  (typeof ImpairedZoneHealthCheckBehavior)[keyof typeof ImpairedZoneHealthCheckBehavior];
export interface AvailabilityZoneImpairmentPolicy {
  ZonalShiftEnabled?: boolean | undefined;
  ImpairedZoneHealthCheckBehavior?: ImpairedZoneHealthCheckBehavior | undefined;
}
export declare const CapacityReservationPreference: {
  readonly CapacityReservationsFirst: "capacity-reservations-first";
  readonly CapacityReservationsOnly: "capacity-reservations-only";
  readonly Default: "default";
  readonly None: "none";
};
export type CapacityReservationPreference =
  (typeof CapacityReservationPreference)[keyof typeof CapacityReservationPreference];
export interface CapacityReservationTarget {
  CapacityReservationIds?: string[] | undefined;
  CapacityReservationResourceGroupArns?: string[] | undefined;
}
export interface CapacityReservationSpecification {
  CapacityReservationPreference?: CapacityReservationPreference | undefined;
  CapacityReservationTarget?: CapacityReservationTarget | undefined;
}
export interface InstanceMaintenancePolicy {
  MinHealthyPercentage?: number | undefined;
  MaxHealthyPercentage?: number | undefined;
}
export interface LaunchTemplateSpecification {
  LaunchTemplateId?: string | undefined;
  LaunchTemplateName?: string | undefined;
  Version?: string | undefined;
}
export interface LifecycleHookSpecification {
  LifecycleHookName: string | undefined;
  LifecycleTransition: string | undefined;
  NotificationMetadata?: string | undefined;
  HeartbeatTimeout?: number | undefined;
  DefaultResult?: string | undefined;
  NotificationTargetARN?: string | undefined;
  RoleARN?: string | undefined;
}
export interface InstancesDistribution {
  OnDemandAllocationStrategy?: string | undefined;
  OnDemandBaseCapacity?: number | undefined;
  OnDemandPercentageAboveBaseCapacity?: number | undefined;
  SpotAllocationStrategy?: string | undefined;
  SpotInstancePools?: number | undefined;
  SpotMaxPrice?: string | undefined;
}
export declare const BareMetal: {
  readonly EXCLUDED: "excluded";
  readonly INCLUDED: "included";
  readonly REQUIRED: "required";
};
export type BareMetal = (typeof BareMetal)[keyof typeof BareMetal];
export interface BaselineEbsBandwidthMbpsRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export interface PerformanceFactorReferenceRequest {
  InstanceFamily?: string | undefined;
}
export interface CpuPerformanceFactorRequest {
  References?: PerformanceFactorReferenceRequest[] | undefined;
}
export interface BaselinePerformanceFactorsRequest {
  Cpu?: CpuPerformanceFactorRequest | undefined;
}
export declare const BurstablePerformance: {
  readonly EXCLUDED: "excluded";
  readonly INCLUDED: "included";
  readonly REQUIRED: "required";
};
export type BurstablePerformance =
  (typeof BurstablePerformance)[keyof typeof BurstablePerformance];
export declare const CpuManufacturer: {
  readonly AMAZON_WEB_SERVICES: "amazon-web-services";
  readonly AMD: "amd";
  readonly INTEL: "intel";
};
export type CpuManufacturer =
  (typeof CpuManufacturer)[keyof typeof CpuManufacturer];
export declare const InstanceGeneration: {
  readonly CURRENT: "current";
  readonly PREVIOUS: "previous";
};
export type InstanceGeneration =
  (typeof InstanceGeneration)[keyof typeof InstanceGeneration];
export declare const LocalStorage: {
  readonly EXCLUDED: "excluded";
  readonly INCLUDED: "included";
  readonly REQUIRED: "required";
};
export type LocalStorage = (typeof LocalStorage)[keyof typeof LocalStorage];
export declare const LocalStorageType: {
  readonly HDD: "hdd";
  readonly SSD: "ssd";
};
export type LocalStorageType =
  (typeof LocalStorageType)[keyof typeof LocalStorageType];
export interface MemoryGiBPerVCpuRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export interface MemoryMiBRequest {
  Min: number | undefined;
  Max?: number | undefined;
}
export interface NetworkBandwidthGbpsRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export interface NetworkInterfaceCountRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export interface TotalLocalStorageGBRequest {
  Min?: number | undefined;
  Max?: number | undefined;
}
export interface VCpuCountRequest {
  Min: number | undefined;
  Max?: number | undefined;
}
export interface InstanceRequirements {
  VCpuCount: VCpuCountRequest | undefined;
  MemoryMiB: MemoryMiBRequest | undefined;
  CpuManufacturers?: CpuManufacturer[] | undefined;
  MemoryGiBPerVCpu?: MemoryGiBPerVCpuRequest | undefined;
  ExcludedInstanceTypes?: string[] | undefined;
  InstanceGenerations?: InstanceGeneration[] | undefined;
  SpotMaxPricePercentageOverLowestPrice?: number | undefined;
  MaxSpotPriceAsPercentageOfOptimalOnDemandPrice?: number | undefined;
  OnDemandMaxPricePercentageOverLowestPrice?: number | undefined;
  BareMetal?: BareMetal | undefined;
  BurstablePerformance?: BurstablePerformance | undefined;
  RequireHibernateSupport?: boolean | undefined;
  NetworkInterfaceCount?: NetworkInterfaceCountRequest | undefined;
  LocalStorage?: LocalStorage | undefined;
  LocalStorageTypes?: LocalStorageType[] | undefined;
  TotalLocalStorageGB?: TotalLocalStorageGBRequest | undefined;
  BaselineEbsBandwidthMbps?: BaselineEbsBandwidthMbpsRequest | undefined;
  AcceleratorTypes?: AcceleratorType[] | undefined;
  AcceleratorCount?: AcceleratorCountRequest | undefined;
  AcceleratorManufacturers?: AcceleratorManufacturer[] | undefined;
  AcceleratorNames?: AcceleratorName[] | undefined;
  AcceleratorTotalMemoryMiB?: AcceleratorTotalMemoryMiBRequest | undefined;
  NetworkBandwidthGbps?: NetworkBandwidthGbpsRequest | undefined;
  AllowedInstanceTypes?: string[] | undefined;
  BaselinePerformanceFactors?: BaselinePerformanceFactorsRequest | undefined;
}
export interface LaunchTemplateOverrides {
  InstanceType?: string | undefined;
  WeightedCapacity?: string | undefined;
  LaunchTemplateSpecification?: LaunchTemplateSpecification | undefined;
  InstanceRequirements?: InstanceRequirements | undefined;
}
export interface LaunchTemplate {
  LaunchTemplateSpecification?: LaunchTemplateSpecification | undefined;
  Overrides?: LaunchTemplateOverrides[] | undefined;
}
export interface MixedInstancesPolicy {
  LaunchTemplate?: LaunchTemplate | undefined;
  InstancesDistribution?: InstancesDistribution | undefined;
}
export interface Tag {
  ResourceId?: string | undefined;
  ResourceType?: string | undefined;
  Key: string | undefined;
  Value?: string | undefined;
  PropagateAtLaunch?: boolean | undefined;
}
export interface CreateAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  LaunchConfigurationName?: string | undefined;
  LaunchTemplate?: LaunchTemplateSpecification | undefined;
  MixedInstancesPolicy?: MixedInstancesPolicy | undefined;
  InstanceId?: string | undefined;
  MinSize: number | undefined;
  MaxSize: number | undefined;
  DesiredCapacity?: number | undefined;
  DefaultCooldown?: number | undefined;
  AvailabilityZones?: string[] | undefined;
  LoadBalancerNames?: string[] | undefined;
  TargetGroupARNs?: string[] | undefined;
  HealthCheckType?: string | undefined;
  HealthCheckGracePeriod?: number | undefined;
  PlacementGroup?: string | undefined;
  VPCZoneIdentifier?: string | undefined;
  TerminationPolicies?: string[] | undefined;
  NewInstancesProtectedFromScaleIn?: boolean | undefined;
  CapacityRebalance?: boolean | undefined;
  LifecycleHookSpecificationList?: LifecycleHookSpecification[] | undefined;
  Tags?: Tag[] | undefined;
  ServiceLinkedRoleARN?: string | undefined;
  MaxInstanceLifetime?: number | undefined;
  Context?: string | undefined;
  DesiredCapacityType?: string | undefined;
  DefaultInstanceWarmup?: number | undefined;
  TrafficSources?: TrafficSourceIdentifier[] | undefined;
  InstanceMaintenancePolicy?: InstanceMaintenancePolicy | undefined;
  AvailabilityZoneDistribution?: AvailabilityZoneDistribution | undefined;
  AvailabilityZoneImpairmentPolicy?:
    | AvailabilityZoneImpairmentPolicy
    | undefined;
  SkipZonalShiftValidation?: boolean | undefined;
  CapacityReservationSpecification?:
    | CapacityReservationSpecification
    | undefined;
}
export interface Ebs {
  SnapshotId?: string | undefined;
  VolumeSize?: number | undefined;
  VolumeType?: string | undefined;
  DeleteOnTermination?: boolean | undefined;
  Iops?: number | undefined;
  Encrypted?: boolean | undefined;
  Throughput?: number | undefined;
}
export interface BlockDeviceMapping {
  VirtualName?: string | undefined;
  DeviceName: string | undefined;
  Ebs?: Ebs | undefined;
  NoDevice?: boolean | undefined;
}
export interface InstanceMonitoring {
  Enabled?: boolean | undefined;
}
export declare const InstanceMetadataEndpointState: {
  readonly Disabled: "disabled";
  readonly Enabled: "enabled";
};
export type InstanceMetadataEndpointState =
  (typeof InstanceMetadataEndpointState)[keyof typeof InstanceMetadataEndpointState];
export declare const InstanceMetadataHttpTokensState: {
  readonly Optional: "optional";
  readonly Required: "required";
};
export type InstanceMetadataHttpTokensState =
  (typeof InstanceMetadataHttpTokensState)[keyof typeof InstanceMetadataHttpTokensState];
export interface InstanceMetadataOptions {
  HttpTokens?: InstanceMetadataHttpTokensState | undefined;
  HttpPutResponseHopLimit?: number | undefined;
  HttpEndpoint?: InstanceMetadataEndpointState | undefined;
}
export interface CreateLaunchConfigurationType {
  LaunchConfigurationName: string | undefined;
  ImageId?: string | undefined;
  KeyName?: string | undefined;
  SecurityGroups?: string[] | undefined;
  ClassicLinkVPCId?: string | undefined;
  ClassicLinkVPCSecurityGroups?: string[] | undefined;
  UserData?: string | undefined;
  InstanceId?: string | undefined;
  InstanceType?: string | undefined;
  KernelId?: string | undefined;
  RamdiskId?: string | undefined;
  BlockDeviceMappings?: BlockDeviceMapping[] | undefined;
  InstanceMonitoring?: InstanceMonitoring | undefined;
  SpotPrice?: string | undefined;
  IamInstanceProfile?: string | undefined;
  EbsOptimized?: boolean | undefined;
  AssociatePublicIpAddress?: boolean | undefined;
  PlacementTenancy?: string | undefined;
  MetadataOptions?: InstanceMetadataOptions | undefined;
}
export interface CreateOrUpdateTagsType {
  Tags: Tag[] | undefined;
}
export declare class ResourceInUseFault extends __BaseException {
  readonly name: "ResourceInUseFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ResourceInUseFault, __BaseException>);
}
export interface DeleteAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  ForceDelete?: boolean | undefined;
}
export declare class ScalingActivityInProgressFault extends __BaseException {
  readonly name: "ScalingActivityInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ScalingActivityInProgressFault, __BaseException>
  );
}
export interface LaunchConfigurationNameType {
  LaunchConfigurationName: string | undefined;
}
export interface DeleteLifecycleHookAnswer {}
export interface DeleteLifecycleHookType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
}
export interface DeleteNotificationConfigurationType {
  AutoScalingGroupName: string | undefined;
  TopicARN: string | undefined;
}
export interface DeletePolicyType {
  AutoScalingGroupName?: string | undefined;
  PolicyName: string | undefined;
}
export interface DeleteScheduledActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionName: string | undefined;
}
export interface DeleteTagsType {
  Tags: Tag[] | undefined;
}
export interface DeleteWarmPoolAnswer {}
export interface DeleteWarmPoolType {
  AutoScalingGroupName: string | undefined;
  ForceDelete?: boolean | undefined;
}
export interface DescribeAccountLimitsAnswer {
  MaxNumberOfAutoScalingGroups?: number | undefined;
  MaxNumberOfLaunchConfigurations?: number | undefined;
  NumberOfAutoScalingGroups?: number | undefined;
  NumberOfLaunchConfigurations?: number | undefined;
}
export interface DescribeAdjustmentTypesAnswer {
  AdjustmentTypes?: AdjustmentType[] | undefined;
}
export interface Filter {
  Name?: string | undefined;
  Values?: string[] | undefined;
}
export interface AutoScalingGroupNamesType {
  AutoScalingGroupNames?: string[] | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
  Filters?: Filter[] | undefined;
}
export interface EnabledMetric {
  Metric?: string | undefined;
  Granularity?: string | undefined;
}
export declare const LifecycleState: {
  readonly DETACHED: "Detached";
  readonly DETACHING: "Detaching";
  readonly ENTERING_STANDBY: "EnteringStandby";
  readonly IN_SERVICE: "InService";
  readonly PENDING: "Pending";
  readonly PENDING_PROCEED: "Pending:Proceed";
  readonly PENDING_WAIT: "Pending:Wait";
  readonly QUARANTINED: "Quarantined";
  readonly STANDBY: "Standby";
  readonly TERMINATED: "Terminated";
  readonly TERMINATING: "Terminating";
  readonly TERMINATING_PROCEED: "Terminating:Proceed";
  readonly TERMINATING_WAIT: "Terminating:Wait";
  readonly WARMED_HIBERNATED: "Warmed:Hibernated";
  readonly WARMED_PENDING: "Warmed:Pending";
  readonly WARMED_PENDING_PROCEED: "Warmed:Pending:Proceed";
  readonly WARMED_PENDING_WAIT: "Warmed:Pending:Wait";
  readonly WARMED_RUNNING: "Warmed:Running";
  readonly WARMED_STOPPED: "Warmed:Stopped";
  readonly WARMED_TERMINATED: "Warmed:Terminated";
  readonly WARMED_TERMINATING: "Warmed:Terminating";
  readonly WARMED_TERMINATING_PROCEED: "Warmed:Terminating:Proceed";
  readonly WARMED_TERMINATING_WAIT: "Warmed:Terminating:Wait";
};
export type LifecycleState =
  (typeof LifecycleState)[keyof typeof LifecycleState];
export interface Instance {
  InstanceId: string | undefined;
  InstanceType?: string | undefined;
  AvailabilityZone: string | undefined;
  LifecycleState: LifecycleState | undefined;
  HealthStatus: string | undefined;
  LaunchConfigurationName?: string | undefined;
  LaunchTemplate?: LaunchTemplateSpecification | undefined;
  ProtectedFromScaleIn: boolean | undefined;
  WeightedCapacity?: string | undefined;
}
export interface SuspendedProcess {
  ProcessName?: string | undefined;
  SuspensionReason?: string | undefined;
}
export interface TagDescription {
  ResourceId?: string | undefined;
  ResourceType?: string | undefined;
  Key?: string | undefined;
  Value?: string | undefined;
  PropagateAtLaunch?: boolean | undefined;
}
export interface InstanceReusePolicy {
  ReuseOnScaleIn?: boolean | undefined;
}
export declare const WarmPoolState: {
  readonly Hibernated: "Hibernated";
  readonly Running: "Running";
  readonly Stopped: "Stopped";
};
export type WarmPoolState = (typeof WarmPoolState)[keyof typeof WarmPoolState];
export declare const WarmPoolStatus: {
  readonly PendingDelete: "PendingDelete";
};
export type WarmPoolStatus =
  (typeof WarmPoolStatus)[keyof typeof WarmPoolStatus];
export interface WarmPoolConfiguration {
  MaxGroupPreparedCapacity?: number | undefined;
  MinSize?: number | undefined;
  PoolState?: WarmPoolState | undefined;
  Status?: WarmPoolStatus | undefined;
  InstanceReusePolicy?: InstanceReusePolicy | undefined;
}
export interface AutoScalingGroup {
  AutoScalingGroupName: string | undefined;
  AutoScalingGroupARN?: string | undefined;
  LaunchConfigurationName?: string | undefined;
  LaunchTemplate?: LaunchTemplateSpecification | undefined;
  MixedInstancesPolicy?: MixedInstancesPolicy | undefined;
  MinSize: number | undefined;
  MaxSize: number | undefined;
  DesiredCapacity: number | undefined;
  PredictedCapacity?: number | undefined;
  DefaultCooldown: number | undefined;
  AvailabilityZones: string[] | undefined;
  LoadBalancerNames?: string[] | undefined;
  TargetGroupARNs?: string[] | undefined;
  HealthCheckType: string | undefined;
  HealthCheckGracePeriod?: number | undefined;
  Instances?: Instance[] | undefined;
  CreatedTime: Date | undefined;
  SuspendedProcesses?: SuspendedProcess[] | undefined;
  PlacementGroup?: string | undefined;
  VPCZoneIdentifier?: string | undefined;
  EnabledMetrics?: EnabledMetric[] | undefined;
  Status?: string | undefined;
  Tags?: TagDescription[] | undefined;
  TerminationPolicies?: string[] | undefined;
  NewInstancesProtectedFromScaleIn?: boolean | undefined;
  ServiceLinkedRoleARN?: string | undefined;
  MaxInstanceLifetime?: number | undefined;
  CapacityRebalance?: boolean | undefined;
  WarmPoolConfiguration?: WarmPoolConfiguration | undefined;
  WarmPoolSize?: number | undefined;
  Context?: string | undefined;
  DesiredCapacityType?: string | undefined;
  DefaultInstanceWarmup?: number | undefined;
  TrafficSources?: TrafficSourceIdentifier[] | undefined;
  InstanceMaintenancePolicy?: InstanceMaintenancePolicy | undefined;
  AvailabilityZoneDistribution?: AvailabilityZoneDistribution | undefined;
  AvailabilityZoneImpairmentPolicy?:
    | AvailabilityZoneImpairmentPolicy
    | undefined;
  CapacityReservationSpecification?:
    | CapacityReservationSpecification
    | undefined;
}
export interface AutoScalingGroupsType {
  AutoScalingGroups: AutoScalingGroup[] | undefined;
  NextToken?: string | undefined;
}
export declare class InvalidNextToken extends __BaseException {
  readonly name: "InvalidNextToken";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidNextToken, __BaseException>);
}
export interface AutoScalingInstanceDetails {
  InstanceId: string | undefined;
  InstanceType?: string | undefined;
  AutoScalingGroupName: string | undefined;
  AvailabilityZone: string | undefined;
  LifecycleState: string | undefined;
  HealthStatus: string | undefined;
  LaunchConfigurationName?: string | undefined;
  LaunchTemplate?: LaunchTemplateSpecification | undefined;
  ProtectedFromScaleIn: boolean | undefined;
  WeightedCapacity?: string | undefined;
}
export interface AutoScalingInstancesType {
  AutoScalingInstances?: AutoScalingInstanceDetails[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeAutoScalingInstancesType {
  InstanceIds?: string[] | undefined;
  MaxRecords?: number | undefined;
  NextToken?: string | undefined;
}
export interface DescribeAutoScalingNotificationTypesAnswer {
  AutoScalingNotificationTypes?: string[] | undefined;
}
export interface DesiredConfiguration {
  LaunchTemplate?: LaunchTemplateSpecification | undefined;
  MixedInstancesPolicy?: MixedInstancesPolicy | undefined;
}
export declare const ScaleInProtectedInstances: {
  readonly Ignore: "Ignore";
  readonly Refresh: "Refresh";
  readonly Wait: "Wait";
};
export type ScaleInProtectedInstances =
  (typeof ScaleInProtectedInstances)[keyof typeof ScaleInProtectedInstances];
export declare const StandbyInstances: {
  readonly Ignore: "Ignore";
  readonly Terminate: "Terminate";
  readonly Wait: "Wait";
};
export type StandbyInstances =
  (typeof StandbyInstances)[keyof typeof StandbyInstances];
export interface RefreshPreferences {
  MinHealthyPercentage?: number | undefined;
  InstanceWarmup?: number | undefined;
  CheckpointPercentages?: number[] | undefined;
  CheckpointDelay?: number | undefined;
  SkipMatching?: boolean | undefined;
  AutoRollback?: boolean | undefined;
  ScaleInProtectedInstances?: ScaleInProtectedInstances | undefined;
  StandbyInstances?: StandbyInstances | undefined;
  AlarmSpecification?: AlarmSpecification | undefined;
  MaxHealthyPercentage?: number | undefined;
  BakeTime?: number | undefined;
}
export interface InstanceRefreshLivePoolProgress {
  PercentageComplete?: number | undefined;
  InstancesToUpdate?: number | undefined;
}
export interface InstanceRefreshWarmPoolProgress {
  PercentageComplete?: number | undefined;
  InstancesToUpdate?: number | undefined;
}
export interface InstanceRefreshProgressDetails {
  LivePoolProgress?: InstanceRefreshLivePoolProgress | undefined;
  WarmPoolProgress?: InstanceRefreshWarmPoolProgress | undefined;
}
export interface RollbackDetails {
  RollbackReason?: string | undefined;
  RollbackStartTime?: Date | undefined;
  PercentageCompleteOnRollback?: number | undefined;
  InstancesToUpdateOnRollback?: number | undefined;
  ProgressDetailsOnRollback?: InstanceRefreshProgressDetails | undefined;
}
export declare const InstanceRefreshStatus: {
  readonly Baking: "Baking";
  readonly Cancelled: "Cancelled";
  readonly Cancelling: "Cancelling";
  readonly Failed: "Failed";
  readonly InProgress: "InProgress";
  readonly Pending: "Pending";
  readonly RollbackFailed: "RollbackFailed";
  readonly RollbackInProgress: "RollbackInProgress";
  readonly RollbackSuccessful: "RollbackSuccessful";
  readonly Successful: "Successful";
};
export type InstanceRefreshStatus =
  (typeof InstanceRefreshStatus)[keyof typeof InstanceRefreshStatus];
export interface InstanceRefresh {
  InstanceRefreshId?: string | undefined;
  AutoScalingGroupName?: string | undefined;
  Status?: InstanceRefreshStatus | undefined;
  StatusReason?: string | undefined;
  StartTime?: Date | undefined;
  EndTime?: Date | undefined;
  PercentageComplete?: number | undefined;
  InstancesToUpdate?: number | undefined;
  ProgressDetails?: InstanceRefreshProgressDetails | undefined;
  Preferences?: RefreshPreferences | undefined;
  DesiredConfiguration?: DesiredConfiguration | undefined;
  RollbackDetails?: RollbackDetails | undefined;
}
export interface DescribeInstanceRefreshesAnswer {
  InstanceRefreshes?: InstanceRefresh[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeInstanceRefreshesType {
  AutoScalingGroupName: string | undefined;
  InstanceRefreshIds?: string[] | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface LaunchConfigurationNamesType {
  LaunchConfigurationNames?: string[] | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface LaunchConfiguration {
  LaunchConfigurationName: string | undefined;
  LaunchConfigurationARN?: string | undefined;
  ImageId: string | undefined;
  KeyName?: string | undefined;
  SecurityGroups?: string[] | undefined;
  ClassicLinkVPCId?: string | undefined;
  ClassicLinkVPCSecurityGroups?: string[] | undefined;
  UserData?: string | undefined;
  InstanceType: string | undefined;
  KernelId?: string | undefined;
  RamdiskId?: string | undefined;
  BlockDeviceMappings?: BlockDeviceMapping[] | undefined;
  InstanceMonitoring?: InstanceMonitoring | undefined;
  SpotPrice?: string | undefined;
  IamInstanceProfile?: string | undefined;
  CreatedTime: Date | undefined;
  EbsOptimized?: boolean | undefined;
  AssociatePublicIpAddress?: boolean | undefined;
  PlacementTenancy?: string | undefined;
  MetadataOptions?: InstanceMetadataOptions | undefined;
}
export interface LaunchConfigurationsType {
  LaunchConfigurations: LaunchConfiguration[] | undefined;
  NextToken?: string | undefined;
}
export interface LifecycleHook {
  LifecycleHookName?: string | undefined;
  AutoScalingGroupName?: string | undefined;
  LifecycleTransition?: string | undefined;
  NotificationTargetARN?: string | undefined;
  RoleARN?: string | undefined;
  NotificationMetadata?: string | undefined;
  HeartbeatTimeout?: number | undefined;
  GlobalTimeout?: number | undefined;
  DefaultResult?: string | undefined;
}
export interface DescribeLifecycleHooksAnswer {
  LifecycleHooks?: LifecycleHook[] | undefined;
}
export interface DescribeLifecycleHooksType {
  AutoScalingGroupName: string | undefined;
  LifecycleHookNames?: string[] | undefined;
}
export interface DescribeLifecycleHookTypesAnswer {
  LifecycleHookTypes?: string[] | undefined;
}
export interface DescribeLoadBalancersRequest {
  AutoScalingGroupName: string | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface LoadBalancerState {
  LoadBalancerName?: string | undefined;
  State?: string | undefined;
}
export interface DescribeLoadBalancersResponse {
  LoadBalancers?: LoadBalancerState[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeLoadBalancerTargetGroupsRequest {
  AutoScalingGroupName: string | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface LoadBalancerTargetGroupState {
  LoadBalancerTargetGroupARN?: string | undefined;
  State?: string | undefined;
}
export interface DescribeLoadBalancerTargetGroupsResponse {
  LoadBalancerTargetGroups?: LoadBalancerTargetGroupState[] | undefined;
  NextToken?: string | undefined;
}
export interface MetricGranularityType {
  Granularity?: string | undefined;
}
export interface MetricCollectionType {
  Metric?: string | undefined;
}
export interface DescribeMetricCollectionTypesAnswer {
  Metrics?: MetricCollectionType[] | undefined;
  Granularities?: MetricGranularityType[] | undefined;
}
export interface NotificationConfiguration {
  AutoScalingGroupName?: string | undefined;
  TopicARN?: string | undefined;
  NotificationType?: string | undefined;
}
export interface DescribeNotificationConfigurationsAnswer {
  NotificationConfigurations: NotificationConfiguration[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeNotificationConfigurationsType {
  AutoScalingGroupNames?: string[] | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface DescribePoliciesType {
  AutoScalingGroupName?: string | undefined;
  PolicyNames?: string[] | undefined;
  PolicyTypes?: string[] | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export declare const PredictiveScalingMaxCapacityBreachBehavior: {
  readonly HonorMaxCapacity: "HonorMaxCapacity";
  readonly IncreaseMaxCapacity: "IncreaseMaxCapacity";
};
export type PredictiveScalingMaxCapacityBreachBehavior =
  (typeof PredictiveScalingMaxCapacityBreachBehavior)[keyof typeof PredictiveScalingMaxCapacityBreachBehavior];
export interface MetricDimension {
  Name: string | undefined;
  Value: string | undefined;
}
export interface Metric {
  Namespace: string | undefined;
  MetricName: string | undefined;
  Dimensions?: MetricDimension[] | undefined;
}
export interface MetricStat {
  Metric: Metric | undefined;
  Stat: string | undefined;
  Unit?: string | undefined;
}
export interface MetricDataQuery {
  Id: string | undefined;
  Expression?: string | undefined;
  MetricStat?: MetricStat | undefined;
  Label?: string | undefined;
  ReturnData?: boolean | undefined;
}
export interface PredictiveScalingCustomizedCapacityMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export interface PredictiveScalingCustomizedLoadMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export interface PredictiveScalingCustomizedScalingMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export declare const PredefinedLoadMetricType: {
  readonly ALBTargetGroupRequestCount: "ALBTargetGroupRequestCount";
  readonly ASGTotalCPUUtilization: "ASGTotalCPUUtilization";
  readonly ASGTotalNetworkIn: "ASGTotalNetworkIn";
  readonly ASGTotalNetworkOut: "ASGTotalNetworkOut";
};
export type PredefinedLoadMetricType =
  (typeof PredefinedLoadMetricType)[keyof typeof PredefinedLoadMetricType];
export interface PredictiveScalingPredefinedLoadMetric {
  PredefinedMetricType: PredefinedLoadMetricType | undefined;
  ResourceLabel?: string | undefined;
}
export declare const PredefinedMetricPairType: {
  readonly ALBRequestCount: "ALBRequestCount";
  readonly ASGCPUUtilization: "ASGCPUUtilization";
  readonly ASGNetworkIn: "ASGNetworkIn";
  readonly ASGNetworkOut: "ASGNetworkOut";
};
export type PredefinedMetricPairType =
  (typeof PredefinedMetricPairType)[keyof typeof PredefinedMetricPairType];
export interface PredictiveScalingPredefinedMetricPair {
  PredefinedMetricType: PredefinedMetricPairType | undefined;
  ResourceLabel?: string | undefined;
}
export declare const PredefinedScalingMetricType: {
  readonly ALBRequestCountPerTarget: "ALBRequestCountPerTarget";
  readonly ASGAverageCPUUtilization: "ASGAverageCPUUtilization";
  readonly ASGAverageNetworkIn: "ASGAverageNetworkIn";
  readonly ASGAverageNetworkOut: "ASGAverageNetworkOut";
};
export type PredefinedScalingMetricType =
  (typeof PredefinedScalingMetricType)[keyof typeof PredefinedScalingMetricType];
export interface PredictiveScalingPredefinedScalingMetric {
  PredefinedMetricType: PredefinedScalingMetricType | undefined;
  ResourceLabel?: string | undefined;
}
export interface PredictiveScalingMetricSpecification {
  TargetValue: number | undefined;
  PredefinedMetricPairSpecification?:
    | PredictiveScalingPredefinedMetricPair
    | undefined;
  PredefinedScalingMetricSpecification?:
    | PredictiveScalingPredefinedScalingMetric
    | undefined;
  PredefinedLoadMetricSpecification?:
    | PredictiveScalingPredefinedLoadMetric
    | undefined;
  CustomizedScalingMetricSpecification?:
    | PredictiveScalingCustomizedScalingMetric
    | undefined;
  CustomizedLoadMetricSpecification?:
    | PredictiveScalingCustomizedLoadMetric
    | undefined;
  CustomizedCapacityMetricSpecification?:
    | PredictiveScalingCustomizedCapacityMetric
    | undefined;
}
export declare const PredictiveScalingMode: {
  readonly ForecastAndScale: "ForecastAndScale";
  readonly ForecastOnly: "ForecastOnly";
};
export type PredictiveScalingMode =
  (typeof PredictiveScalingMode)[keyof typeof PredictiveScalingMode];
export interface PredictiveScalingConfiguration {
  MetricSpecifications: PredictiveScalingMetricSpecification[] | undefined;
  Mode?: PredictiveScalingMode | undefined;
  SchedulingBufferTime?: number | undefined;
  MaxCapacityBreachBehavior?:
    | PredictiveScalingMaxCapacityBreachBehavior
    | undefined;
  MaxCapacityBuffer?: number | undefined;
}
export interface StepAdjustment {
  MetricIntervalLowerBound?: number | undefined;
  MetricIntervalUpperBound?: number | undefined;
  ScalingAdjustment: number | undefined;
}
export interface TargetTrackingMetricStat {
  Metric: Metric | undefined;
  Stat: string | undefined;
  Unit?: string | undefined;
  Period?: number | undefined;
}
export interface TargetTrackingMetricDataQuery {
  Id: string | undefined;
  Expression?: string | undefined;
  MetricStat?: TargetTrackingMetricStat | undefined;
  Label?: string | undefined;
  Period?: number | undefined;
  ReturnData?: boolean | undefined;
}
export declare const MetricStatistic: {
  readonly Average: "Average";
  readonly Maximum: "Maximum";
  readonly Minimum: "Minimum";
  readonly SampleCount: "SampleCount";
  readonly Sum: "Sum";
};
export type MetricStatistic =
  (typeof MetricStatistic)[keyof typeof MetricStatistic];
export interface CustomizedMetricSpecification {
  MetricName?: string | undefined;
  Namespace?: string | undefined;
  Dimensions?: MetricDimension[] | undefined;
  Statistic?: MetricStatistic | undefined;
  Unit?: string | undefined;
  Period?: number | undefined;
  Metrics?: TargetTrackingMetricDataQuery[] | undefined;
}
export declare const MetricType: {
  readonly ALBRequestCountPerTarget: "ALBRequestCountPerTarget";
  readonly ASGAverageCPUUtilization: "ASGAverageCPUUtilization";
  readonly ASGAverageNetworkIn: "ASGAverageNetworkIn";
  readonly ASGAverageNetworkOut: "ASGAverageNetworkOut";
};
export type MetricType = (typeof MetricType)[keyof typeof MetricType];
export interface PredefinedMetricSpecification {
  PredefinedMetricType: MetricType | undefined;
  ResourceLabel?: string | undefined;
}
export interface TargetTrackingConfiguration {
  PredefinedMetricSpecification?: PredefinedMetricSpecification | undefined;
  CustomizedMetricSpecification?: CustomizedMetricSpecification | undefined;
  TargetValue: number | undefined;
  DisableScaleIn?: boolean | undefined;
}
export interface ScalingPolicy {
  AutoScalingGroupName?: string | undefined;
  PolicyName?: string | undefined;
  PolicyARN?: string | undefined;
  PolicyType?: string | undefined;
  AdjustmentType?: string | undefined;
  MinAdjustmentStep?: number | undefined;
  MinAdjustmentMagnitude?: number | undefined;
  ScalingAdjustment?: number | undefined;
  Cooldown?: number | undefined;
  StepAdjustments?: StepAdjustment[] | undefined;
  MetricAggregationType?: string | undefined;
  EstimatedInstanceWarmup?: number | undefined;
  Alarms?: Alarm[] | undefined;
  TargetTrackingConfiguration?: TargetTrackingConfiguration | undefined;
  Enabled?: boolean | undefined;
  PredictiveScalingConfiguration?: PredictiveScalingConfiguration | undefined;
}
export interface PoliciesType {
  ScalingPolicies?: ScalingPolicy[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeScalingActivitiesType {
  ActivityIds?: string[] | undefined;
  AutoScalingGroupName?: string | undefined;
  IncludeDeletedGroups?: boolean | undefined;
  MaxRecords?: number | undefined;
  NextToken?: string | undefined;
}
export interface ProcessType {
  ProcessName: string | undefined;
}
export interface ProcessesType {
  Processes?: ProcessType[] | undefined;
}
export interface DescribeScheduledActionsType {
  AutoScalingGroupName?: string | undefined;
  ScheduledActionNames?: string[] | undefined;
  StartTime?: Date | undefined;
  EndTime?: Date | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface ScheduledUpdateGroupAction {
  AutoScalingGroupName?: string | undefined;
  ScheduledActionName?: string | undefined;
  ScheduledActionARN?: string | undefined;
  Time?: Date | undefined;
  StartTime?: Date | undefined;
  EndTime?: Date | undefined;
  Recurrence?: string | undefined;
  MinSize?: number | undefined;
  MaxSize?: number | undefined;
  DesiredCapacity?: number | undefined;
  TimeZone?: string | undefined;
}
export interface ScheduledActionsType {
  ScheduledUpdateGroupActions?: ScheduledUpdateGroupAction[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeTagsType {
  Filters?: Filter[] | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface TagsType {
  Tags?: TagDescription[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeTerminationPolicyTypesAnswer {
  TerminationPolicyTypes?: string[] | undefined;
}
export interface DescribeTrafficSourcesRequest {
  AutoScalingGroupName: string | undefined;
  TrafficSourceType?: string | undefined;
  NextToken?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface TrafficSourceState {
  TrafficSource?: string | undefined;
  State?: string | undefined;
  Identifier?: string | undefined;
  Type?: string | undefined;
}
export interface DescribeTrafficSourcesResponse {
  TrafficSources?: TrafficSourceState[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeWarmPoolAnswer {
  WarmPoolConfiguration?: WarmPoolConfiguration | undefined;
  Instances?: Instance[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeWarmPoolType {
  AutoScalingGroupName: string | undefined;
  MaxRecords?: number | undefined;
  NextToken?: string | undefined;
}
export interface DetachInstancesAnswer {
  Activities?: Activity[] | undefined;
}
export interface DetachInstancesQuery {
  InstanceIds?: string[] | undefined;
  AutoScalingGroupName: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface DetachLoadBalancersResultType {}
export interface DetachLoadBalancersType {
  AutoScalingGroupName: string | undefined;
  LoadBalancerNames: string[] | undefined;
}
export interface DetachLoadBalancerTargetGroupsResultType {}
export interface DetachLoadBalancerTargetGroupsType {
  AutoScalingGroupName: string | undefined;
  TargetGroupARNs: string[] | undefined;
}
export interface DetachTrafficSourcesResultType {}
export interface DetachTrafficSourcesType {
  AutoScalingGroupName: string | undefined;
  TrafficSources: TrafficSourceIdentifier[] | undefined;
}
export interface DisableMetricsCollectionQuery {
  AutoScalingGroupName: string | undefined;
  Metrics?: string[] | undefined;
}
export interface EnableMetricsCollectionQuery {
  AutoScalingGroupName: string | undefined;
  Metrics?: string[] | undefined;
  Granularity: string | undefined;
}
export interface EnterStandbyAnswer {
  Activities?: Activity[] | undefined;
}
export interface EnterStandbyQuery {
  InstanceIds?: string[] | undefined;
  AutoScalingGroupName: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface ExecutePolicyType {
  AutoScalingGroupName?: string | undefined;
  PolicyName: string | undefined;
  HonorCooldown?: boolean | undefined;
  MetricValue?: number | undefined;
  BreachThreshold?: number | undefined;
}
export interface ExitStandbyAnswer {
  Activities?: Activity[] | undefined;
}
export interface ExitStandbyQuery {
  InstanceIds?: string[] | undefined;
  AutoScalingGroupName: string | undefined;
}
export interface CapacityForecast {
  Timestamps: Date[] | undefined;
  Values: number[] | undefined;
}
export interface LoadForecast {
  Timestamps: Date[] | undefined;
  Values: number[] | undefined;
  MetricSpecification: PredictiveScalingMetricSpecification | undefined;
}
export interface GetPredictiveScalingForecastAnswer {
  LoadForecast: LoadForecast[] | undefined;
  CapacityForecast: CapacityForecast | undefined;
  UpdateTime: Date | undefined;
}
export interface GetPredictiveScalingForecastType {
  AutoScalingGroupName: string | undefined;
  PolicyName: string | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface PutLifecycleHookAnswer {}
export interface PutLifecycleHookType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleTransition?: string | undefined;
  RoleARN?: string | undefined;
  NotificationTargetARN?: string | undefined;
  NotificationMetadata?: string | undefined;
  HeartbeatTimeout?: number | undefined;
  DefaultResult?: string | undefined;
}
export interface PutNotificationConfigurationType {
  AutoScalingGroupName: string | undefined;
  TopicARN: string | undefined;
  NotificationTypes: string[] | undefined;
}
export interface PolicyARNType {
  PolicyARN?: string | undefined;
  Alarms?: Alarm[] | undefined;
}
export interface PutScalingPolicyType {
  AutoScalingGroupName: string | undefined;
  PolicyName: string | undefined;
  PolicyType?: string | undefined;
  AdjustmentType?: string | undefined;
  MinAdjustmentStep?: number | undefined;
  MinAdjustmentMagnitude?: number | undefined;
  ScalingAdjustment?: number | undefined;
  Cooldown?: number | undefined;
  MetricAggregationType?: string | undefined;
  StepAdjustments?: StepAdjustment[] | undefined;
  EstimatedInstanceWarmup?: number | undefined;
  TargetTrackingConfiguration?: TargetTrackingConfiguration | undefined;
  Enabled?: boolean | undefined;
  PredictiveScalingConfiguration?: PredictiveScalingConfiguration | undefined;
}
export interface PutScheduledUpdateGroupActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionName: string | undefined;
  Time?: Date | undefined;
  StartTime?: Date | undefined;
  EndTime?: Date | undefined;
  Recurrence?: string | undefined;
  MinSize?: number | undefined;
  MaxSize?: number | undefined;
  DesiredCapacity?: number | undefined;
  TimeZone?: string | undefined;
}
export interface PutWarmPoolAnswer {}
export interface PutWarmPoolType {
  AutoScalingGroupName: string | undefined;
  MaxGroupPreparedCapacity?: number | undefined;
  MinSize?: number | undefined;
  PoolState?: WarmPoolState | undefined;
  InstanceReusePolicy?: InstanceReusePolicy | undefined;
}
export interface RecordLifecycleActionHeartbeatAnswer {}
export interface RecordLifecycleActionHeartbeatType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleActionToken?: string | undefined;
  InstanceId?: string | undefined;
}
export interface ScalingProcessQuery {
  AutoScalingGroupName: string | undefined;
  ScalingProcesses?: string[] | undefined;
}
export declare class IrreversibleInstanceRefreshFault extends __BaseException {
  readonly name: "IrreversibleInstanceRefreshFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      IrreversibleInstanceRefreshFault,
      __BaseException
    >
  );
}
export interface RollbackInstanceRefreshAnswer {
  InstanceRefreshId?: string | undefined;
}
export interface RollbackInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
}
export interface SetDesiredCapacityType {
  AutoScalingGroupName: string | undefined;
  DesiredCapacity: number | undefined;
  HonorCooldown?: boolean | undefined;
}
export interface SetInstanceHealthQuery {
  InstanceId: string | undefined;
  HealthStatus: string | undefined;
  ShouldRespectGracePeriod?: boolean | undefined;
}
export interface SetInstanceProtectionAnswer {}
export interface SetInstanceProtectionQuery {
  InstanceIds: string[] | undefined;
  AutoScalingGroupName: string | undefined;
  ProtectedFromScaleIn: boolean | undefined;
}
export declare class InstanceRefreshInProgressFault extends __BaseException {
  readonly name: "InstanceRefreshInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InstanceRefreshInProgressFault, __BaseException>
  );
}
export interface StartInstanceRefreshAnswer {
  InstanceRefreshId?: string | undefined;
}
export declare const RefreshStrategy: {
  readonly Rolling: "Rolling";
};
export type RefreshStrategy =
  (typeof RefreshStrategy)[keyof typeof RefreshStrategy];
export interface StartInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
  Strategy?: RefreshStrategy | undefined;
  DesiredConfiguration?: DesiredConfiguration | undefined;
  Preferences?: RefreshPreferences | undefined;
}
export interface TerminateInstanceInAutoScalingGroupType {
  InstanceId: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface UpdateAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  LaunchConfigurationName?: string | undefined;
  LaunchTemplate?: LaunchTemplateSpecification | undefined;
  MixedInstancesPolicy?: MixedInstancesPolicy | undefined;
  MinSize?: number | undefined;
  MaxSize?: number | undefined;
  DesiredCapacity?: number | undefined;
  DefaultCooldown?: number | undefined;
  AvailabilityZones?: string[] | undefined;
  HealthCheckType?: string | undefined;
  HealthCheckGracePeriod?: number | undefined;
  PlacementGroup?: string | undefined;
  VPCZoneIdentifier?: string | undefined;
  TerminationPolicies?: string[] | undefined;
  NewInstancesProtectedFromScaleIn?: boolean | undefined;
  ServiceLinkedRoleARN?: string | undefined;
  MaxInstanceLifetime?: number | undefined;
  CapacityRebalance?: boolean | undefined;
  Context?: string | undefined;
  DesiredCapacityType?: string | undefined;
  DefaultInstanceWarmup?: number | undefined;
  InstanceMaintenancePolicy?: InstanceMaintenancePolicy | undefined;
  AvailabilityZoneDistribution?: AvailabilityZoneDistribution | undefined;
  AvailabilityZoneImpairmentPolicy?:
    | AvailabilityZoneImpairmentPolicy
    | undefined;
  SkipZonalShiftValidation?: boolean | undefined;
  CapacityReservationSpecification?:
    | CapacityReservationSpecification
    | undefined;
}
