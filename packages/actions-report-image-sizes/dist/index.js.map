{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as core from '@actions/core';\nimport * as github from '@actions/github';\nimport { z } from 'zod';\n\ninterface ChangedImage {\n  name: string;\n  platform: string | null;\n  newTag: string;\n  newDigest: string;\n  oldSize: number | null;\n  newSize: number;\n}\n\nconst DockerApiTokenSchema = z.object({\n  token: z.string(),\n});\n\nconst DockerApiManifestListSchema = z.object({\n  mediaType: z.literal('application/vnd.oci.image.index.v1+json'),\n  manifests: z.array(\n    z.object({\n      digest: z.string(),\n      platform: z.object({\n        os: z.string(),\n        architecture: z.string(),\n      }),\n    }),\n  ),\n});\n\nconst DockerApiManifestSchema = z.object({\n  mediaType: z.union([\n    z.literal('application/vnd.docker.distribution.manifest.v2+json'),\n    z.literal('application/vnd.oci.image.manifest.v1+json'),\n  ]),\n  layers: z.array(\n    z.object({\n      digest: z.string(),\n      size: z.number(),\n    }),\n  ),\n});\n\nconst DockerApiImageManifestSchema = z.union([\n  DockerApiManifestListSchema,\n  DockerApiManifestSchema,\n]);\ntype DockerApiImageManifest = z.infer<typeof DockerApiImageManifestSchema>;\n\nfunction getImages(): string[] {\n  const images = core.getInput('images');\n  // Allow for both comma and newline separated lists.\n  return images.split('\\n').flatMap((line) => line.split(',').map((s) => s.trim()));\n}\n\nasync function getDockerHubToken(image: string): Promise<string> {\n  const tokenResponse = await fetch(\n    `https://auth.docker.io/token?service=registry.docker.io&scope=repository:${image}:pull`,\n  );\n  const { token } = DockerApiTokenSchema.parse(await tokenResponse.json());\n  return token;\n}\n\nasync function getImageManifest(\n  token: string,\n  image: string,\n  reference: string,\n): Promise<{ manifest: DockerApiImageManifest; digest: string } | null> {\n  const url = `https://registry-1.docker.io/v2/${image}/manifests/${reference}`;\n  const manifestResponse = await fetch(url, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      Accept:\n        'application/vnd.oci.image.index.v1+json, application/vnd.docker.distribution.manifest.v2+json, application/vnd.oci.image.manifest.v1+json',\n    },\n  });\n\n  if (manifestResponse.status === 404) {\n    console.log(`No manifest found for ${image}:${reference}`);\n    return null;\n  }\n\n  if (manifestResponse.status === 401) {\n    // This can happen if the image does not yet exist in the registry. When we\n    // request an auth token with pull permissions for a repository that does\n    // not exist, Docker Hub returns a token that silently doesn't include any\n    // access permissions at all, and when we go to read the manifest, it fails\n    // with an authorization error instead of a 404. We'll treat authorization\n    // errors as if the image does not exist.\n    console.log(`Authorization error when reading manifest for ${image}:${reference}, skipping...`);\n    return null;\n  }\n\n  if (!manifestResponse.ok) {\n    const status = `${manifestResponse.status} ${manifestResponse.statusText}`;\n    throw new Error(`Failed to fetch manifest for ${image}:${reference}: ${status}`);\n  }\n\n  const rawManifest = await manifestResponse.json();\n  const manifest = DockerApiImageManifestSchema.parse(rawManifest);\n  const digest = manifestResponse.headers.get('Docker-Content-Digest');\n  if (!digest) {\n    throw new Error(`Missing Docker-Content-Digest header for ${url}`);\n  }\n  return { manifest, digest };\n}\n\nasync function getAllImagesFromRegistry(\n  image: string,\n  sha: string,\n): Promise<{ platform: string | null; digest: string; size: number }[] | null> {\n  const token = await getDockerHubToken(image);\n  const manifestResult = await getImageManifest(token, image, sha);\n  if (!manifestResult) {\n    return null;\n  }\n  const { manifest, digest } = manifestResult;\n\n  // The manifest may correspond to a either a manifest list (for multi-platform images)\n  // or a single manifest. Handle the latter, simpler case first.\n  if (manifest.mediaType !== 'application/vnd.oci.image.index.v1+json') {\n    const totalSize = manifest.layers.reduce((acc, layer) => acc + layer.size, 0);\n    return [\n      {\n        platform: null,\n        digest,\n        size: totalSize,\n      },\n    ];\n  }\n\n  // This original manifest will have multiple manifests listed within it.\n  // We'll pick out only the ones we want to compare sizes for. Notably, this\n  // means excluding attestation manifests. We identify those by os/architecture\n  // being \"unknown\".\n  const imageManifests = manifest.manifests.filter(\n    (m) => m.platform.os !== 'unknown' && m.platform.architecture !== 'unknown',\n  );\n\n  const sizes: { platform: string; digest: string; size: number }[] = [];\n\n  for (const imageManifest of imageManifests) {\n    const platform = `${imageManifest.platform.os}/${imageManifest.platform.architecture}`;\n\n    // Get the manifest for this particular platform image.\n    const platformManifestResult = await getImageManifest(token, image, imageManifest.digest);\n    if (!platformManifestResult) {\n      throw new Error(`Could not fetch manifest for ${image}@${imageManifest.digest}`);\n    }\n    const { manifest: platformManifest } = platformManifestResult;\n    if (\n      platformManifest.mediaType !== 'application/vnd.docker.distribution.manifest.v2+json' &&\n      platformManifest.mediaType !== 'application/vnd.oci.image.manifest.v1+json'\n    ) {\n      throw new Error(`Unexpected manifest media type: ${platformManifest.mediaType}`);\n    }\n    const totalSize = platformManifest.layers.reduce((acc, layer) => acc + layer.size, 0);\n\n    sizes.push({ platform, digest: imageManifest.digest, size: totalSize });\n  }\n\n  return sizes;\n}\n\nasync function commentSizeReport(title: string, changedImages: ChangedImage[]) {\n  // Don't comment if there were no changed images.\n  if (changedImages.length === 0) return;\n\n  // Don't comment if no token was provided.\n  const token = core.getInput('token');\n  if (!token) return;\n\n  // Don't comment if this was not a PR event.\n  const prNumber = github.context.payload.pull_request?.number;\n  if (!prNumber) return;\n\n  // Find existing comment to update; may or may not exist.\n  const octokit = github.getOctokit(token);\n  const comments = await octokit.paginate(\n    'GET /repos/{owner}/{repo}/issues/{issue_number}/comments',\n    {\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      issue_number: prNumber,\n    },\n  );\n\n  const existingComment = comments.find(\n    (comment) =>\n      comment.body?.startsWith(`## ${title}`) && comment.user?.login === 'github-actions[bot]',\n  );\n\n  // Sort images by name and platform.\n  const sortedImages = changedImages.sort((a, b) => {\n    if (a.name !== b.name) return a.name.localeCompare(b.name);\n    return a.newTag.localeCompare(b.newTag);\n  });\n\n  // Generate new comment body.\n  const lines = [\n    `## ${title}`,\n    '',\n    // Markdown table header\n    '| Image | Platform | Old Size | New Size | Change |',\n    '| --- | --- | --- | --- | --- |',\n  ];\n\n  for (const image of sortedImages) {\n    // Remove the leading \"sha256:\" from the digest and construct a link to the\n    // image on Docker Hub.\n    const digest = image.newDigest.slice(7);\n    const imageLink = `https://hub.docker.com/layers/${image.name}/${image.newTag}/images/sha256-${digest}?context=explore`;\n\n    // Compute sizes and deltas\n    const oldSize = image.oldSize ? `${(image.oldSize / 1024 / 1024).toFixed(2)} MB` : 'N/A';\n    const newSize = `${(image.newSize / 1024 / 1024).toFixed(2)} MB`;\n    const change = image.oldSize\n      ? `${((image.newSize / image.oldSize - 1) * 100).toFixed(2)}%`\n      : 'N/A';\n\n    lines.push(\n      `| [${image.name}:${image.newTag}](${imageLink}) | ${image.platform} | ${oldSize} | ${newSize} | ${change} |`,\n    );\n  }\n\n  const body = lines.join('\\n');\n\n  // Update or create comment.\n  if (existingComment) {\n    octokit.rest.issues.updateComment({\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      comment_id: existingComment.id,\n      body,\n    });\n  } else {\n    octokit.rest.issues.createComment({\n      owner: github.context.repo.owner,\n      repo: github.context.repo.repo,\n      issue_number: prNumber,\n      body,\n    });\n  }\n}\n\nfunction logSizeReport(changedImages: ChangedImage[]) {\n  changedImages.forEach((image) => {\n    const delta =\n      image.oldSize != null ? ((image.newSize / image.oldSize - 1) * 100).toFixed(2) : null;\n    const formattedOldSize = image.oldSize\n      ? `${(image.oldSize / 1024 / 1024).toFixed(2)} MB`\n      : null;\n    const formattedNewSize = `${(image.newSize / 1024 / 1024).toFixed(2)} MB`;\n    const formattedDelta = delta ? `${delta}%` : null;\n    const size = delta\n      ? `${formattedOldSize} -> ${formattedNewSize} (${formattedDelta})`\n      : formattedNewSize;\n    console.log(`${image.name}:${image.newTag} (${image.platform}): ${size}`);\n  });\n}\n\nasync function main() {\n  const images = getImages();\n  const title = core.getInput('title');\n  const sha = core.getInput('sha');\n\n  if (!title) throw new Error('Title is required');\n  if (!sha) throw new Error('SHA is required');\n\n  const changedImages: ChangedImage[] = [];\n\n  for (const image of images) {\n    const newImages = await getAllImagesFromRegistry(image, sha);\n\n    // If there's no build for this SHA, there's nothing to compare against.\n    if (!newImages) {\n      continue;\n    }\n\n    // If there's no previous build, we can't compare sizes, but we can still\n    // report the size of the new images.\n    const oldImages = await getAllImagesFromRegistry(image, 'latest');\n\n    for (const newImage of newImages) {\n      // Find the old image with the same platform. If there isn't a match\n      // and the new image doesn't have a platform, try to find an old image for\n      // `linux/amd64`. This handles the case of `prairielearn/prairielearn`\n      // (which is built during PR CI with a legacy builder that doesn't upload a manifest\n      // with an explicit platform).\n      //\n      // TODO: Build `prairielearn/prairielearn` with buildx and remove this hack.\n      let oldImage = oldImages?.find((image) => image.platform === newImage.platform);\n      if (!oldImage && newImage.platform === null) {\n        oldImage = oldImages?.find((image) => image.platform === 'linux/amd64');\n      }\n      changedImages.push({\n        name: image,\n        platform: newImage.platform ?? oldImage?.platform ?? null,\n        newTag: sha,\n        newDigest: newImage.digest,\n        oldSize: oldImage?.size ?? null,\n        newSize: newImage.size,\n      });\n    }\n  }\n\n  logSizeReport(changedImages);\n\n  if (changedImages.length > 0) {\n    await commentSizeReport(title, changedImages);\n  }\n}\n\nmain().catch((err) => {\n  console.error(err);\n  core.setFailed(err.message);\n});\n"]}