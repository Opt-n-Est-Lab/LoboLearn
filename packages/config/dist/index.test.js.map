{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../src/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { writeFile } from 'node:fs/promises';\n\nimport { assert } from 'chai';\nimport { withFile } from 'tmp-promise';\nimport { z } from 'zod';\n\nimport { ConfigLoader, makeFileConfigSource, makeLiteralConfigSource } from './index.js';\n\ndescribe('config', () => {\n  it('loads config with defaults', async () => {\n    const schema = z.object({\n      foo: z.string().nullable().default(null),\n      bar: z.string().default('bar'),\n    });\n    const loader = new ConfigLoader(schema);\n\n    await loader.loadAndValidate();\n\n    assert.equal(loader.config.foo, null);\n    assert.equal(loader.config.bar, 'bar');\n  });\n\n  it('loads config from a file', async () => {\n    const schema = z.object({\n      foo: z.string().optional().nullable(),\n      bar: z.string().default('bar'),\n      baz: z.string().default('baz'),\n    });\n    const loader = new ConfigLoader(schema);\n\n    await withFile(async ({ path }) => {\n      await writeFile(path, JSON.stringify({ foo: 'bar', bar: 'bar' }));\n      await loader.loadAndValidate([makeFileConfigSource(path)]);\n    });\n\n    assert.equal(loader.config.foo, 'bar');\n    assert.equal(loader.config.bar, 'bar');\n    assert.equal(loader.config.baz, 'baz');\n  });\n\n  it('overrides deep objects', async () => {\n    const schema = z.object({\n      features: z.record(z.string(), z.boolean()).default({\n        foo: true,\n        bar: false,\n      }),\n    });\n    const loader = new ConfigLoader(schema);\n\n    await loader.loadAndValidate([\n      makeLiteralConfigSource({\n        features: {\n          foo: false,\n          baz: true,\n        },\n      }),\n    ]);\n\n    assert.equal(loader.config.features.foo, false);\n    assert.equal(loader.config.features.bar, false);\n    assert.equal(loader.config.features.baz, true);\n  });\n\n  it('replaces arrays', async () => {\n    const schema = z.object({\n      courseDirs: z\n        .array(z.string())\n        .default(['exampleCourse', '/course', '/course2', '/course3', '/course4', '/course5']),\n    });\n    const loader = new ConfigLoader(schema);\n\n    await loader.loadAndValidate([\n      makeLiteralConfigSource({\n        courseDirs: ['testCourse', '/mycourse'],\n      }),\n    ]);\n\n    assert.deepEqual(loader.config.courseDirs, ['testCourse', '/mycourse']);\n  });\n\n  it('maintains object identity when loading config', async () => {\n    const schema = z.object({});\n    const loader = new ConfigLoader(schema);\n    const config = loader.config;\n\n    await loader.loadAndValidate();\n\n    assert.strictEqual(config, loader.config);\n  });\n});\n"]}