{"version":3,"file":"aws-client-shared-config.test.js","sourceRoot":"","sources":["../../src/tests/aws-client-shared-config.test.ts"],"names":[],"mappings":";;AAAA,gEAA4D;AAE5D,gFAAqD;AAErD,wBAAU,CAAC,QAAQ,GAAG,KAAK,CAAC;AAE5B,MAAM,UAAU,GAAG,IAAI,wBAAU,EAAE,CAAC;AAEpC,UAAU,CAAC,GAAG,CAAC,0BAA0B,EAAE,kCAAI,EAAE;IAC/C,KAAK,EAAE;QACL;YACE,IAAI,EAAE,wEAAwE;SAC/E;QACD;YACE,IAAI,EAAE,oFAAoF;SAC3F;QACD;YACE,IAAI,EAAE,4EAA4E;SACnF;QACD;YACE,IAAI,EAAE,wFAAwF;SAC/F;QACD;YACE,IAAI,EAAE,gFAAgF;SACvF;KACF;IACD,OAAO,EAAE;QACP;YACE,IAAI,EAAE,2EAA2E;YACjF,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;SAC1C;QACD;YACE,IAAI,EAAE,8EAA8E;YACpF,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;SAC1C;QACD;YACE,IAAI,EAAE,mEAAmE;YACzE,MAAM,EAAE,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;SAC1C;KACF;CACF,CAAC,CAAC","sourcesContent":["import { RuleTester } from '@typescript-eslint/rule-tester';\n\nimport rule from '../rules/aws-client-shared-config';\n\nRuleTester.afterAll = after;\n\nconst ruleTester = new RuleTester();\n\nruleTester.run('aws-client-shared-config', rule, {\n  valid: [\n    {\n      code: \"import { S3 } from '@aws-sdk/client-s3'; new S3(makeS3ClientConfig());\",\n    },\n    {\n      code: \"import { S3Client } from '@aws-sdk/client-s3'; new S3Client(makeS3ClientConfig());\",\n    },\n    {\n      code: \"import { EC2 } from '@aws-sdk/client-ec2'; new EC2(makeAwsClientConfig());\",\n    },\n    {\n      code: \"import { EC2Client } from '@aws-sdk/client-ec2'; new EC2Client(makeAwsClientConfig());\",\n    },\n    {\n      code: \"import { EC2 } from '@aws-sdk/client-ec2'; new EC2(aws.makeAwsClientConfig());\",\n    },\n  ],\n  invalid: [\n    {\n      code: \"import { S3 } from '@aws-sdk/client-s3'; new S3({ region: 'us-east-2' });\",\n      errors: [{ messageId: 'improperConfig' }],\n    },\n    {\n      code: \"import { EC2 } from '@aws-sdk/client-ec2'; new EC2({ region: 'us-east-2' });\",\n      errors: [{ messageId: 'improperConfig' }],\n    },\n    {\n      code: \"import { S3 } from '@aws-sdk/client-s3'; new S3(wrongFunction());\",\n      errors: [{ messageId: 'improperConfig' }],\n    },\n  ],\n});\n"]}