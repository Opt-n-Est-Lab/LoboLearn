{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB;;;;;;;;;;GAUG;AACH,MAAM,UAAU,QAAQ,CAAC,UAAkB,EAAE,SAAiB,EAAE,WAAW,GAAG,IAAI;IAChF,OAAO,uBAAuB,CAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,EAC9D,WAAW,CACZ,CAAC;AACJ,CAAC;AAED;;;;;;;;;;;;;GAaG;AACH,MAAM,UAAU,uBAAuB,CAAC,OAAe,EAAE,WAAW,GAAG,IAAI;IACzE,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAClC,IAAI,OAAO,KAAK,GAAG;QAAE,OAAO,WAAW,CAAC;IACxC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;AAC5E,CAAC","sourcesContent":["import path from 'path';\n\n/**\n * Returns true if the parent path contains the child path. Used to allow code\n * to make checks that prevent directory traversal attacks.\n *\n * @param parentPath The path of the parent directory. Must be absolute.\n * @param childPath The path of the child file/directory. If relative, resolved\n * in relation to the parent directory.\n * @param includeSelf Return value if both paths point to the same directory.\n * @return True if the child path is a child of the parent path, false\n * otherwise.\n */\nexport function contains(parentPath: string, childPath: string, includeSelf = true): boolean {\n  return isContainedRelativePath(\n    path.relative(parentPath, path.resolve(parentPath, childPath)),\n    includeSelf,\n  );\n}\n\n/**\n * Returns true if the path, when normalized, is relative and does not require a\n * visit to the parent directory. In other words, returns true if, when resolved\n * against any arbitrary directory, will never result in a file outside of that\n * directory. Used to allow code to make checks that prevent directory traversal\n * attacks.\n *\n * @param relPath The path of the child directory. Path will be normalized\n * before checking.\n * @param includeSelf Return value if the path refers to the directory itself\n * (i.e. '.' or '').\n * @return True if the path is contained within the current directory, false\n * otherwise.\n */\nexport function isContainedRelativePath(relPath: string, includeSelf = true): boolean {\n  relPath = path.normalize(relPath);\n  if (relPath === '.') return includeSelf;\n  return !(relPath.split(path.sep)[0] === '..' || path.isAbsolute(relPath));\n}\n"]}