{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAE1D,oGAAoG;AACpG,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAEnD,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB;QACE,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,CAAC,KAAK,CAAC;QAChB,UAAU,EAAE,CAAC,MAAM,CAAC;KACrB;CACF,CAAC;AACF,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,GAAG,EAAE;QACH,KAAK,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI;QAC7B,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAClB,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;KACjB;CACF,CAAC;AACF,MAAM,CAAC,MAAM,QAAQ,GAAG;IACtB,GAAG,EAAE;QACH,KAAK,CAAC,IAAa;YACjB,OAAO,CACL,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE;gBACvB,OAAO,EAAE,UAAU;gBACnB,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE;aAC7B,CAAC,GAAG,IAAI,CACV,CAAC;QACJ,CAAC;KACF;CACF,CAAC;AACF,MAAM,CAAC,MAAM,OAAO,GAAG,EAAE,CAAC","sourcesContent":["import type { AstPath } from 'prettier';\nimport { formatDialect, postgresql } from 'sql-formatter';\n\n// Loosely based on the implementation in https://github.com/un-ts/prettier/tree/master/packages/sql\npostgresql.tokenizerOptions.operators?.push('<=>');\n\nexport const languages = [\n  {\n    name: 'SQL',\n    parsers: ['sql'],\n    extensions: ['.sql'],\n  },\n];\nexport const parsers = {\n  sql: {\n    parse: (text: string) => text,\n    astFormat: 'sql',\n    locStart: () => -1,\n    locEnd: () => -1,\n  },\n};\nexport const printers = {\n  sql: {\n    print(path: AstPath) {\n      return (\n        formatDialect(path.node, {\n          dialect: postgresql,\n          paramTypes: { named: ['$'] },\n        }) + '\\n'\n      );\n    },\n  },\n};\nexport const options = {};\n"]}